<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
   <id>entity.format.nonproprietary.1</id>
   <name>Non proprietary entity format</name>
   <description>Check that all entities use non-propietary formats.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  global mdq_params
  
  # Check the data formats for all data entities.
  # The check fails if the specified data format matches a format marked as proprietary.
  # This check uses a reformatted copy of the DataONE format list, that is usually kept in the file 
  # /opt/local/metadig/DataONEformats.csv. This file is manually edited to mark specific formats as proprietary. This file is obtained using the DataONE 'formats'
  # service, i.e 'https://cn.dataone.org/cn/v2/formats'.
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  import csv
  
  def isProprietary(formats, thisFormat):
    for row in formats:
      if (row[4].lower().strip() in ("yes", "y", "true", "t", "1")):
        if(row[2].lower().strip() == thisFormat.lower().strip()):
          return True
        if(row[3].lower().strip() == thisFormat.lower().strip()):
          return True
        
    return False
  
  formatsFile = ""
  # The DataONE formats filename is passed via the 'mdq_params' hash
  if('mdq_params' not in globals()):
    output = "Internal error running check, mdq_params not available to check."
    status = "ERROR"
    return False
  else:
    formatsFile = mdq_params['DataONEformatsFile']
  
  # Create list of list with the DataONE formats
  formats = []
  with open(formatsFile, 'rb') as csvfile:
      fmtreader = csv.reader(csvfile, delimiter=',', quotechar='"')
      for row in fmtreader:
        formats.append(row)

  proprietaryFound = []
  # A resource format is not present
  if 'resourceFormats' not in globals() or resourceFormats is None:
    output = "A resource format was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(resourceFormats)):
    output = "The resource format is blank."   
    status = "FAILURE"
    return False
    
  for i in range(0, len(resourceFormats)):
    # Check each resource format and see if it is in the 'proprietary' list, which
    # is based on all formats from DataONE that have been manually determined to be
    # proprietary.
    thisFormat = resourceFormats.get(i)
    if(isProprietary(formats, thisFormat)):
      proprietaryFound.append(thisFormat)
      
  if(len(proprietaryFound) > 0):
    fmts = list(set([f.encode('UTF8') for f in proprietaryFound]))
    output = "These proprietary data resource formats were found: '{}' (out of {} total formats.)".format(', '.join(fmts), len(resourceFormats))
    status = "FAILURE"
    return False
  else:
    output = "No proprietary data resource formats found (out of {} total formats.".format(len(resourceFormats))
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>resourceFormats</name>
      <xpath>
          /*/distributionInfo/MD_Distribution/distributionFormat/MD_Format/name//text() |
          /*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorFormat/MD_Format/name//text() |
          /DryadDataFile/format/CharacterString |
          //resourceFormat/MD_Format/name | 
          /eml/dataset/*/physical/dataFormat//formatName |
          /resource/formats/format
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</mdq:check>

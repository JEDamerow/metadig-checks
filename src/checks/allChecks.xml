<?xml version="1.0" encoding="UTF-8"?>
<mdq:allChecks xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
<check>
   <id>Acknowledgement</id>
   <name>Acknowledgement</name>
   <description>Checks to see if at least one Acknowledgement concept exists.</description>
   <type>ACDD_recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Acknowledgement is present."
                                        
  if(Acknowledgement is not None and len(str(Acknowledgement)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Acknowledgement concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Acknowledgement</name>
      <xpath>(/MD_Metadata/identificationInfo/*/credit) or (/*/identificationInfo/*/credit)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AdditionalAttributes</id>
   <name>Additional Attributes</name>
   <description>Checks to see if at least one Additional Attributes concept exists.</description>
   <type>ECHO_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AdditionalAttributes is present."
                                        
  if(AdditionalAttributes is not None and len(str(AdditionalAttributes)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AdditionalAttributes concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AdditionalAttributes</name>
      <xpath>(//AdditionalAttributes/AdditionalAttribute) or (//AdditionalAttribute)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AdditionalAttributesContentInformation</id>
   <name>Additional Attributes - Content Information</name>
   <description>Checks to see if at least one Additional Attributes - Content Information concept exists.</description>
   <type>CMR-Granule_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AdditionalAttributesContentInformation is present."
                                        
  if(AdditionalAttributesContentInformation is not None and len(str(AdditionalAttributesContentInformation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AdditionalAttributesContentInformation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AdditionalAttributesContentInformation</name>
      <xpath>(//gmd:contentInfo/gmd:MD_CoverageDescription/gmd:dimension/gmd:MD_Band/gmd:otherProperty/gco:Record/eos:AdditionalAttributes/eos:AdditionalAttribute[eos:reference/eos:EOS_AdditionalAttributeDescription/eos:type/eos:EOS_AdditionalAttributeTypeCode='contentInformation']/eos:value</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AdditionalAttributesDescriptiveKeywords</id>
   <name>Additional Attributes - Descriptive Keywords</name>
   <description>Checks to see if at least one Additional Attributes - Descriptive Keywords concept exists.</description>
   <type>CMR-Granule_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AdditionalAttributesDescriptiveKeywords is present."
                                        
  if(AdditionalAttributesDescriptiveKeywords is not None and len(str(AdditionalAttributesDescriptiveKeywords)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AdditionalAttributesDescriptiveKeywords concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AdditionalAttributesDescriptiveKeywords</name>
      <xpath>(/*/gmd:identificationInfo/*/gmd:descriptiveKeywords/gmd:MD_Keywords[not(contains(gmd:type/gmd:MD_KeywordTypeCode,'project')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'theme')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'place')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'platform')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'dataCent'))
            and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'discipline')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'stratum')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'temporal')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'featureType')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'process')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'product')) and
            not(contains(gmd:type/gmd:MD_KeywordTypeCode,'dataResolution')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'service')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'instrument'))]/gmd:keyword</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AdditionalAttributesGeographicIdentifier</id>
   <name>Additional Attributes - Geographic Identifier</name>
   <description>Checks to see if at least one Additional Attributes - Geographic Identifier concept exists.</description>
   <type>CMR-Granule_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AdditionalAttributesGeographicIdentifier is present."
                                        
  if(AdditionalAttributesGeographicIdentifier is not None and len(str(AdditionalAttributesGeographicIdentifier)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AdditionalAttributesGeographicIdentifier concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AdditionalAttributesGeographicIdentifier</name>
      <xpath>(/*/gmd:identificationInfo/*/gmd:extent/gmd:EX_Extent/gmd:geographicElement/gmd:EX_GeographicDescription/gmd:geographicIdentifier/gmd:MD_Identifier/gmd:code</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AdditionalAttributesInstrument</id>
   <name>Additional Attributes - Instrument</name>
   <description>Checks to see if at least one Additional Attributes - Instrument concept exists.</description>
   <type>CMR-Granule_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AdditionalAttributesInstrument is present."
                                        
  if(AdditionalAttributesInstrument is not None and len(str(AdditionalAttributesInstrument)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AdditionalAttributesInstrument concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AdditionalAttributesInstrument</name>
      <xpath>(//instrument/*/otherProperty/Record/AdditionalAttributes/AdditionalAttribute[/reference/EOS_AdditionalAttributeDescription/type/EOS_AdditionalAttributeTypeCode='instrumentInformation']/value) or (//instrument/*/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/type/EOS_AdditionalAttributeTypeCode='instrumentInformation']/value) or (//platform/EOS_Platform/instrument/EOS_Instrument/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[/reference/EOS_AdditionalAttributeDescription/type/EOS_AdditionalAttributeTypeCode='instrumentInformation']/value)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AdditionalAttributesPlatform</id>
   <name>Additional Attributes - Platform</name>
   <description>Checks to see if at least one Additional Attributes - Platform concept exists.</description>
   <type>CMR-Granule_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AdditionalAttributesPlatform is present."
                                        
  if(AdditionalAttributesPlatform is not None and len(str(AdditionalAttributesPlatform)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AdditionalAttributesPlatform concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AdditionalAttributesPlatform</name>
      <xpath>(//platform/EOS_Platform/otherProperty/Record/AdditionalAttributes/AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/type/EOS_AdditionalAttributeTypeCode='platformInformation']/value) or (//platform/*/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/type/EOS_AdditionalAttributeTypeCode='platformInformation']/value) or (//platform/EOS_Platform/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/type/EOS_AdditionalAttributeTypeCode='platformInformation']/value)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AdditionalAttributesQualityInformation</id>
   <name>Additional Attributes - Quality Information</name>
   <description>Checks to see if at least one Additional Attributes - Quality Information concept exists.</description>
   <type>CMR-Granule_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AdditionalAttributesQualityInformation is present."
                                        
  if(AdditionalAttributesQualityInformation is not None and len(str(AdditionalAttributesQualityInformation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AdditionalAttributesQualityInformation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AdditionalAttributesQualityInformation</name>
      <xpath>(//gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_QuantitativeAttributeAccuracy/gmd:result/gmd:DQ_QuantitativeResult/gmd:value/gco:Record/eos:AdditionalAttributes/eos:AdditionalAttribute[eos:reference/eos:EOS_AdditionalAttributeDescription/eos:type/eos:EOS_AdditionalAttributeTypeCode='qualityInformation']/eos:value</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AdditionalLineageDocumentation</id>
   <name>Additional Lineage Documentation</name>
   <description>Checks to see if at least one Additional Lineage Documentation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AdditionalLineageDocumentation is present."
                                        
  if(AdditionalLineageDocumentation is not None and len(str(AdditionalLineageDocumentation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AdditionalLineageDocumentation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AdditionalLineageDocumentation</name>
      <xpath>(/mdb:MD_Metadata/mdb:resourceLineage/mrl:LI_Lineage/mrl:additionalDocumentation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AdditionalResourceDocumentation</id>
   <name>Additional Resource Documentation</name>
   <description>Checks to see if at least one Additional Resource Documentation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AdditionalResourceDocumentation is present."
                                        
  if(AdditionalResourceDocumentation is not None and len(str(AdditionalResourceDocumentation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AdditionalResourceDocumentation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AdditionalResourceDocumentation</name>
      <xpath>(/mdb:MD_Metadata/mdb:identificationInfo/*/mri:additionalDocumentation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AdditionalUsageDocumentation</id>
   <name>Additional Usage Documentation</name>
   <description>Checks to see if at least one Additional Usage Documentation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AdditionalUsageDocumentation is present."
                                        
  if(AdditionalUsageDocumentation is not None and len(str(AdditionalUsageDocumentation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AdditionalUsageDocumentation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AdditionalUsageDocumentation</name>
      <xpath>(/mdb:MD_Metadata/mdb:identificationInfo/*/mri:resourceSpecificUsage/mri:MD_Usage/mri:additionalDocumentation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AlgorithmCitation</id>
   <name>Algorithm Citation</name>
   <description>Checks to see if at least one Algorithm Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AlgorithmCitation is present."
                                        
  if(AlgorithmCitation is not None and len(str(AlgorithmCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AlgorithmCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AlgorithmCitation</name>
      <xpath>(/mdb:MD_Metadata/mdb:resourceLineage/mrl:LI_Lineage/mrl:processStep/mrl:LE_ProcessStep/mrl:processingInformation/mrl:LE_Processing/mrl:algorithm/mrl:LE_Algorithm/mrl:citation/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AlternateMetadataCitation</id>
   <name>Alternate Metadata Citation</name>
   <description>Checks to see if at least one Alternate Metadata Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AlternateMetadataCitation is present."
                                        
  if(AlternateMetadataCitation is not None and len(str(AlternateMetadataCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AlternateMetadataCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AlternateMetadataCitation</name>
      <xpath>(/mdb:MD_Metadata/mdb:alternativeMetadataReference/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AncillaryKeyword</id>
   <name>Ancillary Keyword</name>
   <description>Checks to see if at least one Ancillary Keyword concept exists.</description>
   <type>CMR-Collection_Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AncillaryKeyword is present."
                                        
  if(AncillaryKeyword is not None and len(str(AncillaryKeyword)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AncillaryKeyword concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AncillaryKeyword</name>
      <xpath>(/*/gmd:identificationInfo/*/gmd:descriptiveKeywords/gmd:MD_Keywords[not(contains(gmd:type/gmd:MD_KeywordTypeCode,'project')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'theme')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'place')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'platform')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'dataCent'))
            and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'discipline')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'stratum')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'temporal')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'featureType')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'process')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'product')) and
            not(contains(gmd:type/gmd:MD_KeywordTypeCode,'dataResolution')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'service')) and not(contains(gmd:type/gmd:MD_KeywordTypeCode,'instrument'))]/gmd:keyword</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ApplicationSchemaInformation</id>
   <name>Application Schema Information</name>
   <description>Checks to see if at least one Application Schema Information concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ApplicationSchemaInformation is present."
                                        
  if(ApplicationSchemaInformation is not None and len(str(ApplicationSchemaInformation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ApplicationSchemaInformation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ApplicationSchemaInformation</name>
      <xpath>(/mdb:MD_Metadata/mdb:applicationSchemaInfo/mas:MD_ApplicationSchemaInformation/mas:name/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AssociatedDIFs</id>
   <name>AssociatedDIFs</name>
   <description>Checks to see if at least one AssociatedDIFs concept exists.</description>
   <type>ECHO_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AssociatedDIFs is present."
                                        
  if(AssociatedDIFs is not None and len(str(AssociatedDIFs)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AssociatedDIFs concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AssociatedDIFs</name>
      <xpath>(/MD_Metadata/identificationInfo/MD_DataIdentification/associatedResource/MD_AssociatedResource/name/CI_Citation/identifier/MD_Identifier/code) or (/*/identificationInfo/*/aggregationInfo/MD_AggregateInformation/aggregateDataSetIdentifier/MD_Identifier/code)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Association</id>
   <name>Association</name>
   <description>Checks to see if at least one Association concept exists.</description>
   <type>CSWCoreQueryables</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Association is present."
                                        
  if(Association is not None and len(str(Association)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Association concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Association</name>
      <xpath>(/MD_Metadata/identificationInfo/*/associatedResource/MD_AssociatedResource) or (/*/resourceLineage/LI_Lineage/source) or (/*/identificationInfo/*/aggregationInfo/MD_AggregateInformation) or (/*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/source) or (/*/dataQualityInfo/DQ_DataQuality/lineage/LE_Lineage/source)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AttributeAccuracyExplanation</id>
   <name>Attribute Accuracy Explanation</name>
   <description>Checks to see if at least one Attribute Accuracy Explanation concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AttributeAccuracyExplanation is present."
                                        
  if(AttributeAccuracyExplanation is not None and len(str(AttributeAccuracyExplanation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AttributeAccuracyExplanation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AttributeAccuracyExplanation</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_NonQuantitativeAttributeCorrectness/mdq:evaluationMethod/mdq:DQ_EvaluationMethod/mdq:evaluationMethodDescription</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AttributeAccuracyReport</id>
   <name>Attribute Accuracy Report</name>
   <description>Checks to see if at least one Attribute Accuracy Report concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AttributeAccuracyReport is present."
                                        
  if(AttributeAccuracyReport is not None and len(str(AttributeAccuracyReport)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AttributeAccuracyReport concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AttributeAccuracyReport</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_NonQuantitativeAttributeCorrectness/result/DQ_DescriptiveResult/statement) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_QuantitativeAttributeAccuracy/result/DQ_DescriptiveResult/statement)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AttributeAccuracyValue</id>
   <name>Attribute Accuracy Value</name>
   <description>Checks to see if at least one Attribute Accuracy Value concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AttributeAccuracyValue is present."
                                        
  if(AttributeAccuracyValue is not None and len(str(AttributeAccuracyValue)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AttributeAccuracyValue concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AttributeAccuracyValue</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_NonQuantitativeAttributeCorrectness/result/DQ_QuantitativeResult/value) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_QuantitativeAttributeAccuracy/result/DQ_QuantitativeResult/value)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AttributeConstraints</id>
   <name>Attribute Constraints</name>
   <description>Checks to see if at least one Attribute Constraints concept exists.</description>
   <type>LTER_Integration</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AttributeConstraints is present."
                                        
  if(AttributeConstraints is not None and len(str(AttributeConstraints)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AttributeConstraints concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AttributeConstraints</name>
      <xpath>(/eml:eml/*/dataTable/constraint</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>AttributeList</id>
   <name>Attribute List</name>
   <description>Checks to see if at least one Attribute List concept exists.</description>
   <type>LTER_Integration</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept AttributeList is present."
                                        
  if(AttributeList is not None and len(str(AttributeList)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "AttributeList concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>AttributeList</name>
      <xpath>(/eml:eml/*/dataTable/attributeList</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Binding</id>
   <name>Binding</name>
   <description>Checks to see if at least one Binding concept exists.</description>
   <type>WSDL_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Binding is present."
                                        
  if(Binding is not None and len(str(Binding)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Binding concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Binding</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>BoundingBox</id>
   <name>Bounding Box</name>
   <description>Checks to see if at least one Bounding Box concept exists.</description>
   <type>CSWCoreQueryables</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept BoundingBox is present."
                                        
  if(BoundingBox is not None and len(str(BoundingBox)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "BoundingBox concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>BoundingBox</name>
      <xpath>(/MD_Metadata/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox) or (/*/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox) or (/*/identificationInfo/SV_ServiceIdentification/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox) or (/eml/*/coverage/geographicCoverage/boundingCoordinates) or (/resource/geoLocations/geoLocation/geoLocationPlace)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>BoundingPolygon</id>
   <name>Bounding Polygon</name>
   <description>Checks to see if at least one Bounding Polygon concept exists.</description>
   <type>extent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept BoundingPolygon is present."
                                        
  if(BoundingPolygon is not None and len(str(BoundingPolygon)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "BoundingPolygon concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>BoundingPolygon</name>
      <xpath>(/MD_Metadata/identificationInfo/MD_DataIdentification/extent/EX_Extent/geographicElement/EX_BoundingPolygon) or (/*/identificationInfo/*/extent/EX_Extent/geographicElement/EX_BoundingPolygon)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>BrowseDescription</id>
   <name>Browse Description</name>
   <description>Checks to see if at least one Browse Description concept exists.</description>
   <type>browseGraphic</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept BrowseDescription is present."
                                        
  if(BrowseDescription is not None and len(str(BrowseDescription)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "BrowseDescription concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>BrowseDescription</name>
      <xpath>(/MD_Metadata/identificationInfo/*/graphicOverview/MD_BrowseGraphic/fileDescription) or (/*/identificationInfo/*/graphicOverview/MD_BrowseGraphic/fileDescription)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>BrowseFileName</id>
   <name>Browse File Name</name>
   <description>Checks to see if at least one Browse File Name concept exists.</description>
   <type>browseGraphic</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept BrowseFileName is present."
                                        
  if(BrowseFileName is not None and len(str(BrowseFileName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "BrowseFileName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>BrowseFileName</name>
      <xpath>(/MD_Metadata/identificationInfo/*/graphicOverview/MD_BrowseGraphic/fileName) or (/*/identificationInfo/*/graphicOverview/MD_BrowseGraphic/fileName)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>BrowseFileSize</id>
   <name>Browse File Size</name>
   <description>Checks to see if at least one Browse File Size concept exists.</description>
   <type>browseGraphic</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept BrowseFileSize is present."
                                        
  if(BrowseFileSize is not None and len(str(BrowseFileSize)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "BrowseFileSize concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>BrowseFileSize</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>BrowseFormat</id>
   <name>Browse Format</name>
   <description>Checks to see if at least one Browse Format concept exists.</description>
   <type>browseGraphic</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept BrowseFormat is present."
                                        
  if(BrowseFormat is not None and len(str(BrowseFormat)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "BrowseFormat concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>BrowseFormat</name>
      <xpath>(/MD_Metadata/identificationInfo/*/graphicOverview/MD_BrowseGraphic/fileType) or (/*/identificationInfo/*/graphicOverview/MD_BrowseGraphic/fileType)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>BrowseURL</id>
   <name>Browse URL</name>
   <description>Checks to see if at least one Browse URL concept exists.</description>
   <type>browseGraphic</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept BrowseURL is present."
                                        
  if(BrowseURL is not None and len(str(BrowseURL)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "BrowseURL concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>BrowseURL</name>
      <xpath>(/MD_Metadata/identificationInfo/*/graphicOverview/MD_BrowseGraphic/fileName/Anchor/@xlink:href) or (/*/identificationInfo/*/graphicOverview/MD_BrowseGraphic/fileName/FileName/@src)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>CenterLatitude</id>
   <name>Center Latitude</name>
   <description>Checks to see if at least one Center Latitude concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept CenterLatitude is present."
                                        
  if(CenterLatitude is not None and len(str(CenterLatitude)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "CenterLatitude concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>CenterLatitude</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>CenterLongitude</id>
   <name>Center Longitude</name>
   <description>Checks to see if at least one Center Longitude concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept CenterLongitude is present."
                                        
  if(CenterLongitude is not None and len(str(CenterLongitude)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "CenterLongitude concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>CenterLongitude</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>CitedResourceAlternateTitle</id>
   <name>Cited Resource Alternate Title</name>
   <description>Checks to see if at least one Cited Resource Alternate Title concept exists.</description>
   <type>genericCitation</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept CitedResourceAlternateTitle is present."
                                        
  if(CitedResourceAlternateTitle is not None and len(str(CitedResourceAlternateTitle)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "CitedResourceAlternateTitle concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>CitedResourceAlternateTitle</name>
      <xpath>(//CI_Citation/alternateTitle) or (//CI_Citation/alternateTitle)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>CloudCover</id>
   <name>Cloud Cover</name>
   <description>Checks to see if at least one Cloud Cover concept exists.</description>
   <type>CMR-Granule_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept CloudCover is present."
                                        
  if(CloudCover is not None and len(str(CloudCover)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "CloudCover concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>CloudCover</name>
      <xpath>(/*/gmd:contentInfo/gmd:MD_ImageDescription/gmd:cloudCoverPercentage/gco:Real</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>CollectionDataType</id>
   <name>Collection Data Type</name>
   <description>Checks to see if at least one Collection Data Type concept exists.</description>
   <type>CMR-Collection_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept CollectionDataType is present."
                                        
  if(CollectionDataType is not None and len(str(CollectionDataType)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "CollectionDataType concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>CollectionDataType</name>
      <xpath>(//gmd:keyword[/*='NEAR_REAL_TIME'] | //gmd:keyword[/*='SCIENCE_QUALITY']</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>CommonDataModelDatatype</id>
   <name>Common Data Model Datatype</name>
   <description>Checks to see if at least one Common Data Model Datatype concept exists.</description>
   <type>ACDD_recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept CommonDataModelDatatype is present."
                                        
  if(CommonDataModelDatatype is not None and len(str(CommonDataModelDatatype)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "CommonDataModelDatatype concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>CommonDataModelDatatype</name>
      <xpath>(/MD_Metadata/identificationInfo/*/spatialRepresentationType/MD_SpatialRepresentationTypeCode) or (/*/identificationInfo/*/spatialRepresentationType/MD_SpatialRepresentationTypeCode)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>CompletenessReport</id>
   <name>Completeness Report</name>
   <description>Checks to see if at least one Completeness Report concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept CompletenessReport is present."
                                        
  if(CompletenessReport is not None and len(str(CompletenessReport)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "CompletenessReport concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>CompletenessReport</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_CompletenessCommission) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_CompletenessOmission) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_CompletenessCommission) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_CompletenessOmission)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Confidence</id>
   <name>Confidence</name>
   <description>Checks to see if at least one Confidence concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Confidence is present."
                                        
  if(Confidence is not None and len(str(Confidence)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Confidence concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Confidence</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_Confidence</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ConformanceResult</id>
   <name>Conformance Result</name>
   <description>Checks to see if at least one Conformance Result concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ConformanceResult is present."
                                        
  if(ConformanceResult is not None and len(str(ConformanceResult)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ConformanceResult concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ConformanceResult</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_Element/result/DQ_ConformanceResult) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_QuantitativeAttributeAccuracy/result/DQ_ConformanceResult)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ConstraintReference</id>
   <name>Constraint Reference</name>
   <description>Checks to see if at least one Constraint Reference concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ConstraintReference is present."
                                        
  if(ConstraintReference is not None and len(str(ConstraintReference)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ConstraintReference concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ConstraintReference</name>
      <xpath>(/MD_Metadata/identificationInfo/MD_DataIdentification/resourceConstraints/MD_Constraints/reference/CI_Citation) or (/MD_Metadata/identificationInfo/SV_ServiceIdentification/resourceConstraints/MD_Constraints/reference/CI_Citation) or (/MD_Metadata/metadataConstraints/MD_Constraints/reference/CI_Citation)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ContributorName</id>
   <name>Contributor Name</name>
   <description>Checks to see if at least one Contributor Name concept exists.</description>
   <type>CSWCoreReturnables</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ContributorName is present."
                                        
  if(ContributorName is not None and len(str(ContributorName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ContributorName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ContributorName</name>
      <xpath>(/MD_Metadata/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[not(normalize-space\(role/CI_RoleCode) ='author' or normalize-space\(role/CI_RoleCode) ='principalInvestigator' or normalize-space\(role/CI_RoleCode) ='originator')]/party/*/name) or (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[not(normalize-space\(role/CI_RoleCode[.='author' or .='principalInvestigator' or .='originator']))]/*[contains(name(),'Name')]) or (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space\(role/CI_RoleCode)='contributor']/*[contains(name(),'Name')]) or (/eml/*/associatedParty) or (/resource/contributors/contributor/contributorName)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ContributorRole</id>
   <name>Contributor Role</name>
   <description>Checks to see if at least one Contributor Role concept exists.</description>
   <type>ACDD_suggested</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ContributorRole is present."
                                        
  if(ContributorRole is not None and len(str(ContributorRole)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ContributorRole concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ContributorRole</name>
      <xpath>(/MD_Metadata/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[not(normalize-space\(role/CI_RoleCode)='author' or normalize-space\(role/CI_RoleCode)='principalInvestigator' or normalize-space\(role/CI_RoleCode)='originator')]/role/CI_RoleCode) or (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[not(normalize-space\(role/CI_RoleCode)[.='author' or .='principalInvestigator' or .='originator'])]/role/CI_RoleCode) or (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty/role[gmd:CI_RoleCode='contributor']) or (/eml/*/*/role) or (/resource/contributors/contributor/@contributorType)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>CoordinateReferenceSystem(CRS)</id>
   <name>Coordinate Reference System (CRS)</name>
   <description>Checks to see if at least one Coordinate Reference System (CRS) concept exists.</description>
   <type>CSWCoreQueryables</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept CoordinateReferenceSystem(CRS) is present."
                                        
  if(CoordinateReferenceSystem(CRS) is not None and len(str(CoordinateReferenceSystem(CRS))) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "CoordinateReferenceSystem(CRS) concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>CoordinateReferenceSystem(CRS)</name>
      <xpath>(/MD_Metadata/referenceSystemInfo/MD_ReferenceSystem/referenceSystemIdentifier/MD_Identifier/code) or (/MD_Metadata/referenceSystemInfo/MD_ReferenceSystem/referenceSystemIdentifier/MD_Identifier/codeSpace) or (/*/referenceSystemInfo/MD_ReferenceSystem/referenceSystemIdentifier/RS_Identifier/code) or (/*/referenceSystemInfo/MD_ReferenceSystem/referenceSystemIdentifier/RS_Identifier/codeSpace) or (/eml/*/horizCoordSysName)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>CoupledResource</id>
   <name>Coupled Resource</name>
   <description>Checks to see if at least one Coupled Resource concept exists.</description>
   <type>ISO_ServiceDiscovery-Conditional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept CoupledResource is present."
                                        
  if(CoupledResource is not None and len(str(CoupledResource)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "CoupledResource concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>CoupledResource</name>
      <xpath>(/MD_Metadata/identificationInfo/SV_ServiceIdentification/coupledResource) or (/*/identificationInfo/SV_ServiceIdentification/coupledResource)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>CoupledType</id>
   <name>Coupled Type</name>
   <description>Checks to see if at least one Coupled Type concept exists.</description>
   <type>ISO_ServiceDiscovery-Conditional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept CoupledType is present."
                                        
  if(CoupledType is not None and len(str(CoupledType)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "CoupledType concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>CoupledType</name>
      <xpath>(/MD_Metadata/identificationInfo/SV_ServiceIdentification/couplingType) or (/*/identificationInfo/SV_ServiceIdentification/couplingType)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>CoverageResult</id>
   <name>Coverage Result</name>
   <description>Checks to see if at least one Coverage Result concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept CoverageResult is present."
                                        
  if(CoverageResult is not None and len(str(CoverageResult)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "CoverageResult concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>CoverageResult</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_Element/mdq:result/mdq:QE_CoverageResult</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>DataDates</id>
   <name>Data Dates</name>
   <description>Checks to see if at least one Data Dates concept exists.</description>
   <type>CMR-Common_Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept DataDates is present."
                                        
  if(DataDates is not None and len(str(DataDates)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "DataDates concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>DataDates</name>
      <xpath>(//MD_DataIdentification/citation/CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='creation']/date) or (//MD_DataIdentification/citation/CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='creation']/dateTime) or (//MD_DataIdentification/citation/CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='revision']/date) or (//MD_DataIdentification/citation/CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='revision']/dateTime) or (//CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='creation']/date) or (//CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='lastRevision']/date) or (//CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='nextUpdate']/date) or (//CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='expiry']/date)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>DataQualityScope</id>
   <name>Data Quality Scope</name>
   <description>Checks to see if at least one Data Quality Scope concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept DataQualityScope is present."
                                        
  if(DataQualityScope is not None and len(str(DataQualityScope)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "DataQualityScope concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>DataQualityScope</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/scope/MD_Scope/level/MD_ScopeCode) or (/*/dataQualityInfo/DQ_DataQuality/scope/DQ_Scope/level/MD_ScopeCode)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>DataType</id>
   <name>DataType</name>
   <description>Checks to see if at least one DataType concept exists.</description>
   <type>UMM-Variable_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept DataType is present."
                                        
  if(DataType is not None and len(str(DataType)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "DataType concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>DataType</name>
      <xpath>(/MI_Metadata/contentInfo/*/dimension/MD_Band/sequenceIdentifier/MemberName/attributeType/TypeName/aName/CharacterString) or (/MD_Metadata/contentInfo/*/attributeGroup/MD_AttributeGroup/attribute/MD_SampleDimension/sequenceIdentifier/MemberName/attributeType/TypeName/aName/CharacterString)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>DateType</id>
   <name>Date Type</name>
   <description>Checks to see if at least one Date Type concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept DateType is present."
                                        
  if(DateType is not None and len(str(DateType)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "DateType concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>DateType</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>DayNightFlag</id>
   <name>DayNightFlag</name>
   <description>Checks to see if at least one DayNightFlag concept exists.</description>
   <type>CMR-Granule_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept DayNightFlag is present."
                                        
  if(DayNightFlag is not None and len(str(DayNightFlag)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "DayNightFlag concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>DayNightFlag</name>
      <xpath>(//contentInfo/MD_CoverageDescription/dimension/MD_Band/otherProperty/Record/AdditionalAttributes/AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/name='DayNightFlag']/value) or (//contentInfo/MD_CoverageDescription/dimension/MD_Band/otherProperty/Record/AdditionalAttributes/AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/name='DayNightFlag']/value)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>DescriptiveResult</id>
   <name>Descriptive Result</name>
   <description>Checks to see if at least one Descriptive Result concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept DescriptiveResult is present."
                                        
  if(DescriptiveResult is not None and len(str(DescriptiveResult)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "DescriptiveResult concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>DescriptiveResult</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_Element/mdq:result/mdq:DQ_DescriptiveResult</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Dimensions</id>
   <name>Dimensions</name>
   <description>Checks to see if at least one Dimensions concept exists.</description>
   <type>UMM-Variable_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Dimensions is present."
                                        
  if(Dimensions is not None and len(str(Dimensions)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Dimensions concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Dimensions</name>
      <xpath>(/MI_Metadata/contentInfo/MD_CoverageDescription/dimension/MD_Band/otherProperty/Record/AdditionalAttributes/AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/name/CharacterString='Dimensions']/value/CharacterString) or (/MD_Metadata/contentInfo/*/attributeGroup/MD_AttributeGroup/attribute/MD_SampleDimension/otherProperty/Record/AdditionalAttributes/AdditionalAttribute[mrc:reference/EOS_AdditionalAttributeDescription/name/CharacterString='Dimensions']/value/CharacterString)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>DimensionsName</id>
   <name>DimensionsName</name>
   <description>Checks to see if at least one DimensionsName concept exists.</description>
   <type>UMM-Variable_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept DimensionsName is present."
                                        
  if(DimensionsName is not None and len(str(DimensionsName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "DimensionsName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>DimensionsName</name>
      <xpath>(/MI_Metadata/contentInfo/*/dimension/MD_Band/sequenceIdentifier/MemberName/aName/CharacterString) or (/MD_Metadata/contentInfo/*/attributeGroup/MD_AttributeGroup/attribute/MD_SampleDimension/sequenceIdentifier/MemberName/aName/CharacterString)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>DistributionFormat</id>
   <name>Distribution Format</name>
   <description>Checks to see if at least one Distribution Format concept exists.</description>
   <type>distributionInfo</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept DistributionFormat is present."
                                        
  if(DistributionFormat is not None and len(str(DistributionFormat)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "DistributionFormat concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>DistributionFormat</name>
      <xpath>(/MD_Metadata/distributionInfo/MD_Distribution/distributionFormat/MD_Format) or (/MD_Metadata/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorFormat/MD_Format) or (/*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorFormat/MD_Format/name) or (/*/distributionInfo/MD_Distribution/distributionFormat/MD_Format/name) or (/DryadDataFile/format) or (/eml/*/dataTable/physical/dataFormat) or (/resource/formats/format)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>DistributionLiability</id>
   <name>Distribution Liability</name>
   <description>Checks to see if at least one Distribution Liability concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept DistributionLiability is present."
                                        
  if(DistributionLiability is not None and len(str(DistributionLiability)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "DistributionLiability concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>DistributionLiability</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EasternmostLongitude</id>
   <name>Easternmost Longitude</name>
   <description>Checks to see if at least one Easternmost Longitude concept exists.</description>
   <type>extent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EasternmostLongitude is present."
                                        
  if(EasternmostLongitude is not None and len(str(EasternmostLongitude)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EasternmostLongitude concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EasternmostLongitude</name>
      <xpath>(/MD_Metadata/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox/eastBoundLongitude/Decimal) or (/*/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox/eastBoundLongitude/Decimal) or (/eml/*/coverage/geographicCoverage/boundingCoordinates/eastBoundingCoordinate)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Email</id>
   <name>Email</name>
   <description>Checks to see if at least one Email concept exists.</description>
   <type>people</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Email is present."
                                        
  if(Email is not None and len(str(Email)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Email concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Email</name>
      <xpath>(//CI_Responsibility/party/CI_Organisation/contactInfo/CI_Contact/address/CI_Address/electronicMailAddress) or (//CI_Responsibility/party/CI_Individual/contactInfo/CI_Contact/address/CI_Address/electronicMailAddress) or (//CI_ResponsibleParty/contactInfo/CI_Contact/address/CI_Address/electronicMailAddress)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EmbargoDate</id>
   <name>Embargo Date</name>
   <description>Checks to see if at least one Embargo Date concept exists.</description>
   <type>DMAP-DF_Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EmbargoDate is present."
                                        
  if(EmbargoDate is not None and len(str(EmbargoDate)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EmbargoDate concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EmbargoDate</name>
      <xpath>((/*/available)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EndTime</id>
   <name>End Time</name>
   <description>Checks to see if at least one End Time concept exists.</description>
   <type>extent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EndTime is present."
                                        
  if(EndTime is not None and len(str(EndTime)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EndTime concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EndTime</name>
      <xpath>(/MD_Metadata/identificationInfo/*/extent/EX_Extent/temporalElement/EX_TemporalExtent/extent/TimePeriod/end/TimeInstant/timePosition) or (/MD_Metadata/identificationInfo/*/extent/EX_Extent/temporalElement/EX_TemporalExtent/extent/TimePeriod/endPosition) or (/*/identificationInfo/*/extent/EX_Extent/temporalElement/EX_TemporalExtent/extent/TimePeriod/endPosition) or (/eml/*/coverage/temporalCoverage/rangeOfDates/endDate)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EndsatPresentFlag</id>
   <name>Ends at Present Flag</name>
   <description>Checks to see if at least one Ends at Present Flag concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EndsatPresentFlag is present."
                                        
  if(EndsatPresentFlag is not None and len(str(EndsatPresentFlag)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EndsatPresentFlag concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EndsatPresentFlag</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EntityTypeDefinition</id>
   <name>Entity Type Definition</name>
   <description>Checks to see if at least one Entity Type Definition concept exists.</description>
   <type>entitiesAndAttributes</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EntityTypeDefinition is present."
                                        
  if(EntityTypeDefinition is not None and len(str(EntityTypeDefinition)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EntityTypeDefinition concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EntityTypeDefinition</name>
      <xpath>(/eml:eml/*/dataTable/entityDescription</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EntityandAttributeInformation</id>
   <name>Entity and Attribute Information</name>
   <description>Checks to see if at least one Entity and Attribute Information concept exists.</description>
   <type>entitiesAndAttributes</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EntityandAttributeInformation is present."
                                        
  if(EntityandAttributeInformation is not None and len(str(EntityandAttributeInformation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EntityandAttributeInformation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EntityandAttributeInformation</name>
      <xpath>(/eml:eml/*/dataTable/entityDescription</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EvaluationMethodDescription</id>
   <name>Evaluation Method Description</name>
   <description>Checks to see if at least one Evaluation Method Description concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EvaluationMethodDescription is present."
                                        
  if(EvaluationMethodDescription is not None and len(str(EvaluationMethodDescription)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EvaluationMethodDescription concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EvaluationMethodDescription</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_Element/evaluationMethod/DQ_EvaluationMethod/evaluationMethodDescription) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_QuantitativeAttributeAccuracy/evaluationMethod/DQ_FullInspection/evaluationMethodDescription)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EvaluationProcedure</id>
   <name>Evaluation Procedure</name>
   <description>Checks to see if at least one Evaluation Procedure concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EvaluationProcedure is present."
                                        
  if(EvaluationProcedure is not None and len(str(EvaluationProcedure)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EvaluationProcedure concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EvaluationProcedure</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_Element/evaluationMethod/DQ_EvaluationMethod/evaluationProcedure/CI_Citation) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_QuantitativeAttributeAccuracy/evaluationProcedure/CI_Citation)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EvaluationReference</id>
   <name>Evaluation Reference</name>
   <description>Checks to see if at least one Evaluation Reference concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EvaluationReference is present."
                                        
  if(EvaluationReference is not None and len(str(EvaluationReference)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EvaluationReference concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EvaluationReference</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_Element/mdq:evaluationMethod/mdq:DQ_EvaluationMethod/mdq:referenceDoc</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EvaluationReferenceDocument</id>
   <name>Evaluation Reference Document</name>
   <description>Checks to see if at least one Evaluation Reference Document concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EvaluationReferenceDocument is present."
                                        
  if(EvaluationReferenceDocument is not None and len(str(EvaluationReferenceDocument)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EvaluationReferenceDocument concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EvaluationReferenceDocument</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_Element/mdq:evaluationMethod/mdq:DQ_EvaluationMethod/mdq:referenceDoc/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EvaluationSpecification</id>
   <name>Evaluation Specification</name>
   <description>Checks to see if at least one Evaluation Specification concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EvaluationSpecification is present."
                                        
  if(EvaluationSpecification is not None and len(str(EvaluationSpecification)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EvaluationSpecification concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EvaluationSpecification</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_Element/mdq:result/mdq:DQ_ConformanceResult/mdq:specification/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EvalulationMethod</id>
   <name>Evalulation Method</name>
   <description>Checks to see if at least one Evalulation Method concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EvalulationMethod is present."
                                        
  if(EvalulationMethod is not None and len(str(EvalulationMethod)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EvalulationMethod concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EvalulationMethod</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_Element/mdq:evaluationMethod</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>EvalulationMethodType</id>
   <name>Evalulation Method Type</name>
   <description>Checks to see if at least one Evalulation Method Type concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept EvalulationMethodType is present."
                                        
  if(EvalulationMethodType is not None and len(str(EvalulationMethodType)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "EvalulationMethodType concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>EvalulationMethodType</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_Element/evaluationMethod/DQ_EvaluationMethod/evaluationMethodType/DQ_EvaluationMethodTypeCode) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_QuantitativeAttributeAccuracy/evaluationMethodType/DQ_EvaluationMethodTypeCode)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ExclusionGRingFlag</id>
   <name>Exclusion GRing Flag</name>
   <description>Checks to see if at least one Exclusion GRing Flag concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ExclusionGRingFlag is present."
                                        
  if(ExclusionGRingFlag is not None and len(str(ExclusionGRingFlag)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ExclusionGRingFlag concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ExclusionGRingFlag</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>FeatureCatalogueCitation</id>
   <name>Feature Catalogue Citation</name>
   <description>Checks to see if at least one Feature Catalogue Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept FeatureCatalogueCitation is present."
                                        
  if(FeatureCatalogueCitation is not None and len(str(FeatureCatalogueCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "FeatureCatalogueCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>FeatureCatalogueCitation</name>
      <xpath>(/MD_Metadata/contentInfo/MD_FeatureCatalogue/featureCatalogueCitation/CI_Citation) or (/*/contentInfo/MD_FeatureCatalogueDescription/featureCatalogueCitation/CI_Citation)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>FillValue</id>
   <name>FillValue</name>
   <description>Checks to see if at least one FillValue concept exists.</description>
   <type>UMM-Variable_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept FillValue is present."
                                        
  if(FillValue is not None and len(str(FillValue)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "FillValue concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>FillValue</name>
      <xpath>(/MI_Metadata/contentInfo/MD_CoverageDescription/dimension/MD_Band/otherProperty/Record/AdditionalAttributes/AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/name/CharacterString='FillValue']/value/CharacterString) or (/MD_Metadata/contentInfo/*/attributeGroup/MD_AttributeGroup/attribute/MD_SampleDimension/otherProperty/Record/AdditionalAttributes/AdditionalAttribute[mrc:reference/EOS_AdditionalAttributeDescription/name/CharacterString='FillValue=']/value/CharacterString)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>FirstName</id>
   <name>First Name</name>
   <description>Checks to see if at least one First Name concept exists.</description>
   <type>people</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept FirstName is present."
                                        
  if(FirstName is not None and len(str(FirstName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "FirstName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>FirstName</name>
      <xpath>(//CI_Responsibility/party/CI_Organisation/individual/CI_Individual/name) or (//CI_Responsibility/party/CI_Individual/name) or (//CI_ResponsibleParty/individualName) or (/resource/creators/creator/creatorName)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>FormatCitation</id>
   <name>Format Citation</name>
   <description>Checks to see if at least one Format Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept FormatCitation is present."
                                        
  if(FormatCitation is not None and len(str(FormatCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "FormatCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>FormatCitation</name>
      <xpath>(/MD_Metadata/distributionInfo/MD_Distribution/distributionFormat/MD_Format/formatSpecificationCitation/CI_Citation) or (/MD_Metadata/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorFormat/MD_Format/formatSpecificationCitation/CI_Citation)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>FutureMetadataReviewDate</id>
   <name>Future Metadata Review Date</name>
   <description>Checks to see if at least one Future Metadata Review Date concept exists.</description>
   <type>UMM-Common_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept FutureMetadataReviewDate is present."
                                        
  if(FutureMetadataReviewDate is not None and len(str(FutureMetadataReviewDate)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "FutureMetadataReviewDate concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>FutureMetadataReviewDate</name>
      <xpath>(/MD_Metadata/metadataMaintenance/MD_MaintenanceInformation/maintenanceDate/CI_Date[cit:dateType/CI_DateTypeCode='nextUpdate']/date/DateTime) or (/*/metadataMaintenance/MD_MaintenanceInformation/dateOfNextUpdate/Date)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>GRingPointLatitude</id>
   <name>GRing Point Latitude</name>
   <description>Checks to see if at least one GRing Point Latitude concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept GRingPointLatitude is present."
                                        
  if(GRingPointLatitude is not None and len(str(GRingPointLatitude)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "GRingPointLatitude concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>GRingPointLatitude</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>GRingPointLongitude</id>
   <name>GRing Point Longitude</name>
   <description>Checks to see if at least one GRing Point Longitude concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept GRingPointLongitude is present."
                                        
  if(GRingPointLongitude is not None and len(str(GRingPointLongitude)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "GRingPointLongitude concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>GRingPointLongitude</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>GRingPointSequenceNumber</id>
   <name>GRing Point Sequence Number</name>
   <description>Checks to see if at least one GRing Point Sequence Number concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept GRingPointSequenceNumber is present."
                                        
  if(GRingPointSequenceNumber is not None and len(str(GRingPointSequenceNumber)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "GRingPointSequenceNumber concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>GRingPointSequenceNumber</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>GridDimensionCount</id>
   <name>Grid Dimension Count</name>
   <description>Checks to see if at least one Grid Dimension Count concept exists.</description>
   <type>UMM-Collection_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept GridDimensionCount is present."
                                        
  if(GridDimensionCount is not None and len(str(GridDimensionCount)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "GridDimensionCount concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>GridDimensionCount</name>
      <xpath>(/MD_Metadata/spatialRepresentationInfo/MD_Georeferenceable/numberOfDimensions/Integer) or (/*/spatialRepresentationInfo/MD_Georeferenceable/numberOfDimensions/Integer)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>GridDimensionResolution</id>
   <name>Grid Dimension Resolution</name>
   <description>Checks to see if at least one Grid Dimension Resolution concept exists.</description>
   <type>UMM-Collection_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept GridDimensionResolution is present."
                                        
  if(GridDimensionResolution is not None and len(str(GridDimensionResolution)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "GridDimensionResolution concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>GridDimensionResolution</name>
      <xpath>(/MD_Metadata/spatialRepresentationInfo/MD_Georectified/axisDimensionProperties/MD_Dimension/resolution/Measure) or (/*/spatialRepresentationInfo/MD_Georectified/axisDimensionProperties/MD_Dimension/resolution/Measure)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>GridDimensionTypeCode</id>
   <name>Grid Dimension Type Code</name>
   <description>Checks to see if at least one Grid Dimension Type Code concept exists.</description>
   <type>UMM-Collection_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept GridDimensionTypeCode is present."
                                        
  if(GridDimensionTypeCode is not None and len(str(GridDimensionTypeCode)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "GridDimensionTypeCode concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>GridDimensionTypeCode</name>
      <xpath>(/MD_Metadata/spatialRepresentationInfo/MD_Georectified/axisDimensionProperties/MD_Dimension/dimensionName/MD_DimensionNameTypeCode) or (/*/spatialRepresentationInfo/MD_Georectified/axisDimensionProperties/MD_Dimension/dimensionName/MD_DimensionNameTypeCode)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Homogeneity</id>
   <name>Homogeneity</name>
   <description>Checks to see if at least one Homogeneity concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Homogeneity is present."
                                        
  if(Homogeneity is not None and len(str(Homogeneity)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Homogeneity concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Homogeneity</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_Homogeneity/mdq:result</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>HorizontalPositionalAccuracyExplanation</id>
   <name>Horizontal Positional Accuracy Explanation</name>
   <description>Checks to see if at least one Horizontal Positional Accuracy Explanation concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept HorizontalPositionalAccuracyExplanation is present."
                                        
  if(HorizontalPositionalAccuracyExplanation is not None and len(str(HorizontalPositionalAccuracyExplanation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "HorizontalPositionalAccuracyExplanation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>HorizontalPositionalAccuracyExplanation</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_AbsoluteExternalPositionalAccuracy/mdq:evaluationMethod/mdq:DQ_EvaluationMethod/mdq:evaluationMethodDescription</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>HorizontalPositionalAccuracyReport</id>
   <name>Horizontal Positional Accuracy Report</name>
   <description>Checks to see if at least one Horizontal Positional Accuracy Report concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept HorizontalPositionalAccuracyReport is present."
                                        
  if(HorizontalPositionalAccuracyReport is not None and len(str(HorizontalPositionalAccuracyReport)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "HorizontalPositionalAccuracyReport concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>HorizontalPositionalAccuracyReport</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_AbsoluteExternalPositionalAccuracy/mdq:result/mdq:DQ_DescriptiveResult/mdq:statement</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>HorizontalPositionalAccuracyValue</id>
   <name>Horizontal Positional Accuracy Value</name>
   <description>Checks to see if at least one Horizontal Positional Accuracy Value concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept HorizontalPositionalAccuracyValue is present."
                                        
  if(HorizontalPositionalAccuracyValue is not None and len(str(HorizontalPositionalAccuracyValue)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "HorizontalPositionalAccuracyValue concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>HorizontalPositionalAccuracyValue</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_AbsoluteExternalPositionalAccuracy/mdq:result/mdq:DQ_QuantitativeResult/mdq:value</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>IdentifiedIssuesCitation</id>
   <name>Identified Issues Citation</name>
   <description>Checks to see if at least one Identified Issues Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept IdentifiedIssuesCitation is present."
                                        
  if(IdentifiedIssuesCitation is not None and len(str(IdentifiedIssuesCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "IdentifiedIssuesCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>IdentifiedIssuesCitation</name>
      <xpath>(/MD_Metadata/identificationInfo/*/resourceSpecificUsage/MD_Usage/identifiedIssues/CI_Citation) or (/MD_Metadata/identificationInfo/*/resourceSpecificUsage/MD_Usage/identifiedIssues/CI_Citation/onlineResource/CI_OnlineResource/linkage)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>InputGranule</id>
   <name>Input Granule</name>
   <description>Checks to see if at least one Input Granule concept exists.</description>
   <type>CMR-Granule_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept InputGranule is present."
                                        
  if(InputGranule is not None and len(str(InputGranule)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "InputGranule concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>InputGranule</name>
      <xpath>(//gmd:source/*/gmd:sourceCitation/gmd:CI_Citation/gmd:title/gmx:FileName/@src</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Instrument</id>
   <name>Instrument</name>
   <description>Checks to see if at least one Instrument concept exists.</description>
   <type>rubricAcquisition</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Instrument is present."
                                        
  if(Instrument is not None and len(str(Instrument)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Instrument concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Instrument</name>
      <xpath>(/MD_Metadata/acquisitionInformation/MI_AcquisitionInformation/instrument/*) or (/MD_Metadata/acquisitionInformation/MI_AcquisitionInformation/platform/*/instrument/*) or (/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/instrument/*) or (/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/platform/*/instrument/*) or (/eml/*/methods/methodStep/instrumentation)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>InstrumentCharacteristicsName</id>
   <name>Instrument Characteristics Name</name>
   <description>Checks to see if at least one Instrument Characteristics Name concept exists.</description>
   <type>acquisitionDetails</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept InstrumentCharacteristicsName is present."
                                        
  if(InstrumentCharacteristicsName is not None and len(str(InstrumentCharacteristicsName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "InstrumentCharacteristicsName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>InstrumentCharacteristicsName</name>
      <xpath>(/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/instrument/EOS_Instrument/otherProperty/Record/AdditionalAttributes/AdditionalAttribute/reference/EOS_AdditionalAttributeDescription[eos:type/EOS_AdditionalAttributeTypeCode='instrumentInformation']/name) or (//instrument/*/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute/reference/EOS_AdditionalAttributeDescription[eos:type/EOS_AdditionalAttributeTypeCode='instrumentInformation']/name) or (//instrument/*/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute/reference/EOS_AdditionalAttributeDescription[eos:type/EOS_AdditionalAttributeTypeCode='instrumentInformation']/name) or (//platform/EOS_Platform/instrument/EOS_Instrument/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute/reference/EOS_AdditionalAttributeDescription[eos:type/EOS_AdditionalAttributeTypeCode='instrumentInformation']/name)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>InstrumentCharacteristicsValue</id>
   <name>Instrument Characteristics Value</name>
   <description>Checks to see if at least one Instrument Characteristics Value concept exists.</description>
   <type>acquisitionDetails</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept InstrumentCharacteristicsValue is present."
                                        
  if(InstrumentCharacteristicsValue is not None and len(str(InstrumentCharacteristicsValue)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "InstrumentCharacteristicsValue concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>InstrumentCharacteristicsValue</name>
      <xpath>(/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/instrument/EOS_Instrument/otherProperty/Record/AdditionalAttributes/AdditionalAttribute/value) or (//instrument/*/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/type/EOS_AdditionalAttributeTypeCode='instrumentInformation']/value) or (//instrument/*/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/type/EOS_AdditionalAttributeTypeCode='instrumentInformation']/value) or (//platform/EOS_Platform/instrument/EOS_Instrument/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/type/EOS_AdditionalAttributeTypeCode='instrumentInformation']/value)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>InstrumentCitation</id>
   <name>Instrument Citation</name>
   <description>Checks to see if at least one Instrument Citation concept exists.</description>
   <type>acquisitionDetails</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept InstrumentCitation is present."
                                        
  if(InstrumentCitation is not None and len(str(InstrumentCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "InstrumentCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>InstrumentCitation</name>
      <xpath>(/gmi:MI_Metadata/gmi:acquisitionInformation/gmi:MI_AcquisitionInformation/gmi:Instrument/*/gmi:citation/gmi:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>InstrumentKeyword</id>
   <name>Instrument Keyword</name>
   <description>Checks to see if at least one Instrument Keyword concept exists.</description>
   <type>rubricAcquisition</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept InstrumentKeyword is present."
                                        
  if(InstrumentKeyword is not None and len(str(InstrumentKeyword)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "InstrumentKeyword concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>InstrumentKeyword</name>
      <xpath>(/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space\(type/MD_KeywordTypeCode)='instrument']/keyword) or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains\(type/MD_KeywordTypeCode,'instrument')]/keyword)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>InstrumentLongName</id>
   <name>Instrument Long Name</name>
   <description>Checks to see if at least one Instrument Long Name concept exists.</description>
   <type>acquisitionDetails</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept InstrumentLongName is present."
                                        
  if(InstrumentLongName is not None and len(str(InstrumentLongName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "InstrumentLongName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>InstrumentLongName</name>
      <xpath>(/MD_Metadata/acquisitionInformation/MI_AcquisitionInformation/instrument/*/description) or (/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/Instrument/*/description)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>InstrumentOperationModes</id>
   <name>Instrument Operation Modes</name>
   <description>Checks to see if at least one Instrument Operation Modes concept exists.</description>
   <type>CMR-Granule_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept InstrumentOperationModes is present."
                                        
  if(InstrumentOperationModes is not None and len(str(InstrumentOperationModes)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "InstrumentOperationModes concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>InstrumentOperationModes</name>
      <xpath>(//instrument/*/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/name='OperationMode']/value) or (//instrument/*/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/name='OperationMode']/value)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>InstrumentShortName</id>
   <name>Instrument Short Name</name>
   <description>Checks to see if at least one Instrument Short Name concept exists.</description>
   <type>acquisitionDetails</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept InstrumentShortName is present."
                                        
  if(InstrumentShortName is not None and len(str(InstrumentShortName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "InstrumentShortName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>InstrumentShortName</name>
      <xpath>(/MD_Metadata/acquisitionInformation/MI_AcquisitionInformation/instrument/*/identifier/MD_Identifier/code) or (//instrument/*/identifier/MD_Identifier/code)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>InstrumentType</id>
   <name>Instrument Type</name>
   <description>Checks to see if at least one Instrument Type concept exists.</description>
   <type>acquisitionDetails</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept InstrumentType is present."
                                        
  if(InstrumentType is not None and len(str(InstrumentType)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "InstrumentType concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>InstrumentType</name>
      <xpath>(/MD_Metadata/acquisitionInformation/MI_AcquisitionInformation/instrument/*/type) or (/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/instrument/*/type)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Interface</id>
   <name>Interface</name>
   <description>Checks to see if at least one Interface concept exists.</description>
   <type>WSDL_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Interface is present."
                                        
  if(Interface is not None and len(str(Interface)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Interface concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Interface</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Keyword.1</id>
   <name>Keyword</name>
   <description>Checks to see if at least one natural language keyword exists.</description>
   <type>Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status

  # 'natLangKeyword' should be a boolean
  if ('natLangKeyword' in globals() and natLangKeyword is not None and natLangKeyword):
    output = "A natural language keyword (no controlled vocabulary used) is present"
    status = "SUCCESS"
    return True
  else:
    output = "A natural language keyword (no controlled vocabulary used) is not present"
    status = "FAILURE"
    return False

      ]]></code>
   <selector>
      <name>natLangKeyword</name>
      <xpath>boolean((/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space(type/MD_KeywordTypeCode)='theme']/keyword)
         or (/*/subject)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'project')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'theme')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'place')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'platform')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'dataCent')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'discipline')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'stratum')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'temporal')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'featureType')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'process')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'product')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'dataResolution')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'service')]/keyword)
         or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains(type/MD_KeywordTypeCode,'instrument')]/keyword)
         or (/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space(type/MD_KeywordTypeCode)='place']/keyword)
         or (/MD_Metadata/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicDescription/geographicIdentifier/MD_Identifier/code)
         or (/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space(type/MD_KeywordTypeCode)='instrument']/keyword)
         or (/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space(type/MD_KeywordTypeCode)='platform']/keyword)
         or (/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space(type/MD_KeywordTypeCode)='project']/keyword)
         or (/eml/*/keywordSet/keyword[@keywordType='place'])
         or (/eml/*/keywordSet/keyword[@keywordType='theme'])
         or (/eml/*/keywordSet/keyword[@keywordType='taxonomic'])
         or (/eml/*/keywordSet/keyword[@keywordType='thematic'])
         or (/eml/*/keywordSet/keyword[@keywordType='temporal'])
         or (/eml/*/keywordSet/keyword[@keywordType='discipline'])
         or (/eml/*/keywordSet/keyword[@keywordType='stratum'])
         or (/resource/subjects/subject))
         </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>KeywordOntologyCitation</id>
   <name>Keyword Ontology Citation</name>
   <description>Checks to see if at least one Keyword Ontology Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept KeywordOntologyCitation is present."
                                        
  if(KeywordOntologyCitation is not None and len(str(KeywordOntologyCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "KeywordOntologyCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>KeywordOntologyCitation</name>
      <xpath>(/mdb:MD_Metadata/mdb:identificationInfo/*/mri:descriptiveKeywords/mri:MD_Keywords/mri:keywordClass/mri:MD_KeywordClass/mri:ontology/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>KeywordVocabulary</id>
   <name>Keyword Vocabulary</name>
   <description>Checks to see if at least one Keyword Vocabulary concept exists.</description>
   <type>rubricIdentification</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept KeywordVocabulary is present."
                                        
  if(KeywordVocabulary is not None and len(str(KeywordVocabulary)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "KeywordVocabulary concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>KeywordVocabulary</name>
      <xpath>(/resource/subjects/subject/@subjectScheme) or (/eml/*/keywordSet/keywordThesaurus) or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords/thesaurusName/CI_Citation) or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains\(type/MD_KeywordTypeCode,'platform')]/thesaurusName) or (/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space\(type/MD_KeywordTypeCode)='theme']/thesaurusName/CI_Citation)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>KeywordVocabularyCitation</id>
   <name>Keyword Vocabulary Citation</name>
   <description>Checks to see if at least one Keyword Vocabulary Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept KeywordVocabularyCitation is present."
                                        
  if(KeywordVocabularyCitation is not None and len(str(KeywordVocabularyCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "KeywordVocabularyCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>KeywordVocabularyCitation</name>
      <xpath>(/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords/thesaurusName/CI_Citation) or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords/thesaurusName/CI_Citation)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>LastName</id>
   <name>Last Name</name>
   <description>Checks to see if at least one Last Name concept exists.</description>
   <type>people</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept LastName is present."
                                        
  if(LastName is not None and len(str(LastName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "LastName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>LastName</name>
      <xpath>(//CI_Responsibility/party/CI_Organisation/individual/CI_Individual/name) or (//CI_Responsibility/party/CI_Individual/name) or (//CI_ResponsibleParty/individualName) or (/resource/creators/creator/creatorName)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>LineageScope</id>
   <name>Lineage Scope</name>
   <description>Checks to see if at least one Lineage Scope concept exists.</description>
   <type>ISO_Lineage</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept LineageScope is present."
                                        
  if(LineageScope is not None and len(str(LineageScope)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "LineageScope concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>LineageScope</name>
      <xpath>(/MD_Metadata/resourceLineage/LI_Lineage/statement) or (/*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/statement)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>LineageStatement.1</id>
   <name>Lineage Statement</name>
   <description>Check if a lineage statement exists.</description>
   <type>Reusable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status

  if ('LineageStatement' in globals() and LineageStatement is not None and LineageStatement):
    output = "A lineage statement is present"
    status = "SUCCESS"
    return True
  else:
    output = "A lineage statement is not present"
    status = "FAILURE"
    return False

      ]]></code>
   <selector>
      <name>LineageStatement</name>
      <xpath>boolean(/*/resourceLineage/LI_Lineage/statement
          or /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/statement
          or /*/provenance)
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>LocalVersionIdentifier</id>
   <name>Local Version Identifier</name>
   <description>Checks to see if at least one Local Version Identifier concept exists.</description>
   <type>CMR-Granule_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept LocalVersionIdentifier is present."
                                        
  if(LocalVersionIdentifier is not None and len(str(LocalVersionIdentifier)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "LocalVersionIdentifier concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>LocalVersionIdentifier</name>
      <xpath>(/MD_Metadata/identificationInfo/*/citation/CI_Citation/identifier/MD_Identifier/code[../../codeSpace='LocalVersionID']) or (//identificationInfo/*/citation/CI_Citation/identifier/MD_Identifier[gmd:description='LocalVersionId']/code)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>LogicalConsistency</id>
   <name>Logical Consistency</name>
   <description>Checks to see if at least one Logical Consistency concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept LogicalConsistency is present."
                                        
  if(LogicalConsistency is not None and len(str(LogicalConsistency)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "LogicalConsistency concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>LogicalConsistency</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_ConceptualConsistency) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_DomainConsistency) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_FormatConsistency) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_TopologicalConsistency) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_ConceptualConsistency) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_DomainConsistency) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_FormatConsistency) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_TopologicalConsistency)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>LogicalConsistencyReport</id>
   <name>Logical Consistency Report</name>
   <description>Checks to see if at least one Logical Consistency Report concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept LogicalConsistencyReport is present."
                                        
  if(LogicalConsistencyReport is not None and len(str(LogicalConsistencyReport)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "LogicalConsistencyReport concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>LogicalConsistencyReport</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_ConceptualConsistency/result/DQ_DescriptiveResult/statement) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_DomainConsistency/result/DQ_DescriptiveResult/statement) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_FormatConsistency/result/DQ_DescriptiveResult/statement) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_TopologicalConsistency/result/DQ_DescriptiveResult/statement)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>LongName</id>
   <name>LongName</name>
   <description>Checks to see if at least one LongName concept exists.</description>
   <type>UMM-Variable_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept LongName is present."
                                        
  if(LongName is not None and len(str(LongName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "LongName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>LongName</name>
      <xpath>(/MI_Metadata/contentInfo/*/dimension/MD_Band/name/MD_Identifier[gmd:description/CharacterString='LongName']/code/CharacterString) or (/MD_Metadata/contentInfo/*/attributeGroup/MD_AttributeGroup/attribute/MD_SampleDimension/name/MD_Identifier[mcc:description/CharacterString='LongName']/code/CharacterString)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Maintenance</id>
   <name>Maintenance</name>
   <description>Checks to see if at least one Maintenance concept exists.</description>
   <type>LTER_Discovery</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Maintenance is present."
                                        
  if(Maintenance is not None and len(str(Maintenance)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Maintenance concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Maintenance</name>
      <xpath>(/eml:eml/*/maintenance</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Measure</id>
   <name>Measure</name>
   <description>Checks to see if at least one Measure concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Measure is present."
                                        
  if(Measure is not None and len(str(Measure)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Measure concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Measure</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/*/mdq:measure</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MeasureDescription</id>
   <name>Measure Description</name>
   <description>Checks to see if at least one Measure Description concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MeasureDescription is present."
                                        
  if(MeasureDescription is not None and len(str(MeasureDescription)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MeasureDescription concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MeasureDescription</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_Element/measure/DQ_MeasureReference/measureDescription) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_QuantitativeAttributeAccuracy/measureDescription)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MeasureIdentifier</id>
   <name>Measure Identifier</name>
   <description>Checks to see if at least one Measure Identifier concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MeasureIdentifier is present."
                                        
  if(MeasureIdentifier is not None and len(str(MeasureIdentifier)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MeasureIdentifier concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MeasureIdentifier</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/*/measure/DQ_MeasureReference/measureIdentification) or (/*/dataQualityInfo/DQ_DataQuality/report/*/measureIdentification/MD_Identifier/code)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MeasureName</id>
   <name>Measure Name</name>
   <description>Checks to see if at least one Measure Name concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MeasureName is present."
                                        
  if(MeasureName is not None and len(str(MeasureName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MeasureName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MeasureName</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_Element/measure/DQ_MeasureReference/nameOfMeasure) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_QuantitativeAttributeAccuracy/nameOfMeasure)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MeasureTime</id>
   <name>Measure Time</name>
   <description>Checks to see if at least one Measure Time concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MeasureTime is present."
                                        
  if(MeasureTime is not None and len(str(MeasureTime)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MeasureTime concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MeasureTime</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_Element/evaluationMethod/DQ_EvaluationMethod/dateTime) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_QuantitativeAttributeAccuracy/dateTime/DateTime)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Media</id>
   <name>Media</name>
   <description>Checks to see if at least one Media concept exists.</description>
   <type>distributionInfo</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Media is present."
                                        
  if(Media is not None and len(str(Media)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Media concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Media</name>
      <xpath>(/MD_Metadata/distributionInfo/MD_Distribution/transferOptions/MD_DigitalTransferOptions/offLine/MD_Medium/name/CI_Citation/title) or (/*/distributionInfo/MD_Distribution/transferOptions/MD_DigitalTransferOptions/offLine/MD_Medium/name/MD_MediumNameCode) or (/*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorTransferOptions/MD_DigitalTransferOptions/offLine/MD_Medium/name/MD_MediumNameCode) or (/eml/*/physical/dataName)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MediumReference</id>
   <name>Medium Reference</name>
   <description>Checks to see if at least one Medium Reference concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MediumReference is present."
                                        
  if(MediumReference is not None and len(str(MediumReference)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MediumReference concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MediumReference</name>
      <xpath>(mdb:MD_Metadata/mdb:distributionInfo/mrd:MD_Distribution/mrd:transferOptions/mrd:MD_DigitalTransferOptions/mrd:offLine/mrd:MD_Medium/mrd:name/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MetadataAccessConstraints</id>
   <name>Metadata Access Constraints</name>
   <description>Checks to see if at least one Metadata Access Constraints concept exists.</description>
   <type>constraints</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MetadataAccessConstraints is present."
                                        
  if(MetadataAccessConstraints is not None and len(str(MetadataAccessConstraints)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MetadataAccessConstraints concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MetadataAccessConstraints</name>
      <xpath>(/MD_Metadata/metadataConstraints/MD_LegalConstraints) or (/MD_Metadata/metadataConstraints/MD_SecurityConstraints) or (/*/status) or (/*/identificationInfo/*/resourceConstraints/MD_LegalConstraints/accessConstraints/MD_RestrictionCode) or (/*/metadataConstraints/MD_LegalConstraints/otherConstraints) or (/eml/access)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MetadataAssociation</id>
   <name>Metadata Association</name>
   <description>Checks to see if at least one Metadata Association concept exists.</description>
   <type>CMR-Common_Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MetadataAssociation is present."
                                        
  if(MetadataAssociation is not None and len(str(MetadataAssociation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MetadataAssociation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MetadataAssociation</name>
      <xpath>(//MD_AggregateInformation/aggregateDataSetName) or (/*/parentIdentifier/CharacterString)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MetadataContact</id>
   <name>Metadata Contact</name>
   <description>Checks to see if at least one Metadata Contact concept exists.</description>
   <type>rubricIdentification</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MetadataContact is present."
                                        
  if(MetadataContact is not None and len(str(MetadataContact)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MetadataContact concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MetadataContact</name>
      <xpath>(/eml/*/metadataProvider) or (/*/contact) or (/MD_Metadata/contact/CI_Responsibility)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MetadataDates</id>
   <name>Metadata Dates</name>
   <description>Checks to see if at least one Metadata Dates concept exists.</description>
   <type>CMR-Common_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MetadataDates is present."
                                        
  if(MetadataDates is not None and len(str(MetadataDates)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MetadataDates concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MetadataDates</name>
      <xpath>(/*/dateStamp/Date) or (/*/dateStamp/DateTime) or (/MD_Metadata/dateInfo/CI_Date[cit:dateType/CI_DateTypeCode='lastUpdate']/date/DateTime) or (/MD_Metadata/metadataMaintenance/MD_MaintenanceInformation/maintenanceDate/CI_Date[cit:dateType/CI_DateTypeCode='nextUpdate']/date/DateTime) or (/MD_Metadata/metadataMaintenance/MD_MaintenanceInformation/maintenanceDate/CI_Date[cit:dateType/CI_DateTypeCode='expiry']/date/DateTime)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MetadataDeletionDate</id>
   <name>Metadata Deletion Date</name>
   <description>Checks to see if at least one Metadata Deletion Date concept exists.</description>
   <type>UMM-Common_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MetadataDeletionDate is present."
                                        
  if(MetadataDeletionDate is not None and len(str(MetadataDeletionDate)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MetadataDeletionDate concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MetadataDeletionDate</name>
      <xpath>(/mdb:MD_Metadata/mdb:metadataMaintenance/mmi:MD_MaintenanceInformation/mmi:maintenanceDate/cit:CI_Date[cit:dateType/cit:CI_DateTypeCode='expiry']/cit:date/gco:DateTime</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MetadataLanguage</id>
   <name>Metadata Language</name>
   <description>Checks to see if at least one Metadata Language concept exists.</description>
   <type>CSWCoreReturnables</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MetadataLanguage is present."
                                        
  if(MetadataLanguage is not None and len(str(MetadataLanguage)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MetadataLanguage concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MetadataLanguage</name>
      <xpath>(/MD_Metadata/defaultLocale/PT_Locale/language/LanguageCode) or (/*/language) or (/*/language/LanguageCode)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MetadataModifiedDate</id>
   <name>Metadata Modified Date</name>
   <description>Checks to see if at least one Metadata Modified Date concept exists.</description>
   <type>CSWCoreQueryables</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MetadataModifiedDate is present."
                                        
  if(MetadataModifiedDate is not None and len(str(MetadataModifiedDate)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MetadataModifiedDate concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MetadataModifiedDate</name>
      <xpath>(/MD_Metadata/dateInfo/CI_Date[cit:dateType/CI_DateTypeCode='lastUpdate']/date/DateTime) or (/*/dateStamp/Date) or (/*/dateStamp/DateTime) or (/eml/*/maintenance/changeHistory/changeDate)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MetadataProfileCitation</id>
   <name>Metadata Profile Citation</name>
   <description>Checks to see if at least one Metadata Profile Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MetadataProfileCitation is present."
                                        
  if(MetadataProfileCitation is not None and len(str(MetadataProfileCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MetadataProfileCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MetadataProfileCitation</name>
      <xpath>(/mdb:MD_Metadata/mdb:metadataProfile/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MetadataStandardCitation</id>
   <name>Metadata Standard Citation</name>
   <description>Checks to see if at least one Metadata Standard Citation concept exists.</description>
   <type>DIF_Discovery-Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MetadataStandardCitation is present."
                                        
  if(MetadataStandardCitation is not None and len(str(MetadataStandardCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MetadataStandardCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MetadataStandardCitation</name>
      <xpath>(/MD_Metadata/metadataStandard) or (/*/metadataStandardName)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MetadataStandardVersion</id>
   <name>Metadata Standard Version</name>
   <description>Checks to see if at least one Metadata Standard Version concept exists.</description>
   <type>DIF_Discovery-Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MetadataStandardVersion is present."
                                        
  if(MetadataStandardVersion is not None and len(str(MetadataStandardVersion)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MetadataStandardVersion concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MetadataStandardVersion</name>
      <xpath>(/MD_Metadata/metadataStandard/CI_Citation/identifier/MD_Identifier/version) or (/*/metadataStandardVersion)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MetadataTimeConvention</id>
   <name>Metadata Time Convention</name>
   <description>Checks to see if at least one Metadata Time Convention concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MetadataTimeConvention is present."
                                        
  if(MetadataTimeConvention is not None and len(str(MetadataTimeConvention)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MetadataTimeConvention concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MetadataTimeConvention</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>MetadataUseConstraints</id>
   <name>Metadata Use Constraints</name>
   <description>Checks to see if at least one Metadata Use Constraints concept exists.</description>
   <type>constraints</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept MetadataUseConstraints is present."
                                        
  if(MetadataUseConstraints is not None and len(str(MetadataUseConstraints)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "MetadataUseConstraints concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>MetadataUseConstraints</name>
      <xpath>(/MD_Metadata/metadataConstraints/MD_Constraints/useLimitation) or (/MD_Metadata/metadataConstraints/MD_LegalConstraints/useConstraints/MD_RestrictionCode) or (/*/metadataConstraints/MD_Constraints/useLimitation) or (/*/metadataConstraints/MD_LegalConstraints/useConstraints/MD_RestrictionCode) or (/eml/access)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Name</id>
   <name>Name</name>
   <description>Checks to see if at least one Name concept exists.</description>
   <type>UMM-Variable_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Name is present."
                                        
  if(Name is not None and len(str(Name)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Name concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Name</name>
      <xpath>(/MI_Metadata/contentInfo/*/dimension/MD_Band/sequenceIdentifier/MemberName/aName/CharacterString) or (/MD_Metadata/contentInfo/*/attributeGroup/MD_AttributeGroup/attribute/MD_SampleDimension/sequenceIdentifier/MemberName/aName/CharacterString)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>NamingAuthority</id>
   <name>Naming Authority</name>
   <description>Checks to see if at least one Naming Authority concept exists.</description>
   <type>identifiers</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept NamingAuthority is present."
                                        
  if(NamingAuthority is not None and len(str(NamingAuthority)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "NamingAuthority concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>NamingAuthority</name>
      <xpath>(/MD_Metadata/identificationInfo/*/citation/CI_Citation/identifier/MD_Identifier/codeSpace) or (/*/identificationInfo/*/citation/CI_Citation/identifier/MD_Identifier/authority)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>NorthernmostLatitude</id>
   <name>Northernmost Latitude</name>
   <description>Checks to see if at least one Northernmost Latitude concept exists.</description>
   <type>extent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept NorthernmostLatitude is present."
                                        
  if(NorthernmostLatitude is not None and len(str(NorthernmostLatitude)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "NorthernmostLatitude concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>NorthernmostLatitude</name>
      <xpath>(/MD_Metadata/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox/northBoundLatitude/Decimal) or (/*/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox/northBoundLatitude/Decimal) or (/eml/*/coverage/geographicCoverage/boundingCoordinates/northBoundingCoordinate)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Offset</id>
   <name>Offset</name>
   <description>Checks to see if at least one Offset concept exists.</description>
   <type>UMM-Variable_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Offset is present."
                                        
  if(Offset is not None and len(str(Offset)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Offset concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Offset</name>
      <xpath>(/MI_Metadata/contentInfo/*/dimension/MD_Band/offset) or (/MD_Metadata/contentInfo/*/attributeGroup/MD_AttributeGroup/attribute/MD_SampleDimension/offset)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>OnlineResourceFunction</id>
   <name>Online Resource Function</name>
   <description>Checks to see if at least one Online Resource Function concept exists.</description>
   <type>OnlineResources</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept OnlineResourceFunction is present."
                                        
  if(OnlineResourceFunction is not None and len(str(OnlineResourceFunction)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "OnlineResourceFunction concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>OnlineResourceFunction</name>
      <xpath>(//CI_OnlineResource/function/CI_OnLineFunctionCode) or (//CI_OnlineResource/function/CI_OnLineFunctionCode)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>OperationCitation</id>
   <name>Operation Citation</name>
   <description>Checks to see if at least one Operation Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept OperationCitation is present."
                                        
  if(OperationCitation is not None and len(str(OperationCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "OperationCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>OperationCitation</name>
      <xpath>(/mdb:MD_Metadata/mdb:acquisitionInformation/mac:MI_AcquisitionInformation/mac:operation/mac:MI_Operation/mac:citation/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>OrderingInstructions</id>
   <name>Ordering Instructions</name>
   <description>Checks to see if at least one Ordering Instructions concept exists.</description>
   <type>distributionInfo</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept OrderingInstructions is present."
                                        
  if(OrderingInstructions is not None and len(str(OrderingInstructions)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "OrderingInstructions concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>OrderingInstructions</name>
      <xpath>(/MD_Metadata/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributionOrderProcess/MD_StandardOrderProcess/orderingInstructions) or (/*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributionOrderProcess/MD_StandardOrderProcess/orderingInstructions) or (/eml/*/physical/distribution)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>OrganizationName</id>
   <name>Organization Name</name>
   <description>Checks to see if at least one Organization Name concept exists.</description>
   <type>people</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept OrganizationName is present."
                                        
  if(OrganizationName is not None and len(str(OrganizationName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "OrganizationName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>OrganizationName</name>
      <xpath>(//CI_Responsibility/party/CI_Organisation/name) or (//CI_ResponsibleParty/organisationName) or (/eml/*/*/organizationName) or (/resource/creators/creator/affiliation)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PGEName</id>
   <name>PGE Name</name>
   <description>Checks to see if at least one PGE Name concept exists.</description>
   <type>CMR-Granule_Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PGEName is present."
                                        
  if(PGEName is not None and len(str(PGEName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PGEName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PGEName</name>
      <xpath>(//gmd:processStep/gmi:LE_ProcessStep/gmi:processingInformation/eos:EOS_Processing/gmi:identifier/gmd:MD_Identifier/gmd:description</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PGEVersion</id>
   <name>PGE Version</name>
   <description>Checks to see if at least one PGE Version concept exists.</description>
   <type>CMR-Granule_Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PGEVersion is present."
                                        
  if(PGEVersion is not None and len(str(PGEVersion)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PGEVersion concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PGEVersion</name>
      <xpath>(//gmd:processStep/gmi:LE_ProcessStep/gmi:processingInformation/eos:EOS_Processing/gmi:identifier/gmd:MD_Identifier/gmd:code</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PaleoTemporalCoverage</id>
   <name>Paleo Temporal Coverage</name>
   <description>Checks to see if at least one Paleo Temporal Coverage concept exists.</description>
   <type>DIF_Discovery-HighlyRecommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PaleoTemporalCoverage is present."
                                        
  if(PaleoTemporalCoverage is not None and len(str(PaleoTemporalCoverage)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PaleoTemporalCoverage concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PaleoTemporalCoverage</name>
      <xpath>(/*/identificationInfo/*/extent/EX_Extent/temporalElement/EX_TemporalExtent/extent/TimePeriod) or (/eml/*/coverage/temporalCoverage/rangeOfDates/beginDate/alternativeTimeScale)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ParameterDefinition</id>
   <name>Parameter Definition</name>
   <description>Checks to see if at least one Parameter Definition concept exists.</description>
   <type>rubricContent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ParameterDefinition is present."
                                        
  if(ParameterDefinition is not None and len(str(ParameterDefinition)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ParameterDefinition concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ParameterDefinition</name>
      <xpath>(/MD_Metadata/contentInfo/MD_CoverageDescription/attributeGroup/MD_AttributeGroup/attribute/*/description) or (/*/contentInfo/MD_CoverageDescription/dimension/MD_Band/descriptor)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ParameterName</id>
   <name>Parameter Name</name>
   <description>Checks to see if at least one Parameter Name concept exists.</description>
   <type>rubricContent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ParameterName is present."
                                        
  if(ParameterName is not None and len(str(ParameterName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ParameterName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ParameterName</name>
      <xpath>(/MD_Metadata/contentInfo/MD_CoverageDescription/attributeGroup/MD_AttributeGroup/attribute/MD_SampleDimension/sequenceIdentifier/MemberName/aName) or (/*/contentInfo/MD_CoverageDescription/dimension/MD_Band/sequenceIdentifier/MemberName/aName)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ParameterName(Long)</id>
   <name>Parameter Name (Long)</name>
   <description>Checks to see if at least one Parameter Name (Long) concept exists.</description>
   <type>rubricContent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ParameterName(Long) is present."
                                        
  if(ParameterName(Long) is not None and len(str(ParameterName(Long))) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ParameterName(Long) concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ParameterName(Long)</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ParametersCitation</id>
   <name>Parameters Citation</name>
   <description>Checks to see if at least one Parameters Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ParametersCitation is present."
                                        
  if(ParametersCitation is not None and len(str(ParametersCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ParametersCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ParametersCitation</name>
      <xpath>(/mdb:MD_Metadata/mdb:spatialRepresentationInfo/msr:MD_Georeferenceable/msr:parameterCitation/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ParentIdentifier</id>
   <name>Parent Identifier</name>
   <description>Checks to see if at least one Parent Identifier concept exists.</description>
   <type>identifiers</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ParentIdentifier is present."
                                        
  if(ParentIdentifier is not None and len(str(ParentIdentifier)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ParentIdentifier concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ParentIdentifier</name>
      <xpath>(/MD_Metadata/identificationInfo/*/associatedResource/MD_AssociatedResource[mri:associationType/DS_AssociationTypeCode='LargerWorkCitation']) or (/DryadDataPackage/references) or (/DryadDataFile/isPartOf) or (/*/identificationInfo/*/aggregationInfo/MD_AggregateInformation[gmd:associationType/DS_AssociationTypeCode='LargerWorkCitation']/aggregateDataSetIdentifier/MD_Identifier/code) or (/eml/*/project/@id)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ParentMetadataReference</id>
   <name>Parent Metadata Reference</name>
   <description>Checks to see if at least one Parent Metadata Reference concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ParentMetadataReference is present."
                                        
  if(ParentMetadataReference is not None and len(str(ParentMetadataReference)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ParentMetadataReference concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ParentMetadataReference</name>
      <xpath>(/mdb:MD_Metadata/mdb:parentMetadata/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Party</id>
   <name>Party</name>
   <description>Checks to see if at least one Party concept exists.</description>
   <type>CMR-Common_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Party is present."
                                        
  if(Party is not None and len(str(Party)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Party concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Party</name>
      <xpath>(//CI_ResponsibleParty/individualName) or (//CI_ResponsibleParty/organisationName) or (//CI_ResponsibleParty/contactInfo) or (//CI_Responsibility/party/CI_Individual/name) or (//CI_Responsibility/party/CI_Organisation/name) or (//CI_Responsibility/party/*/contactInfo)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Phone</id>
   <name>Phone</name>
   <description>Checks to see if at least one Phone concept exists.</description>
   <type>people</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Phone is present."
                                        
  if(Phone is not None and len(str(Phone)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Phone concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Phone</name>
      <xpath>(//CI_Responsibility/party/CI_Individual/contactInfo/CI_Contact/phone/CI_Telephone[normalize-space\(numberType/CI_TelephoneTypeCode)='voice']) or (//CI_Responsibility/party/CI_Organisation/contactInfo/CI_Contact/phone/CI_Telephone[normalize-space\(numberType/CI_TelephoneTypeCode)='voice']) or (//CI_ResponsibleParty/contactInfo/CI_Contact/phone/CI_Telephone/voice)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PhoneType</id>
   <name>Phone Type</name>
   <description>Checks to see if at least one Phone Type concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PhoneType is present."
                                        
  if(PhoneType is not None and len(str(PhoneType)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PhoneType concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PhoneType</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PlaceKeyword</id>
   <name>Place Keyword</name>
   <description>Checks to see if at least one Place Keyword concept exists.</description>
   <type>extent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PlaceKeyword is present."
                                        
  if(PlaceKeyword is not None and len(str(PlaceKeyword)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PlaceKeyword concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PlaceKeyword</name>
      <xpath>(/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space\(type/MD_KeywordTypeCode)='place']/keyword) or (/MD_Metadata/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicDescription/geographicIdentifier/MD_Identifier/code) or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains\(type/MD_KeywordTypeCode,'place')]/keyword) or (/eml/*/keywordSet/keyword[@keywordType='place'])</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PlanCitation</id>
   <name>Plan Citation</name>
   <description>Checks to see if at least one Plan Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PlanCitation is present."
                                        
  if(PlanCitation is not None and len(str(PlanCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PlanCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PlanCitation</name>
      <xpath>(/mdb:MD_Metadata/mdb:acquisitionInformation/mac:MI_AcquisitionInformation/mac:acquisitionPlan/mac:MI_Plan/mac:citation/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Platform</id>
   <name>Platform</name>
   <description>Checks to see if at least one Platform concept exists.</description>
   <type>rubricAcquisition</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Platform is present."
                                        
  if(Platform is not None and len(str(Platform)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Platform concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Platform</name>
      <xpath>(/MD_Metadata/acquisitionInformation/MI_AcquisitionInformation/platform) or (/*/acquisitionInformation/MI_AcquisitionInformation/platform)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PlatformCharacteristicsName</id>
   <name>Platform Characteristics Name</name>
   <description>Checks to see if at least one Platform Characteristics Name concept exists.</description>
   <type>acquisitionDetails</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PlatformCharacteristicsName is present."
                                        
  if(PlatformCharacteristicsName is not None and len(str(PlatformCharacteristicsName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PlatformCharacteristicsName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PlatformCharacteristicsName</name>
      <xpath>(/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/platform/EOS_Platform/otherProperty/Record/AdditionalAttributes/AdditionalAttribute/reference/EOS_AdditionalAttributeDescription[eos:type/EOS_AdditionalAttributeTypeCode='platformInformation']/name) or (//platform/*/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute/reference/EOS_AdditionalAttributeDescription[eos:type/EOS_AdditionalAttributeTypeCode='platformInformation']/name)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PlatformCharacteristicsValue</id>
   <name>Platform Characteristics Value</name>
   <description>Checks to see if at least one Platform Characteristics Value concept exists.</description>
   <type>acquisitionDetails</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PlatformCharacteristicsValue is present."
                                        
  if(PlatformCharacteristicsValue is not None and len(str(PlatformCharacteristicsValue)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PlatformCharacteristicsValue concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PlatformCharacteristicsValue</name>
      <xpath>(/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/platform/EOS_Platform/otherProperty/Record/AdditionalAttributes/AdditionalAttribute/value) or (//platform/*/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/type/EOS_AdditionalAttributeTypeCode='platformInformation']/value) or (//platform/*/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/type/EOS_AdditionalAttributeTypeCode='platformInformation']/value)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PlatformCitation</id>
   <name>Platform Citation</name>
   <description>Checks to see if at least one Platform Citation concept exists.</description>
   <type>acquisitionDetails</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PlatformCitation is present."
                                        
  if(PlatformCitation is not None and len(str(PlatformCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PlatformCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PlatformCitation</name>
      <xpath>(/gmi:MI_Metadata/gmi:acquisitionInformation/gmi:MI_AcquisitionInformation/gmi:platform/*/gmi:citation/gmi:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PlatformKeyword</id>
   <name>Platform Keyword</name>
   <description>Checks to see if at least one Platform Keyword concept exists.</description>
   <type>rubricAcquisition</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PlatformKeyword is present."
                                        
  if(PlatformKeyword is not None and len(str(PlatformKeyword)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PlatformKeyword concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PlatformKeyword</name>
      <xpath>(/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space\(type/MD_KeywordTypeCode)='platform']/keyword) or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains\(type/MD_KeywordTypeCode,'platform')]/keyword)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PlatformLongName</id>
   <name>Platform Long Name</name>
   <description>Checks to see if at least one Platform Long Name concept exists.</description>
   <type>acquisitionDetails</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PlatformLongName is present."
                                        
  if(PlatformLongName is not None and len(str(PlatformLongName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PlatformLongName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PlatformLongName</name>
      <xpath>(/MD_Metadata/acquisitionInformation/MI_AcquisitionInformation/platform/*/description) or (/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/platform/EOS_Platform/identifier/MD_Identifier/description)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PlatformOrbitInformation</id>
   <name>Platform Orbit Information</name>
   <description>Checks to see if at least one Platform Orbit Information concept exists.</description>
   <type>CMR-Granule_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PlatformOrbitInformation is present."
                                        
  if(PlatformOrbitInformation is not None and len(str(PlatformOrbitInformation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PlatformOrbitInformation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PlatformOrbitInformation</name>
      <xpath>(//platform/EOS_Platform/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/name='OrbitalModelName']/value) or (//platform/EOS_Platform/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/name='OrbitNumber']/value) or (//platform/EOS_Platform/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/name='StartOrbitNumber']/value) or (//platform/EOS_Platform/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/name='StopOrbitNumber']/value) or (//platform/EOS_Platform/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/name='EquatorCrossingLongitude']/value) or (//platform/EOS_Platform/otherProperty/Record/EOS_AdditionalAttributes/additionalAttribute/EOS_AdditionalAttribute[eos:reference/EOS_AdditionalAttributeDescription/name='EquatorCrossingDateTime']/value)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PlatformShortName</id>
   <name>Platform Short Name</name>
   <description>Checks to see if at least one Platform Short Name concept exists.</description>
   <type>acquisitionDetails</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PlatformShortName is present."
                                        
  if(PlatformShortName is not None and len(str(PlatformShortName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PlatformShortName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PlatformShortName</name>
      <xpath>(/MD_Metadata/acquisitionInformation/MI_AcquisitionInformation/platform/*/identifier/MD_Identifier/code) or (//platform/*/identifier/MD_Identifier/code)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PlatformType</id>
   <name>Platform Type</name>
   <description>Checks to see if at least one Platform Type concept exists.</description>
   <type>acquisitionDetails</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PlatformType is present."
                                        
  if(PlatformType is not None and len(str(PlatformType)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PlatformType concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PlatformType</name>
      <xpath>(/gmi:MI_Metadata/gmi:acquisitionInformation/gmi:MI_AcquisitionInformation/gmi:platform/eos:EOS_Platform/gmi:description</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PointLatitude</id>
   <name>Point Latitude</name>
   <description>Checks to see if at least one Point Latitude concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PointLatitude is present."
                                        
  if(PointLatitude is not None and len(str(PointLatitude)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PointLatitude concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PointLatitude</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PointLongitude</id>
   <name>Point Longitude</name>
   <description>Checks to see if at least one Point Longitude concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PointLongitude is present."
                                        
  if(PointLongitude is not None and len(str(PointLongitude)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PointLongitude concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PointLongitude</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PortrayalCatalogueCitation</id>
   <name>Portrayal Catalogue Citation</name>
   <description>Checks to see if at least one Portrayal Catalogue Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PortrayalCatalogueCitation is present."
                                        
  if(PortrayalCatalogueCitation is not None and len(str(PortrayalCatalogueCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PortrayalCatalogueCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PortrayalCatalogueCitation</name>
      <xpath>(/MD_Metadata/portrayalCatalogueInfo/MD_PortrayalCatalogueReference/portrayalCatalogueCitation/CI_Citation) or (/*/portrayalCatalogueInfo/MD_PortrayalCatalogueReference/portrayalCatalogueCitation/CI_Citation)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PositionalAccuracyReport</id>
   <name>Positional Accuracy Report</name>
   <description>Checks to see if at least one Positional Accuracy Report concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PositionalAccuracyReport is present."
                                        
  if(PositionalAccuracyReport is not None and len(str(PositionalAccuracyReport)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PositionalAccuracyReport concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PositionalAccuracyReport</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_AbsoluteExternalPositionalAccuracy) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_RelativeInternalPositionalAccuracy) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_GriddedDataPositionalAccuracy) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_AbsoluteExternalPositionalAccuracy) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_RelativeExternalPositionalAccuracy) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_GriddedDataPositionalAccuracy)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PrecisionofSeconds</id>
   <name>Precision of Seconds</name>
   <description>Checks to see if at least one Precision of Seconds concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PrecisionofSeconds is present."
                                        
  if(PrecisionofSeconds is not None and len(str(PrecisionofSeconds)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PrecisionofSeconds concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PrecisionofSeconds</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProcessStep.1</id>
   <name>Process Step</name>
   <description>Check if a process step exists.</description>
   <type>Reusable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  if ('ProcessStep' in globals() and ProcessStep is not None and ProcessStep):
    output = "A process step is present"
    status = "SUCCESS"
    return True
  else:
    output = "A process step is not present"
    status = "FAILURE"
    return False

      ]]></code>
   <selector>
      <name>ProcessStep</name>
      <xpath>boolean(/*/resourceLineage/LI_Lineage/processStep/LI_ProcessStep
          or /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LI_ProcessStep
          or /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LE_ProcessStep
          or /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/source/LI_Source/sourceStep/LI_ProcessStep
          or /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/source/LE_Source/sourceStep/LE_ProcessStep
          or /eml/*/methods)
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProcessStepDescription</id>
   <name>Process Step Description</name>
   <description>Checks to see if at least one Process Step Description concept exists.</description>
   <type>ISO_Lineage</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProcessStepDescription is present."
                                        
  if(ProcessStepDescription is not None and len(str(ProcessStepDescription)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProcessStepDescription concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProcessStepDescription</name>
      <xpath>(/MD_Metadata/resourceLineage/LI_Lineage/processStep/LI_ProcessStep/description) or (//processStep/*/description)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProcessStepPurpose</id>
   <name>Process Step Purpose</name>
   <description>Checks to see if at least one Process Step Purpose concept exists.</description>
   <type>ISO_Lineage</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProcessStepPurpose is present."
                                        
  if(ProcessStepPurpose is not None and len(str(ProcessStepPurpose)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProcessStepPurpose concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProcessStepPurpose</name>
      <xpath>(/MD_Metadata/resourceLineage/LI_Lineage/processStep/LI_ProcessStep/rationale) or (/*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LI_ProcessStep/rationale)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProcessStepReference</id>
   <name>Process Step Reference</name>
   <description>Checks to see if at least one Process Step Reference concept exists.</description>
   <type>ISO_Lineage</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProcessStepReference is present."
                                        
  if(ProcessStepReference is not None and len(str(ProcessStepReference)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProcessStepReference concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProcessStepReference</name>
      <xpath>(/MD_Metadata/resourceLineage/LI_Lineage/processStep/LE_ProcessStep/processingInformation/LE_Processing/softwareReference/CI_Citation) or (/MD_Metadata/resourceLineage/LI_Lineage/processStep/LE_ProcessStep/processingInformation/LE_Processing/documentation/CI_Citation) or (/MD_Metadata/resourceLineage/LI_Lineage/processStep/LE_ProcessStep/processingInformation/LE_Processing/algorithm/LE_Algorithm/citation/CI_Citation) or (/MI_Metadata/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LE_ProcessStep/processingInformation/LE_Processing/softwareReference/CI_Citation) or (/MI_Metadata/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LE_ProcessStep/processingInformation/LE_Processing/documentation/CI_Citation) or (/MI_Metadata/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LE_ProcessStep/processingInformation/LE_Processing/algorithm/LE_Algorithm/citation/CI_Citation)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProcessStepScope</id>
   <name>Process Step Scope</name>
   <description>Checks to see if at least one Process Step Scope concept exists.</description>
   <type>ISO_Lineage</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProcessStepScope is present."
                                        
  if(ProcessStepScope is not None and len(str(ProcessStepScope)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProcessStepScope concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProcessStepScope</name>
      <xpath>(/mdb:MD_Metadata/mdb:resourceLineage/mrl:LI_Lineage/mrl:processStep/mrl:LI_ProcessStep/mrl:scope</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProcessStepTime</id>
   <name>Process Step Time</name>
   <description>Checks to see if at least one Process Step Time concept exists.</description>
   <type>ISO_Lineage</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProcessStepTime is present."
                                        
  if(ProcessStepTime is not None and len(str(ProcessStepTime)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProcessStepTime concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProcessStepTime</name>
      <xpath>(/MD_Metadata/resourceLineage/LI_Lineage/processStep/LI_ProcessStep/stepDateTime) or (//processStep/*/dateTime)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProcessingCitation</id>
   <name>Processing Citation</name>
   <description>Checks to see if at least one Processing Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProcessingCitation is present."
                                        
  if(ProcessingCitation is not None and len(str(ProcessingCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProcessingCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProcessingCitation</name>
      <xpath>(/mdb:MD_Metadata/mdb:resourceLineage/mrl:LI_Lineage/mrl:processStep/mrl:LE_ProcessStep/mrl:processingInformation/mrl:LE_Processing/mrl:documentation/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProcessingLevel</id>
   <name>Processing Level</name>
   <description>Checks to see if at least one Processing Level concept exists.</description>
   <type>ACDD_recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProcessingLevel is present."
                                        
  if(ProcessingLevel is not None and len(str(ProcessingLevel)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProcessingLevel concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProcessingLevel</name>
      <xpath>(/MD_Metadata/identificationInfo/*/processingLevel/MD_Identifier/code) or (/*/contentInfo/*/processingLevelCode/MD_Identifier/code)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProcessingSoftwareReference</id>
   <name>Processing Software Reference</name>
   <description>Checks to see if at least one Processing Software Reference concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProcessingSoftwareReference is present."
                                        
  if(ProcessingSoftwareReference is not None and len(str(ProcessingSoftwareReference)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProcessingSoftwareReference concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProcessingSoftwareReference</name>
      <xpath>(/mdb:MD_Metadata/mdb:resourceLineage/mrl:LI_Lineage/mrl:processStep/mrl:LE_ProcessStep/mrl:processingInformation/mrl:LE_Processing/mrl:softwareReference/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Processor</id>
   <name>Processor</name>
   <description>Checks to see if at least one Processor concept exists.</description>
   <type>ISO_Lineage</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Processor is present."
                                        
  if(Processor is not None and len(str(Processor)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Processor concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Processor</name>
      <xpath>(/MD_Metadata/resourceLineage/LI_Lineage/processStep/LI_ProcessStep/processor) or (/*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LI_ProcessStep/processor) or (/*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LE_ProcessStep/processor)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProducerIdentifier</id>
   <name>Producer Identifier</name>
   <description>Checks to see if at least one Producer Identifier concept exists.</description>
   <type>CMR-Granule_Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProducerIdentifier is present."
                                        
  if(ProducerIdentifier is not None and len(str(ProducerIdentifier)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProducerIdentifier concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProducerIdentifier</name>
      <xpath>(/MD_Metadata/identificationInfo/*/citation/CI_Citation/identifier/MD_Identifier/code[../../codeSpace='ProducerGranuleID']) or (//identificationInfo/*/citation/CI_Citation/identifier/MD_Identifier[gmd:description='ProducerGranuleId']/code)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProjectDescription</id>
   <name>Project Description</name>
   <description>Checks to see if at least one Project Description concept exists.</description>
   <type>LTER_Evaluation</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProjectDescription is present."
                                        
  if(ProjectDescription is not None and len(str(ProjectDescription)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProjectDescription concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProjectDescription</name>
      <xpath>(/eml:eml/*/project</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProjectKeyword</id>
   <name>Project Keyword</name>
   <description>Checks to see if at least one Project Keyword concept exists.</description>
   <type>ProjectIdentification</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProjectKeyword is present."
                                        
  if(ProjectKeyword is not None and len(str(ProjectKeyword)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProjectKeyword concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProjectKeyword</name>
      <xpath>(/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space\(type/MD_KeywordTypeCode)='project']/keyword) or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains\(type/MD_KeywordTypeCode,'project')]/keyword)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProjectName</id>
   <name>Project Name</name>
   <description>Checks to see if at least one Project Name concept exists.</description>
   <type>ACDD_recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProjectName is present."
                                        
  if(ProjectName is not None and len(str(ProjectName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProjectName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProjectName</name>
      <xpath>(/MD_Metadata/identificationInfo/*/associatedResource/MD_AssociatedResource[normalize-space\(initiativeType/DS_InitiativeTypeCode)='project']/name/CI_Citation/title) or (/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space\(type/MD_KeywordTypeCode)='project']/keyword) or (/*/identificationInfo/*/aggregationInfo/MD_AggregateInformation[normalize-space\(associationType/DS_AssociationTypeCode)='largerWorkCitation' and normalize-space\(initiativeType/DS_InitiativeTypeCode)='project']/aggregateDataSetName/CI_Citation/title) or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains\(type/MD_KeywordTypeCode,'project')]/keyword) or (/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/operation/MI_Operation/citation/CI_Citation) or (/eml/*/creator/electronicMailAddress)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ProjectSponsor</id>
   <name>Project Sponsor</name>
   <description>Checks to see if at least one Project Sponsor concept exists.</description>
   <type>ProjectIdentification</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ProjectSponsor is present."
                                        
  if(ProjectSponsor is not None and len(str(ProjectSponsor)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ProjectSponsor concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ProjectSponsor</name>
      <xpath>(/mdb:MD_Metadata/mdb:identificationInfo/*/mri:citation/cit:CI_Citation/cit:citedResponsibleParty/cit:CI_Responsibility[normalize-space(cit:role/cit:CI_RoleCode)='funder']/cit:party/*/cit:name</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>PublicationInformation</id>
   <name>Publication Information</name>
   <description>Checks to see if at least one Publication Information concept exists.</description>
   <type>CMR-Common_Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept PublicationInformation is present."
                                        
  if(PublicationInformation is not None and len(str(PublicationInformation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "PublicationInformation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>PublicationInformation</name>
      <xpath>(/*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Purpose</id>
   <name>Purpose</name>
   <description>Checks to see if at least one Purpose concept exists.</description>
   <type>rubricDescription</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Purpose is present."
                                        
  if(Purpose is not None and len(str(Purpose)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Purpose concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Purpose</name>
      <xpath>(/MD_Metadata/identificationInfo/*/purpose) or (/*/identificationInfo/*/purpose) or (/eml/*/purpose)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>QualityStatement</id>
   <name>Quality Statement</name>
   <description>Checks to see if at least one Quality Statement concept exists.</description>
   <type>DIF_Discovery-HighlyRecommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept QualityStatement is present."
                                        
  if(QualityStatement is not None and len(str(QualityStatement)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "QualityStatement concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>QualityStatement</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/standaloneQualityReport/DQ_StandaloneQualityReportInformation) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report) or (/MI_Metadata/dataQualityInfo/DQ_DataQuality/report) or (/eml/methods/qualityControl/description)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>QuantitativeResult</id>
   <name>Quantitative Result</name>
   <description>Checks to see if at least one Quantitative Result concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept QuantitativeResult is present."
                                        
  if(QuantitativeResult is not None and len(str(QuantitativeResult)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "QuantitativeResult concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>QuantitativeResult</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_Element/result/DQ_QuantitativeResult) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_QuantitativeAttributeAccuracy/result/DQ_QuantitativeResult)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>RadiusUnits</id>
   <name>Radius Units</name>
   <description>Checks to see if at least one Radius Units concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept RadiusUnits is present."
                                        
  if(RadiusUnits is not None and len(str(RadiusUnits)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "RadiusUnits concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>RadiusUnits</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>RelatedMetadataCitation</id>
   <name>Related Metadata Citation</name>
   <description>Checks to see if at least one Related Metadata Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept RelatedMetadataCitation is present."
                                        
  if(RelatedMetadataCitation is not None and len(str(RelatedMetadataCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "RelatedMetadataCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>RelatedMetadataCitation</name>
      <xpath>(/mdb:MD_Metadata/mdb:identificationInfo/mri:MD_DataIdentification/mri:associatedResource/mri:MD_AssociatedResource/mri:metadataReference</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>RelatedResourceCitation</id>
   <name>Related Resource Citation</name>
   <description>Checks to see if at least one Related Resource Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept RelatedResourceCitation is present."
                                        
  if(RelatedResourceCitation is not None and len(str(RelatedResourceCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "RelatedResourceCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>RelatedResourceCitation</name>
      <xpath>(/MD_Metadata/identificationInfo/*/associatedResource/MD_AssociatedResource/name/CI_Citation) or (/*/identificationInfo/*/aggregationInfo/MD_AggregateInformation/aggregateDataSetName/CI_Citation) or (/eml/*/project)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>RelatedResourceIdentifier</id>
   <name>Related Resource Identifier</name>
   <description>Checks to see if at least one Related Resource Identifier concept exists.</description>
   <type>relatedResourceCitation</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept RelatedResourceIdentifier is present."
                                        
  if(RelatedResourceIdentifier is not None and len(str(RelatedResourceIdentifier)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "RelatedResourceIdentifier concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>RelatedResourceIdentifier</name>
      <xpath>(/MD_Metadata/identificationInfo/*/associatedResource/MD_AssociatedResource/name/CI_Citation/identifier/MD_Identifier/code) or (/DryadDataPackage/external) or (/DryadDataFile/isPartOf) or (/DryadDataPackage/references) or (/DryadDataPackage/hasPart) or (/*/identificationInfo/*/aggregationInfo/MD_AggregateInformation/aggregateDataSetIdentifier/MD_Identifier/code) or (/*/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicDescription/geographicIdentifier/MD_Identifier/code) or (/*/identificationInfo/*/processingLevel/MD_Identifier/code) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_AccuracyOfATimeMeasurement/measureIdentification/MD_Identifier/code) or (/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/operation/MI_Operation/identifier/MD_Identifier/code) or (/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/platform/*/identifier/MD_Identifier/code) or (/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/instrument/*/identifier/MD_Identifier/code) or (/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/sensor/EOS_Sensor/identifier/MD_Identifier/code) or (/eml/*/project/@id) or (/resource/relatedIdentifiers/relatedIdentifier)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>RelatedURL</id>
   <name>Related URL</name>
   <description>Checks to see if at least one Related URL concept exists.</description>
   <type>CMR-Common_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept RelatedURL is present."
                                        
  if(RelatedURL is not None and len(str(RelatedURL)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "RelatedURL concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>RelatedURL</name>
      <xpath>(/*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorTransferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[not(contains\(function/CI_OnLineFunctionCode,'download'))]) or (/*/distributionInfo/MD_Distribution/transferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[not(contains\(function/CI_OnLineFunctionCode,'download'))]) or (/*/identificationInfo/*/graphicOverview/MD_BrowseGraphic/fileName) or (/*/identificationInfo/*/graphicOverview/MD_BrowseGraphic/fileName) or (//MD_DigitalTransferOptions/onLine/CI_OnlineResource/linkage) or (/MD_Metadata/identificationInfo/*/graphicOverview/MD_BrowseGraphic/fileName)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Report</id>
   <name>Report</name>
   <description>Checks to see if at least one Report concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Report is present."
                                        
  if(Report is not None and len(str(Report)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Report concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Report</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report) or (/*/dataQualityInfo/DQ_DataQuality/report)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Representativity</id>
   <name>Representativity</name>
   <description>Checks to see if at least one Representativity concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Representativity is present."
                                        
  if(Representativity is not None and len(str(Representativity)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Representativity concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Representativity</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_Representativity/mdq:result</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ReprocessingPlanNote</id>
   <name>Reprocessing Plan Note</name>
   <description>Checks to see if at least one Reprocessing Plan Note concept exists.</description>
   <type>CMR-Granule_Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ReprocessingPlanNote is present."
                                        
  if(ReprocessingPlanNote is not None and len(str(ReprocessingPlanNote)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ReprocessingPlanNote concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ReprocessingPlanNote</name>
      <xpath>(/*/gmd:metadataMaintenance/gmd:MD_MaintenanceInformation/gmd:maintenanceNote</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>RequirementCitation</id>
   <name>Requirement Citation</name>
   <description>Checks to see if at least one Requirement Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept RequirementCitation is present."
                                        
  if(RequirementCitation is not None and len(str(RequirementCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "RequirementCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>RequirementCitation</name>
      <xpath>(/mdb:MD_Metadata/mdb:acquisitionInformation/mac:MI_AcquisitionInformation/mac:acquisitionRequirement/mac:MI_Requirement/mac:citation/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceAccessConstraints</id>
   <name>Resource Access Constraints</name>
   <description>Checks to see if at least one Resource Access Constraints concept exists.</description>
   <type>constraints</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceAccessConstraints is present."
                                        
  if(ResourceAccessConstraints is not None and len(str(ResourceAccessConstraints)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceAccessConstraints concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceAccessConstraints</name>
      <xpath>(/MD_Metadata/identificationInfo/*/resourceConstraints/MD_LegalConstraints/accessConstraints) or (/MD_Metadata/identificationInfo/*/resourceConstraints/MD_LegalConstraints/otherConstraints) or (/*/identificationInfo/*/resourceConstraints/MD_LegalConstraints/accessConstraints/MD_RestrictionCode) or (/*/identificationInfo/*/resourceConstraints/MD_LegalConstraints/otherConstraints) or (/eml/access)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceAuthorOriginatorEmailAddress.1</id>
   <name>Resource Author / Originator Email Address</name>
   <description>Checks to see if at least one Resource Author / Originator Email Address concept exists.</description>
   <type>FAIR-Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status

  if ('ResourceAuthorOriginatorEmailAddress' in globals() and ResourceAuthorOriginatorEmailAddress is not None and ResourceAuthorOriginatorEmailAddress):
    output = "An author/originator email address is present"
    status = "SUCCESS"
    return True
  else:
    output = "An author/originator email address is not present"
    status = "FAILURE"
    return False

      ]]></code>
   <selector>
      <name>ResourceAuthorOriginatorEmailAddress</name>
      <xpath>boolean((/eml/*/creator/electronicMailAddress) or
         (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='author']/contactInfo/CI_Contact/address/CI_Address/electronicMailAddress)
         or (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty[normalize-space(role/CI_RoleCode)='author']/CI_Responsibility/party/CI_Individual/contactInfo/CI_Contact/address/CI_Address/electronicMailAddress)
         or (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty[normalize-space(role/CI_RoleCode)='originator']/CI_Responsibility/party/CI_Individual/contactInfo/CI_Contact/address/CI_Address/electronicMailAddress))
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceAuthorOriginatorOrganization.1</id>
   <name>Resource Author / Originator Organization</name>
   <description>Check that an author / originator organization exists.</description>
   <type>FAIR-Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  if ('ResourceAuthorOriginatorIdentifier' in globals() and ResourceAuthorOriginatorIdentifier is not None and ResourceAuthorOriginatorIdentifier):
    output = "An author / originator organization is present"
    status = "SUCCESS"
    return True
  else:
    output = "An author / originator organization is not present"
    status = "FAILURE"
    return False
      ]]></code>
   <selector>
      <name>ResourceAuthorOriginatorOrganization</name>
      <xpath>boolean((/eml/*/creator/organizationName)
         or (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='author']/organisationName)
         or (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='originator']/organisationName)
         or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='author']/party/CI_Organisation/name))
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceAuthorOriginatorURL.1</id>
   <name>Resource Author / Originator URL</name>
   <description>Checks to see if at least one Resource Author / Originator URL concept exists.</description>
   <type>FAIR-Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  if ('ResourceAuthorOriginatorURL' in globals() and ResourceAuthorOriginatorURL is not None and ResourceAuthorOriginatorURL):
    output = "An author / originator URL is present"
    status = "SUCCESS"
    return True
  else:
    output = "An author / originator URL is not present"
    status = "FAILURE"
    return False
      ]]></code>
   <selector>
      <name>ResourceAuthorOriginatorURL</name>
      <xpath>boolean((/eml/*/creator/onlineUrl)
         or (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='author' | normalize-space\(role/CI_RoleCode)='originator']/contactInfo/CI_Contact/onlineResource/CI_OnlineResource/linkage/URL)
         or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='author')]/party/CI_Organisation/contactInfo/CI_Contact/onlineResource/CI_OnlineResource/linkage)
         or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='originator']/party/CI_Organisation/contactInfo/CI_Contact/onlineResource/CI_OnlineResource/linkage))
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceCitation</id>
   <name>Resource Citation</name>
   <description>Checks to see if at least one Resource Citation concept exists.</description>
   <type>resourceCitation</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceCitation is present."
                                        
  if(ResourceCitation is not None and len(str(ResourceCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceCitation</name>
      <xpath>(/eml/citation) or (/*/identificationInfo/*/citation/CI_Citation/otherCitationDetails) or (/MD_Metadata/identificationInfo/*/citationmdb:MD_Metadata/identificationInfo/*/citation/CI_Citation)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceContact</id>
   <name>Resource Contact</name>
   <description>Checks to see if at least one Resource Contact concept exists.</description>
   <type>rubricIdentification</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceContact is present."
                                        
  if(ResourceContact is not None and len(str(ResourceContact)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceContact concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceContact</name>
      <xpath>(/eml/*/contact) or (/*/identificationInfo/*/pointOfContact) or (/MD_Metadata/identificationInfo/*/pointOfContact)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceCostorFees</id>
   <name>Resource Cost or Fees</name>
   <description>Checks to see if at least one Resource Cost or Fees concept exists.</description>
   <type>distributionInfo</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceCostorFees is present."
                                        
  if(ResourceCostorFees is not None and len(str(ResourceCostorFees)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceCostorFees concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceCostorFees</name>
      <xpath>(/MD_Metadata/distributionInfo/MD_Distribution/distributionFormat/MD_Format/formatDistributor/MD_Distributor/distributionOrderProcess/MD_StandardOrderProcess/fees) or (/*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributionOrderProcess/MD_StandardOrderProcess/fees)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceCreationDate</id>
   <name>Resource Creation Date</name>
   <description>Checks to see if at least one Resource Creation Date concept exists.</description>
   <type>resourceCitation</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceCreationDate is present."
                                        
  if(ResourceCreationDate is not None and len(str(ResourceCreationDate)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceCreationDate concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceCreationDate</name>
      <xpath>(/*/dateSubmitted) or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='creation']/date/Date) or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='creation']/date/DateTime) or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='creation']/date/DateTime)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceLanguage</id>
   <name>Resource Language</name>
   <description>Checks to see if at least one Resource Language concept exists.</description>
   <type>otherInformation</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceLanguage is present."
                                        
  if(ResourceLanguage is not None and len(str(ResourceLanguage)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceLanguage concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceLanguage</name>
      <xpath>(/MD_Metadata/defaultLocale/PT_Locale/language/LanguageCode) or (/MD_Metadata/otherLocale/PT_Locale/language/LanguageCode) or (/*/identificationInfo/*/language) or (/*/identificationInfo/*/language/LanguageCode) or (/eml/@xml:lang | /eml/*/language) or (/resource/language)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceLineage</id>
   <name>Resource Lineage</name>
   <description>Checks to see if at least one Resource Lineage concept exists.</description>
   <type>ISO-1_Discovery-Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceLineage is present."
                                        
  if(ResourceLineage is not None and len(str(ResourceLineage)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceLineage concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceLineage</name>
      <xpath>(/*/resourceLineage/LI_Lineage) or (/*/dataQualityInfo/DQ_DataQuality/lineage) or (/*/provenance) or (/eml/*/methods)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceLongName</id>
   <name>Resource Long Name</name>
   <description>Checks to see if at least one Resource Long Name concept exists.</description>
   <type>ECHO_Discovery-Mandatory</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceLongName is present."
                                        
  if(ResourceLongName is not None and len(str(ResourceLongName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceLongName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceLongName</name>
      <xpath>(/MD_Metadata/identificationInfo/*/citation/CI_Citation/title) or (/*/identificationInfo/*/citation/CI_Citation/title) or (/eml/*/title)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
    <id>ResourceName.1</id>
    <name>Resource Name</name>
    <description>Check that a resource name exists.</description>
    <type>Interoperable</type>
    <level>REQUIRED</level>
    <environment>python</environment>
    <code><![CDATA[
def call():
  global output
  global status

  if ('resourceName' in globals() and resourceName is not None and resourceName):
    output = "A resource name is present"
    status = "SUCCESS"
    return True
  else:
    output = "A resource name is not present"
    status = "FAILURE"
    return False

      ]]></code>
    <selector>
        <name>resourceName</name>
        <xpath>boolean(
            /eml/dataset/*/entityName or
            /*/contentInfo/MD_CoverageDescription/attributeDescription/RecordType)
        </xpath>
    </selector>
    <dialect>
        <name>DataCite 3.1</name>
        <xpath>boolean(/*[local-name() = 'resource'])</xpath>
    </dialect>
    <dialect>
        <name>Dryad Data Package and Data File Modules</name>
        <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
    </dialect>
    <dialect>
        <name>Ecological Metadata Language</name>
        <xpath>boolean(/*[local-name() = 'eml'])</xpath>
    </dialect>
    <dialect>
        <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
        <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
    </dialect>
    <dialect>
        <name>ISO 19115-1 / ISO 19115-3</name>
        <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
    </dialect>
</check>
<check>
   <id>ResourceOnlineLink</id>
   <name>Resource Online Link</name>
   <description>Checks to see if at least one Resource Online Link concept exists.</description>
   <type>ISO-1_Discovery-Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceOnlineLink is present."
                                        
  if(ResourceOnlineLink is not None and len(str(ResourceOnlineLink)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceOnlineLink concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceOnlineLink</name>
      <xpath>(/MD_Metadata/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorTransferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[normalize-space\(function/CI_OnLineFunctionCode)='information']) or (/MD_Metadata/distributionInfo/MD_Distribution/transferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[normalize-space\(function/CI_OnLineFunctionCode)='information']) or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/onlineResource/CI_OnlineResource[normalize-space\(function/CI_OnLineFunctionCode)='information']) or (/MD_Metadata/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorTransferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[normalize-space\(function/CI_OnLineFunctionCode)='download']) or (/MD_Metadata/distributionInfo/MD_Distribution/transferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[normalize-space\(function/CI_OnLineFunctionCode)='download']) or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/onlineResource/CI_OnlineResource[normalize-space\(function/CI_OnLineFunctionCode)='download']) or (/DryadDataPackage/relation) or (/*/distributionInfo/MD_Distribution/transferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[not(contains\(function/CI_OnLineFunctionCode,'download'))]) or (/eml/*/distribution/online/url)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourcePublisherEMail</id>
   <name>Resource Publisher E-Mail</name>
   <description>Checks to see if at least one Resource Publisher E-Mail concept exists.</description>
   <type>resourceCitation</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourcePublisherEMail is present."
                                        
  if(ResourcePublisherEMail is not None and len(str(ResourcePublisherEMail)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourcePublisherEMail concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourcePublisherEMail</name>
      <xpath>(/eml/*/publisher/electronicMailAddress) or (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[gmd:role/CI_RoleCode ='publisher']/contactInfo/address/CI_Address/electronicMailAddress) or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[cit:role/CI_RoleCode ='publisher']/party/*/contactInfo/CI_Contact/address/CI_Address/electronicMailAddress)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourcePublisherURL</id>
   <name>Resource Publisher URL</name>
   <description>Checks to see if at least one Resource Publisher URL concept exists.</description>
   <type>resourceCitation</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourcePublisherURL is present."
                                        
  if(ResourcePublisherURL is not None and len(str(ResourcePublisherURL)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourcePublisherURL concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourcePublisherURL</name>
      <xpath>(/eml/*/publisher/electronicMailAddress) or (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[gmd:role/CI_RoleCode ='publisher']/contactInfo/CI_Contact/onlineResource/CI_OnlineResource/linkage/URL) or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[cit:role/CI_RoleCode ='publisher']/party/*/contactInfo/CI_Contact/onlineResource/CI_OnlineResource/linkage)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceQualityDescription</id>
   <name>Resource Quality Description</name>
   <description>Checks to see if at least one Resource Quality Description concept exists.</description>
   <type>SERF_HighlyRecommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceQualityDescription is present."
                                        
  if(ResourceQualityDescription is not None and len(str(ResourceQualityDescription)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceQualityDescription concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceQualityDescription</name>
      <xpath>(//methods/qualityControl</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceRevisionDate</id>
   <name>Resource Revision Date</name>
   <description>Checks to see if at least one Resource Revision Date concept exists.</description>
   <type>resourceCitation</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceRevisionDate is present."
                                        
  if(ResourceRevisionDate is not None and len(str(ResourceRevisionDate)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceRevisionDate concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceRevisionDate</name>
      <xpath>(/eml/*/maintenance/changeHistory/changeDate) or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='revision']/date/Date) or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='revision']/date/DateTime) or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space\(dateType/CI_DateTypeCode)='revision']/date/DateTime)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceStatus</id>
   <name>Resource Status</name>
   <description>Checks to see if at least one Resource Status concept exists.</description>
   <type>otherInformation</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceStatus is present."
                                        
  if(ResourceStatus is not None and len(str(ResourceStatus)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceStatus concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceStatus</name>
      <xpath>(/MD_Metadata/identificationInfo/*/status/MD_ProgressCode) or (/*/identificationInfo/*/status/MD_ProgressCode) or (/eml/access)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceURL</id>
   <name>Resource URL</name>
   <description>Checks to see if at least one Resource URL concept exists.</description>
   <type>resourceCitation</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceURL is present."
                                        
  if(ResourceURL is not None and len(str(ResourceURL)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceURL concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceURL</name>
      <xpath>(/eml/*/physical/distribution/online) or (/*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty/contactInfo/CI_Contact/onlineResource/CI_OnlineResource) or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/onlineResource/CI_OnlineResource[gmd:function/CI_OnLineFunctionCode,'download']) or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/onlineResource/CI_OnlineResource[gmd:function/CI_OnLineFunctionCode,'information'])</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceUpdateFrequency</id>
   <name>Resource Update Frequency</name>
   <description>Checks to see if at least one Resource Update Frequency concept exists.</description>
   <type>FGDC_Mandatory</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceUpdateFrequency is present."
                                        
  if(ResourceUpdateFrequency is not None and len(str(ResourceUpdateFrequency)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceUpdateFrequency concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceUpdateFrequency</name>
      <xpath>(/MD_Metadata/identificationInfo/*/resourceMaintenance/MD_MaintenanceInformation/maintenanceAndUpdateFrequency/mmiMD_MaintenanceFrequencyCode) or (/*/identificationInfo/*/resourceMaintenance/MD_MaintenanceInformation/maintenanceAndUpdateFrequency/MD_MaintenanceFrequencyCode) or (/eml/*/maintenance/maintenanceUpdateFrequency)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceUseConstraints</id>
   <name>Resource Use Constraints</name>
   <description>Checks to see if at least one Resource Use Constraints concept exists.</description>
   <type>constraints</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceUseConstraints is present."
                                        
  if(ResourceUseConstraints is not None and len(str(ResourceUseConstraints)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceUseConstraints concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceUseConstraints</name>
      <xpath>(/MD_Metadata/identificationInfo/*/resourceConstraints/MD_Constraints/useLimitation) or (/MD_Metadata/identificationInfo/*/resourceConstraints/MD_LegalConstraints/useConstraints/MD_RestrictionCode) or (/MD_Metadata/identificationInfo/*/resourceConstraints/MD_LegalConstraints/otherConstraints) or (/*/identificationInfo/*/resourceConstraints/MD_LegalConstraints/otherConstraints) or (/eml/*/intellectualRights)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResourceVersion</id>
   <name>Resource Version</name>
   <description>Checks to see if at least one Resource Version concept exists.</description>
   <type>resourceCitation</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResourceVersion is present."
                                        
  if(ResourceVersion is not None and len(str(ResourceVersion)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResourceVersion concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResourceVersion</name>
      <xpath>(/resource/version) or (/*/identificationInfo/*/citation/CI_Citation/edition) or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/edition)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Responsibility</id>
   <name>Responsibility</name>
   <description>Checks to see if at least one Responsibility concept exists.</description>
   <type>CMR-Common_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Responsibility is present."
                                        
  if(Responsibility is not None and len(str(Responsibility)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Responsibility concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Responsibility</name>
      <xpath>(//CI_ResponsibleParty) or (//CI_ResponsibleParty/role/CI_RoleCode) or (//CI_Responsibility) or (//CI_Responsibility/role/CI_RoleCode)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResponsiblePartyIdentifier</id>
   <name>Responsible Party Identifier</name>
   <description>Checks to see if at least one Responsible Party Identifier concept exists.</description>
   <type>people</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResponsiblePartyIdentifier is present."
                                        
  if(ResponsiblePartyIdentifier is not None and len(str(ResponsiblePartyIdentifier)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResponsiblePartyIdentifier concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResponsiblePartyIdentifier</name>
      <xpath>(/eml/*/associatedParty/@id) or (/resource/contributors/contributor/nameIdentifier) or (//CI_Responsibility/party/*/partyIdentifier/MD_Identifier/code/CharacterString)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ResponsiblePartyIdentifierType</id>
   <name>Responsible Party Identifier Type</name>
   <description>Checks to see if at least one Responsible Party Identifier Type concept exists.</description>
   <type>people</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ResponsiblePartyIdentifierType is present."
                                        
  if(ResponsiblePartyIdentifierType is not None and len(str(ResponsiblePartyIdentifierType)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ResponsiblePartyIdentifierType concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ResponsiblePartyIdentifierType</name>
      <xpath>(/eml/*/associatedParty/@system) or (/resource/contributors/contributor/nameIdentifier/@nameIdentifierScheme) or (//CI_Responsibility/party/*/partyIdentifier/MD_Identifier/codeSpace/CharacterString)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Result</id>
   <name>Result</name>
   <description>Checks to see if at least one Result concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Result is present."
                                        
  if(Result is not None and len(str(Result)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Result concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Result</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/*/result) or (/*/dataQualityInfo/DQ_DataQuality/report/*/result)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Rights</id>
   <name>Rights</name>
   <description>Checks to see if at least one Rights concept exists.</description>
   <type>CSWCoreReturnables</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Rights is present."
                                        
  if(Rights is not None and len(str(Rights)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Rights concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Rights</name>
      <xpath>(/MD_Metadata/identificationInfo/*/resourceConstraints/MD_LegalConstraints) or (/MD_Metadata/identificationInfo/MD_DataIdentification/resourceConstraints/MD_LegalConstraints/reference/CI_Citation/onlineResource/CI_OnlineResource/linkage) or (/*/rights) or (/*/identificationInfo/*/resourceConstraints/MD_LegalConstraints) or (/eml/*/intellectualRights) or (/resource/rightsList/rights)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Role</id>
   <name>Role</name>
   <description>Checks to see if at least one Role concept exists.</description>
   <type>people</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Role is present."
                                        
  if(Role is not None and len(str(Role)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Role concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Role</name>
      <xpath>(//CI_Responsibility/role/CI_RoleCode) or (//CI_ResponsibleParty/role/CI_RoleCode)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Scale</id>
   <name>Scale</name>
   <description>Checks to see if at least one Scale concept exists.</description>
   <type>UMM-Variable_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Scale is present."
                                        
  if(Scale is not None and len(str(Scale)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Scale concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Scale</name>
      <xpath>(/MI_Metadata/contentInfo/*/dimension/MD_Band/scaleFactor) or (/MD_Metadata/contentInfo/*/attributeGroup/MD_AttributeGroup/attribute/MD_SampleDimension/scaleFactor)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SecurityConstraints</id>
   <name>Security Constraints</name>
   <description>Checks to see if at least one Security Constraints concept exists.</description>
   <type>CSWAdditionalQueryables</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SecurityConstraints is present."
                                        
  if(SecurityConstraints is not None and len(str(SecurityConstraints)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SecurityConstraints concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SecurityConstraints</name>
      <xpath>(/MD_Metadata/identificationInfo/*/resourceConstraints/MD_SecurityConstraints) or (/*/identificationInfo/resourceConstraints/MD_SecurityConstraints) or (/eml/access)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SensorCharacteristics</id>
   <name>Sensor Characteristics</name>
   <description>Checks to see if at least one Sensor Characteristics concept exists.</description>
   <type>ECHO_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SensorCharacteristics is present."
                                        
  if(SensorCharacteristics is not None and len(str(SensorCharacteristics)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SensorCharacteristics concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SensorCharacteristics</name>
      <xpath>(/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/sensor/EOS_Sensor/otherProperty/Record/AdditionalAttributes/AdditionalAttribute) or (/MI_Metadata/acquisitionInformation/MI_AcquisitionInformation/platform/EOS_Platform/otherProperty/Record/AdditionalAttributes/AdditionalAttribute)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SensorCharacteristicsName</id>
   <name>Sensor Characteristics Name</name>
   <description>Checks to see if at least one Sensor Characteristics Name concept exists.</description>
   <type>CMR-Granule_Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SensorCharacteristicsName is present."
                                        
  if(SensorCharacteristicsName is not None and len(str(SensorCharacteristicsName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SensorCharacteristicsName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SensorCharacteristicsName</name>
      <xpath>(//eos:sensor/eos:EOS_Sensor/eos:otherProperty/gco:Record/eos:EOS_AdditionalAttributes/eos:additionalAttribute/eos:EOS_AdditionalAttribute/eos:reference/eos:EOS_AdditionalAttributeDescription[eos:type/eos:EOS_AdditionalAttributeTypeCode='sensorInformation']/eos:name</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SensorCharacteristicsValue</id>
   <name>Sensor Characteristics Value</name>
   <description>Checks to see if at least one Sensor Characteristics Value concept exists.</description>
   <type>CMR-Granule_Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SensorCharacteristicsValue is present."
                                        
  if(SensorCharacteristicsValue is not None and len(str(SensorCharacteristicsValue)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SensorCharacteristicsValue concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SensorCharacteristicsValue</name>
      <xpath>(//eos:sensor/eos:EOS_Sensor/eos:otherProperty/gco:Record/eos:EOS_AdditionalAttributes/eos:additionalAttribute/eos:EOS_AdditionalAttribute[eos:reference/eos:EOS_AdditionalAttributeDescription/eos:type/eos:EOS_AdditionalAttributeTypeCode='sensorInformation']/eos:value</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SensorLongName</id>
   <name>Sensor Long Name</name>
   <description>Checks to see if at least one Sensor Long Name concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SensorLongName is present."
                                        
  if(SensorLongName is not None and len(str(SensorLongName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SensorLongName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SensorLongName</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SensorShortName</id>
   <name>Sensor Short Name</name>
   <description>Checks to see if at least one Sensor Short Name concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SensorShortName is present."
                                        
  if(SensorShortName is not None and len(str(SensorShortName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SensorShortName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SensorShortName</name>
      <xpath>(//eos:sensor/eos:EOS_Sensor/eos:identifier/gmd:MD_Identifier/gmd:code</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Service</id>
   <name>Service</name>
   <description>Checks to see if at least one Service concept exists.</description>
   <type>WSDL_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Service is present."
                                        
  if(Service is not None and len(str(Service)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Service concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Service</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ServiceOperationName</id>
   <name>Service Operation Name</name>
   <description>Checks to see if at least one Service Operation Name concept exists.</description>
   <type>service</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ServiceOperationName is present."
                                        
  if(ServiceOperationName is not None and len(str(ServiceOperationName)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ServiceOperationName concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ServiceOperationName</name>
      <xpath>(/MD_Metadata/identificationInfo/SV_ServiceIdentification/containsOperations/SV_OperationMetadata/operationName) or (/*/identificationInfo/SV_ServiceIdentification/containsOperations/SV_OperationMetadata/operationName)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ServiceOperationReference</id>
   <name>Service Operation Reference</name>
   <description>Checks to see if at least one Service Operation Reference concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ServiceOperationReference is present."
                                        
  if(ServiceOperationReference is not None and len(str(ServiceOperationReference)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ServiceOperationReference concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ServiceOperationReference</name>
      <xpath>(/mdb:MD_Metadata/mdb:identificationInfo/srv:SV_ServiceIdentification/srv:operatedDataset/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ServiceProfileReference</id>
   <name>Service Profile Reference</name>
   <description>Checks to see if at least one Service Profile Reference concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ServiceProfileReference is present."
                                        
  if(ServiceProfileReference is not None and len(str(ServiceProfileReference)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ServiceProfileReference concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ServiceProfileReference</name>
      <xpath>(/mdb:MD_Metadata/mdb:identificationInfo/srv:SV_ServiceIdentification/srv:profile/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ServiceResourceReference</id>
   <name>Service Resource Reference</name>
   <description>Checks to see if at least one Service Resource Reference concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ServiceResourceReference is present."
                                        
  if(ServiceResourceReference is not None and len(str(ServiceResourceReference)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ServiceResourceReference concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ServiceResourceReference</name>
      <xpath>(/mdb:MD_Metadata/mdb:identificationInfo/srv:SV_ServiceIdentification/srv:coupledResource/srv:SV_CoupledResource/srv:resourceReference/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ServiceStandardCitation</id>
   <name>Service Standard Citation</name>
   <description>Checks to see if at least one Service Standard Citation concept exists.</description>
   <type>ISO_ExternalRefs</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ServiceStandardCitation is present."
                                        
  if(ServiceStandardCitation is not None and len(str(ServiceStandardCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ServiceStandardCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ServiceStandardCitation</name>
      <xpath>(/mdb:MD_Metadata/mdb:identificationInfo/srv:SV_ServiceIdentification/srv:serviceStandard/cit:CI_Citation</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SourceCitation.1</id>
   <name>Source Citation</name>
   <description>Check if a source citation exists.</description>
   <type>Reusable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  if ('SourceCitation' in globals() and SourceCitation is not None and SourceCitation):
    output = "A source citation is present"
    status = "SUCCESS"
    return True
  else:
    output = "A source citation is not present"
    status = "FAILURE"
    return False

      ]]></code>
   <selector>
      <name>SourceCitation</name>
      <xpath>boolean(/*/resourceLineage/LI_Lineage/source/LE_Source/sourceCitation/CI_Citation
          or /*/resourceLineage/LI_Lineage/processStep/LE_ProcessStep/source/LE_Source/sourceCitation/CI_Citation
          or /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/source/LI_Source/sourceCitation/CI_Citation
          or /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LI_ProcessStep/source/LI_Source/sourceCitation/CI_Citation)
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SourceCitationAbbreviation</id>
   <name>Source Citation Abbreviation</name>
   <description>Checks to see if at least one Source Citation Abbreviation concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SourceCitationAbbreviation is present."
                                        
  if(SourceCitationAbbreviation is not None and len(str(SourceCitationAbbreviation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SourceCitationAbbreviation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SourceCitationAbbreviation</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SourceDescription</id>
   <name>Source Description</name>
   <description>Checks to see if at least one Source Description concept exists.</description>
   <type>ISO_Lineage</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SourceDescription is present."
                                        
  if(SourceDescription is not None and len(str(SourceDescription)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SourceDescription concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SourceDescription</name>
      <xpath>(/MD_Metadata/resourceLineage/LI_Lineage/source/LI_Source/description) or (/*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/source/LI_Source/description)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SourceMetadata</id>
   <name>Source Metadata</name>
   <description>Checks to see if at least one Source Metadata concept exists.</description>
   <type>ISO_Lineage</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SourceMetadata is present."
                                        
  if(SourceMetadata is not None and len(str(SourceMetadata)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SourceMetadata concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SourceMetadata</name>
      <xpath>(/mdb:MD_Metadata/mdb:resourceLineage/mrl:LI_Lineage/mrl:source/mrl:LI_Source/mrl:sourceMetadata</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SourceReferenceSystem</id>
   <name>Source Reference System</name>
   <description>Checks to see if at least one Source Reference System concept exists.</description>
   <type>ISO_Lineage</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SourceReferenceSystem is present."
                                        
  if(SourceReferenceSystem is not None and len(str(SourceReferenceSystem)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SourceReferenceSystem concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SourceReferenceSystem</name>
      <xpath>(/MD_Metadata/resourceLineage/LI_Lineage/source/LI_Source/sourceReferenceSystem) or (/*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/source/LI_Source/sourceReferenceSystem)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SourceScope</id>
   <name>Source Scope</name>
   <description>Checks to see if at least one Source Scope concept exists.</description>
   <type>ISO_Lineage</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SourceScope is present."
                                        
  if(SourceScope is not None and len(str(SourceScope)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SourceScope concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SourceScope</name>
      <xpath>(/mdb:MD_Metadata/mdb:resourceLineage/mrl:LI_Lineage/mrl:source/mrl:LI_Source/mrl:scope</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SourceStep</id>
   <name>Source Step</name>
   <description>Checks to see if at least one Source Step concept exists.</description>
   <type>ISO_Lineage</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SourceStep is present."
                                        
  if(SourceStep is not None and len(str(SourceStep)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SourceStep concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SourceStep</name>
      <xpath>(/MD_Metadata/resourceLineage/LI_Lineage/source/LI_Source/sourceStep) or (/*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/source/LI_Source/sourceStep)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SourceTimePeriod</id>
   <name>Source Time Period</name>
   <description>Checks to see if at least one Source Time Period concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SourceTimePeriod is present."
                                        
  if(SourceTimePeriod is not None and len(str(SourceTimePeriod)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SourceTimePeriod concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SourceTimePeriod</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SourceUsed</id>
   <name>Source Used</name>
   <description>Checks to see if at least one Source Used concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SourceUsed is present."
                                        
  if(SourceUsed is not None and len(str(SourceUsed)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SourceUsed concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SourceUsed</name>
      <xpath>(/MD_Metadata/resourceLineage/LI_Lineage/processStep/LI_ProcessStep/source/LI_Source/description) or (/*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LI_ProcessStep/source/LE_Source/description)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SouthernmostLatitude</id>
   <name>Southernmost Latitude</name>
   <description>Checks to see if at least one Southernmost Latitude concept exists.</description>
   <type>extent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SouthernmostLatitude is present."
                                        
  if(SouthernmostLatitude is not None and len(str(SouthernmostLatitude)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SouthernmostLatitude concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SouthernmostLatitude</name>
      <xpath>(/MD_Metadata/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox/southBoundLatitude/Decimal) or (/*/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox/southBoundLatitude/Decimal) or (/eml/*/coverage/geographicCoverage/boundingCoordinates/southBoundingCoordinate)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SpatialRepresentation</id>
   <name>Spatial Representation</name>
   <description>Checks to see if at least one Spatial Representation concept exists.</description>
   <type>CMR-Collection_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SpatialRepresentation is present."
                                        
  if(SpatialRepresentation is not None and len(str(SpatialRepresentation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SpatialRepresentation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SpatialRepresentation</name>
      <xpath>(/*/identificationInfo/*/spatialResolution) or (/*/referenceSystemInfo/MD_ReferenceSystem/referenceSystemIdentifier)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SpatialResolution</id>
   <name>Spatial Resolution</name>
   <description>Checks to see if at least one Spatial Resolution concept exists.</description>
   <type>ISO-1_Discovery-Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SpatialResolution is present."
                                        
  if(SpatialResolution is not None and len(str(SpatialResolution)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SpatialResolution concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SpatialResolution</name>
      <xpath>(/*/identificationInfo/*/spatialResolution) or (/*/identificationInfo/*/spatialResolution) or (/eml/*/horizCoordSysDef)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SpecificUsage</id>
   <name>Specific Usage</name>
   <description>Checks to see if at least one Specific Usage concept exists.</description>
   <type>ISO_UserFeedback</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SpecificUsage is present."
                                        
  if(SpecificUsage is not None and len(str(SpecificUsage)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SpecificUsage concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SpecificUsage</name>
      <xpath>(/MD_Metadata/identificationInfo/MD_DataIdentification/resourceSpecificUsage/MD_Usage/specificUsage) or (/*/identificationInfo/*/resourceSpecificUsage/MD_Usage/specificUsage)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SponsorProjectIdentifier</id>
   <name>Sponsor Project Identifier</name>
   <description>Checks to see if at least one Sponsor Project Identifier concept exists.</description>
   <type>ProjectIdentification</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SponsorProjectIdentifier is present."
                                        
  if(SponsorProjectIdentifier is not None and len(str(SponsorProjectIdentifier)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SponsorProjectIdentifier concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SponsorProjectIdentifier</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>StandaloneReportCitation</id>
   <name>Standalone Report Citation</name>
   <description>Checks to see if at least one Standalone Report Citation concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept StandaloneReportCitation is present."
                                        
  if(StandaloneReportCitation is not None and len(str(StandaloneReportCitation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "StandaloneReportCitation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>StandaloneReportCitation</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:standaloneQualityReport</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>StandardNameVocabulary</id>
   <name>Standard Name Vocabulary</name>
   <description>Checks to see if at least one Standard Name Vocabulary concept exists.</description>
   <type>rubricDescription</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept StandardNameVocabulary is present."
                                        
  if(StandardNameVocabulary is not None and len(str(StandardNameVocabulary)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "StandardNameVocabulary concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>StandardNameVocabulary</name>
      <xpath>(/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords/type/thesaurusName/CI_Citation/title) or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords/thesaurusName/CI_Citation/title)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>StartTime</id>
   <name>Start Time</name>
   <description>Checks to see if at least one Start Time concept exists.</description>
   <type>extent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept StartTime is present."
                                        
  if(StartTime is not None and len(str(StartTime)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "StartTime concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>StartTime</name>
      <xpath>(/MD_Metadata/identificationInfo/*/extent/EX_Extent/temporalElement/EX_TemporalExtent/extent/TimePeriod/begin/TimeInstant/timePosition) or (/MD_Metadata/identificationInfo/*/extent/EX_Extent/temporalElement/EX_TemporalExtent/extent/TimePeriod/beginPosition) or (/*/identificationInfo/*/extent/EX_Extent/temporalElement/EX_TemporalExtent/extent/TimePeriod/beginPosition) or (/eml/*/coverage/temporalCoverage/rangeOfDates/beginDate/calendarDate)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>SupplementalInformation</id>
   <name>Supplemental Information</name>
   <description>Checks to see if at least one Supplemental Information concept exists.</description>
   <type>rubricDescription</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept SupplementalInformation is present."
                                        
  if(SupplementalInformation is not None and len(str(SupplementalInformation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "SupplementalInformation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>SupplementalInformation</name>
      <xpath>(/MD_Metadata/identificationInfo/*/supplementalInformation) or (/*/identificationInfo/*/supplementalInformation) or (/eml/*/additionalInfo)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>TemporalKeyword</id>
   <name>Temporal Keyword</name>
   <description>Checks to see if at least one Temporal Keyword concept exists.</description>
   <type>ECHO_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept TemporalKeyword is present."
                                        
  if(TemporalKeyword is not None and len(str(TemporalKeyword)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "TemporalKeyword concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>TemporalKeyword</name>
      <xpath>(/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space\(type/MD_KeywordTypeCode)='temporal']/keyword) or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains\(type/MD_KeywordTypeCode,'temporal')]/keyword) or (/eml/*/keywordSet/keyword[@keywordType='temporal'])</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>TemporalQualityReport</id>
   <name>Temporal Quality Report</name>
   <description>Checks to see if at least one Temporal Quality Report concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept TemporalQualityReport is present."
                                        
  if(TemporalQualityReport is not None and len(str(TemporalQualityReport)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "TemporalQualityReport concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>TemporalQualityReport</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_AccuracyOfATimeMeasurement) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_TemporalConsistency) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_TemporalValidity) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_AccuracyOfATimeMeasurement) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_TemporalConsistency) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_TemporalValidity)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>TemporalRangeType</id>
   <name>Temporal Range Type</name>
   <description>Checks to see if at least one Temporal Range Type concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept TemporalRangeType is present."
                                        
  if(TemporalRangeType is not None and len(str(TemporalRangeType)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "TemporalRangeType concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>TemporalRangeType</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>TemporalResolution</id>
   <name>Temporal Resolution</name>
   <description>Checks to see if at least one Temporal Resolution concept exists.</description>
   <type>ACDD_recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept TemporalResolution is present."
                                        
  if(TemporalResolution is not None and len(str(TemporalResolution)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "TemporalResolution concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>TemporalResolution</name>
      <xpath>(/MD_Metadata/identificationInfo/*/temporalResolution/TM_PeriodDuration) or (/eml/*/coverage/temporalCoverage/units)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ThematicAccuracyReport</id>
   <name>Thematic Accuracy Report</name>
   <description>Checks to see if at least one Thematic Accuracy Report concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ThematicAccuracyReport is present."
                                        
  if(ThematicAccuracyReport is not None and len(str(ThematicAccuracyReport)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ThematicAccuracyReport concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ThematicAccuracyReport</name>
      <xpath>(/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_ThematicClassificationCorrectness) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_NonQuantitativeAttributeCorrectness) or (/MD_Metadata/dataQualityInfo/DQ_DataQuality/report/DQ_QuantitativeAttributeAccuracy) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_ThematicClassificationCorrectness) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_NonQuantitativeAttributeCorrectness) or (/*/dataQualityInfo/DQ_DataQuality/report/DQ_QuantitativeAttributeAccuracy)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ThemeKeyword</id>
   <name>Theme Keyword</name>
   <description>Checks to see if at least one Theme Keyword concept exists.</description>
   <type>rubricIdentification</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ThemeKeyword is present."
                                        
  if(ThemeKeyword is not None and len(str(ThemeKeyword)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ThemeKeyword concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ThemeKeyword</name>
      <xpath>(/resource/subjects/subject) or (/eml/*/keywordSet/keyword[@keywordType='thematic']) or (/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[contains\(type/MD_KeywordTypeCode,'theme')]/keyword) or (/MD_Metadata/identificationInfo/*/descriptiveKeywords/MD_Keywords[normalize-space\(type/MD_KeywordTypeCode)='theme']/keyword)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>TimeType</id>
   <name>Time Type</name>
   <description>Checks to see if at least one Time Type concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept TimeType is present."
                                        
  if(TimeType is not None and len(str(TimeType)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "TimeType concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>TimeType</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>TopicCategory</id>
   <name>Topic Category</name>
   <description>Checks to see if at least one Topic Category concept exists.</description>
   <type>rubricIdentification</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept TopicCategory is present."
                                        
  if(TopicCategory is not None and len(str(TopicCategory)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "TopicCategory concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>TopicCategory</name>
      <xpath>(/*/identificationInfo/*/topicCategory/MD_TopicCategoryCode) or (/MD_Metadata/identificationInfo/*/topicCategory/MD_TopicCategoryCode)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>TransferSize</id>
   <name>Transfer Size</name>
   <description>Checks to see if at least one Transfer Size concept exists.</description>
   <type>distributionInfo</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept TransferSize is present."
                                        
  if(TransferSize is not None and len(str(TransferSize)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "TransferSize concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>TransferSize</name>
      <xpath>(/MD_Metadata/distributionInfo/MD_Distribution/transferOptions/MD_DigitalTransferOptions/transferSize/Real) or (/MD_Metadata/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorTransferOptions/MD_DigitalTransferOptions/transferSize/Real) or (/MD_Metadata/distributionInfo/MD_Distribution/distributionFormat/MD_Format/formatDistributor/MD_Distributor/distributorTransferOptions/MD_DigitalTransferOptions/transferSize/Real) or (/*/distributionInfo/MD_Distribution/distributionFormat/MD_Format/formatDistributor/MD_Distributor/distributorTransferOptions/MD_DigitalTransferOptions/transferSize/Real) or (/*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorTransferOptions/MD_DigitalTransferOptions/transferSize/Real) or (/eml/*/physical/size) or (/resource/sizes/size)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>TwoDCoordinateSystem</id>
   <name>TwoDCoordinateSystem</name>
   <description>Checks to see if at least one TwoDCoordinateSystem concept exists.</description>
   <type>ECHO_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept TwoDCoordinateSystem is present."
                                        
  if(TwoDCoordinateSystem is not None and len(str(TwoDCoordinateSystem)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "TwoDCoordinateSystem concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>TwoDCoordinateSystem</name>
      <xpath>(/MD_Metadata/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicDescription/geographicIdentifier) or (/*/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicDescription/geographicIdentifier)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Types</id>
   <name>Types</name>
   <description>Checks to see if at least one Types concept exists.</description>
   <type>WSDL_Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Types is present."
                                        
  if(Types is not None and len(str(Types)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Types concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Types</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>URL</id>
   <name>URL</name>
   <description>Checks to see if at least one URL concept exists.</description>
   <type>OnlineResources</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept URL is present."
                                        
  if(URL is not None and len(str(URL)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "URL concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>URL</name>
      <xpath>(//CI_OnlineResource/linkage) or (/*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorTransferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[contains\(function/CI_OnLineFunctionCode,'download')]) or (/*/distributionInfo/MD_Distribution/transferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[contains\(function/CI_OnLineFunctionCode,'download')])</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>Units</id>
   <name>Units</name>
   <description>Checks to see if at least one Units concept exists.</description>
   <type>UMM-Variable_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept Units is present."
                                        
  if(Units is not None and len(str(Units)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "Units concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>Units</name>
      <xpath>(/MI_Metadata/contentInfo/*/dimension/MD_Band/units) or (/MD_Metadata/contentInfo/*/attributeGroup/MD_AttributeGroup/attribute/MD_SampleDimension/units)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>UsabilityReport</id>
   <name>Usability Report</name>
   <description>Checks to see if at least one Usability Report concept exists.</description>
   <type>ISO_Quality</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept UsabilityReport is present."
                                        
  if(UsabilityReport is not None and len(str(UsabilityReport)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "UsabilityReport concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>UsabilityReport</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_UsabilityElement</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>UsageTime</id>
   <name>Usage Time</name>
   <description>Checks to see if at least one Usage Time concept exists.</description>
   <type>ISO_UserFeedback</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept UsageTime is present."
                                        
  if(UsageTime is not None and len(str(UsageTime)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "UsageTime concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>UsageTime</name>
      <xpath>(/MD_Metadata/identificationInfo/MD_DataIdentification/resourceSpecificUsage/MD_Usage/usageDateTime) or (/*/identificationInfo/*/resourceSpecificUsage/MD_Usage/usageDateTime/DateTime)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>UserContact</id>
   <name>User Contact</name>
   <description>Checks to see if at least one User Contact concept exists.</description>
   <type>ISO_UserFeedback</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept UserContact is present."
                                        
  if(UserContact is not None and len(str(UserContact)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "UserContact concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>UserContact</name>
      <xpath>(/MD_Metadata/identificationInfo/MD_DataIdentification/resourceSpecificUsage/MD_Usage/userContactInfo) or (/*/identificationInfo/*/resourceSpecificUsage/MD_Usage/userContactInfo)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>UserDeterminedLimitations</id>
   <name>User Determined Limitations</name>
   <description>Checks to see if at least one User Determined Limitations concept exists.</description>
   <type>ISO_UserFeedback</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept UserDeterminedLimitations is present."
                                        
  if(UserDeterminedLimitations is not None and len(str(UserDeterminedLimitations)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "UserDeterminedLimitations concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>UserDeterminedLimitations</name>
      <xpath>(/MD_Metadata/identificationInfo/MD_DataIdentification/resourceSpecificUsage/MD_Usage/userDeterminedLimitations) or (/*/identificationInfo/*/resourceSpecificUsage/MD_Usage/usageDateTime/DateTime)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>UserResponse</id>
   <name>User Response</name>
   <description>Checks to see if at least one User Response concept exists.</description>
   <type>ISO_UserFeedback</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept UserResponse is present."
                                        
  if(UserResponse is not None and len(str(UserResponse)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "UserResponse concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>UserResponse</name>
      <xpath>(/mdb:MD_Metadata/mdb:identificationInfo/mri:MD_DataIdentification/mri:resourceSpecificUsage/mri:MD_Usage/mri:response</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>ValidRange</id>
   <name>ValidRange</name>
   <description>Checks to see if at least one ValidRange concept exists.</description>
   <type>UMM-Variable_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept ValidRange is present."
                                        
  if(ValidRange is not None and len(str(ValidRange)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "ValidRange concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>ValidRange</name>
      <xpath>(/MI_Metadata/contentInfo/*/dimension/MD_Band/minValue/Real) or (/MI_Metadata/contentInfo/*/dimension/MD_Band/maxValue/Real) or (/MD_Metadata/contentInfo/*/attributeGroup/MD_AttributeGroup/attribute/MD_SampleDimension/minValue) or (/MD_Metadata/contentInfo/*/attributeGroup/MD_AttributeGroup/attribute/MD_SampleDimension/maxValue)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>VariableType</id>
   <name>VariableType</name>
   <description>Checks to see if at least one VariableType concept exists.</description>
   <type>UMM-Variable_Required</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept VariableType is present."
                                        
  if(VariableType is not None and len(str(VariableType)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "VariableType concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>VariableType</name>
      <xpath>(/MI_Metadata/contentInfo/*/contentType) or (/MD_Metadata/contentInfo/*/attributeGroup/MD_AttributeGroup/contentType/MD_CoverageContentTypeCode)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>VersionDescription</id>
   <name>Version Description</name>
   <description>Checks to see if at least one Version Description concept exists.</description>
   <type>ECS_Discovery-Recommended</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept VersionDescription is present."
                                        
  if(VersionDescription is not None and len(str(VersionDescription)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "VersionDescription concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>VersionDescription</name>
      <xpath>(</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>VerticalExtent</id>
   <name>Vertical Extent</name>
   <description>Checks to see if at least one Vertical Extent concept exists.</description>
   <type>ISO-1_Discovery-Optional</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept VerticalExtent is present."
                                        
  if(VerticalExtent is not None and len(str(VerticalExtent)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "VerticalExtent concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>VerticalExtent</name>
      <xpath>(/*/MD_DataIdentification/extent/EX_Extent/verticalElement/EX_VerticalExtent) or (/*/identificationInfo/*/extent/EX_Extent/verticalElement/EX_VerticalExtent) or (/eml/*/vertCoordSys)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>VerticalMaximum</id>
   <name>Vertical Maximum</name>
   <description>Checks to see if at least one Vertical Maximum concept exists.</description>
   <type>extent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept VerticalMaximum is present."
                                        
  if(VerticalMaximum is not None and len(str(VerticalMaximum)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "VerticalMaximum concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>VerticalMaximum</name>
      <xpath>(/MD_Metadata/identificationInfo/*/extent/EX_Extent/verticalElement/EX_VerticalExtent/maximumValue/Real) or (/*/identificationInfo/*/extent/EX_Extent/verticalElement/EX_VerticalExtent/maximumValue/Real) or (/eml/*/coverage/geographicCoverage/boundingCoordinates/boundingAltitudes/altitudeMaximum)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>VerticalMinimum</id>
   <name>Vertical Minimum</name>
   <description>Checks to see if at least one Vertical Minimum concept exists.</description>
   <type>extent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept VerticalMinimum is present."
                                        
  if(VerticalMinimum is not None and len(str(VerticalMinimum)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "VerticalMinimum concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>VerticalMinimum</name>
      <xpath>(/MD_Metadata/identificationInfo/*/extent/EX_Extent/verticalElement/EX_VerticalExtent/minimumValue/Real) or (/*/identificationInfo/*/extent/EX_Extent/verticalElement/EX_VerticalExtent/minimumValue/Real) or (/eml/*/coverage/geographicCoverage/boundingCoordinates/boundingAltitudes/altitudeMinimum)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>VerticalPositionalAccuracyExplanation</id>
   <name>Vertical Positional Accuracy Explanation</name>
   <description>Checks to see if at least one Vertical Positional Accuracy Explanation concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept VerticalPositionalAccuracyExplanation is present."
                                        
  if(VerticalPositionalAccuracyExplanation is not None and len(str(VerticalPositionalAccuracyExplanation)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "VerticalPositionalAccuracyExplanation concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>VerticalPositionalAccuracyExplanation</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_AbsoluteExternalPositionalAccuracy/mdq:evaluationMethod/mdq:DQ_EvaluationMethod/mdq:evaluationMethodDescription</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>VerticalPositionalAccuracyReport</id>
   <name>Vertical Positional Accuracy Report</name>
   <description>Checks to see if at least one Vertical Positional Accuracy Report concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept VerticalPositionalAccuracyReport is present."
                                        
  if(VerticalPositionalAccuracyReport is not None and len(str(VerticalPositionalAccuracyReport)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "VerticalPositionalAccuracyReport concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>VerticalPositionalAccuracyReport</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_AbsoluteExternalPositionalAccuracy/mdq:result/mdq:DQ_DescriptiveResult/mdq:statement</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>VerticalPositionalAccuracyValue</id>
   <name>Vertical Positional Accuracy Value</name>
   <description>Checks to see if at least one Vertical Positional Accuracy Value concept exists.</description>
   <type>FGDC_Mandatory_If_Applicable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept VerticalPositionalAccuracyValue is present."
                                        
  if(VerticalPositionalAccuracyValue is not None and len(str(VerticalPositionalAccuracyValue)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "VerticalPositionalAccuracyValue concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>VerticalPositionalAccuracyValue</name>
      <xpath>(/mdb:MD_Metadata/mdb:dataQualityInfo/DQ_DataQuality/mdq:report/mdq:DQ_AbsoluteExternalPositionalAccuracy/mdq:result/mdq:DQ_QuantitativeResult/mdq:value</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>WesternmostLongitude</id>
   <name>Westernmost Longitude</name>
   <description>Checks to see if at least one Westernmost Longitude concept exists.</description>
   <type>extent</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  output = "The concept WesternmostLongitude is present."
                                        
  if(WesternmostLongitude is not None and len(str(WesternmostLongitude)) > 0):
    status = "SUCCESS"
    return True
    
  status = "FAILURE"
  output = "WesternmostLongitude concept is not present"
  
  return False
      ]]></code>
   <selector>
      <name>WesternmostLongitude</name>
      <xpath>(/MD_Metadata/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox/westBoundLongitude/Decimal) or (/*/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox/westBoundLongitude/Decimal) or (/eml/*/coverage/geographicCoverage/boundingCoordinates/westBoundingCoordinate)</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name/>
      <xpath>boolean(/*[local-name() = ''])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
  <id>check.abstract.100.words.2</id>
  <name>Abstract length</name>
  <description>Abstract should be at least 100 words long.</description>
  <type>discovery</type>  
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[
    if (nchar(abstract) == 0) {
      status <- "FAILURE"
      message <- "No abstract sections were found."
    } else if (length(abstract) > 1) {
      status <- "FAILURE"
      message <- "More than one abstract section is present, only one is allowed."
    } else {
      library(stringr)
      # Trim whitespace, split abstract on whitespace
      tokens <- trimws(str_split(abstract, "\\s+")[[1]], which="both")
      # Remove blank elements (subtly and irritatingly different than whitespace)
      tokens <- tokens[tokens != ""]

      if (length(tokens) >= 100) {
        status <- "SUCCESS"
        message <- paste0("The abstract is ", length(tokens), " word(s) long which is sufficient.")
      } else {
        status <- "FAILURE"
        message <- paste0("The abstract is only ", length(tokens), " word(s) long but 100 or more is requried.")
      }
    }

    mdq_result <- list(status = status,
                       output = list(list(value = message)))
  ]]></code>
  <selector namespaceAware="true">
    <name>abstract</name>
    <xpath>/*[local-name() = 'eml']/dataset/abstract |
      /*/gmd:identificationInfo/*/gmd:abstract/gco:CharacterString |
      /*/dcterms:description
      </xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
    <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
    </dialect>
  <dialect>
    <name>Dryad Data Package and Data File Modules</name>
    <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
  </dialect>
</check>
<check>
  <id>check.abstract.100.words.1</id>
  <name>Abstract length</name>
  <description>Abstract should be at least 100 words long.</description>
  <type>discovery</type>  
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[
    if (length(abstract) == 0) {
      status <- "FAILURE"
      message <- "No abstract sections were found."
    } else if (length(abstract) > 1) {
      status <- "FAILURE"
      message <- "More than one abstract section is present, only one is allowed."
    } else {
      library(stringr)
      # Trim whitespace, split abstract on whitespace
      tokens <- trimws(str_split(abstract, "\\s+")[[1]], which="both")
      # Remove blank elements (subtly and irritatingly different than whitespace)
      tokens <- tokens[tokens != ""]

      if (length(tokens) >= 100) {
        status <- "SUCCESS"
        message <- paste0("The abstract is ", length(tokens), " word(s) long which is sufficient.")
      } else {
        status <- "FAILURE"
        message <- paste0("The abstract is only ", length(tokens), " word(s) long but 100 or more is required.")
      }
    }

    mdq_result <- list(status = status,
                       output = list(list(value = message)))
  ]]></code>
  <selector>
    <name>abstract</name>
    <xpath>/eml/dataset/abstract | /*/identificationInfo/*/abstract/CharacterString</xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
      <name>iso</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
    </dialect>
</check>
<check>
	
	
	<id>check.attribute.name.differs.1</id>
	<name>Attribute name differs from attribute description.</name>
	<description>Check that each entity name and definition are not identical.</description>
	<type>interpretation</type>
	<level>OPTIONAL</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  # varialbe defined by MQE from the <xpath> selectors.
  # "attributeName" - the names of each data entity
  # "attributeDefinition" - the names of each data entity
  
  # Skip check if no dataTables
  if(!entityPresent) {
    return(list(status="SKIP", values=list(value="No data table descriptions are present, so cannot check if attribute names and definition differ.")))
  }

  # Skip check if no attributes present
  if(!attributesPresent) {
    return(list(status="SKIP", values=list(value="No data table attributes are present, so cannot check if attribute names and definitions differ.")))
  } 
  
  values <- list()
  attrCount <- 0
  if (length(attributeName) > 0) {
    for(iAttr in 1:length(attributeName)) {
      attrName <- tolower(as.character(attributeName[[iAttr]]))
      attrDef <- tolower(as.character(attributeDefinition[[iAttr]]))
      if(!is.na(attrName) && !is.na(attrDef)) {
        attrCount <- attrCount + 1
        if(attrName == attrDef) {
          values[[length(values)+1]] <- attributeName[[iAttr]]
        }
      }
    }
  }
  
  quoteStyle <- getOption("useFancyQuotes")
  options("useFanceyQuotes" = FALSE)
  
  if(length(values) > 0) {
    return(list(status="FAILURE", values=list(value=sprintf("These data table descriptions attributes have identical names and definitions: %s", paste(sQuote(unlist(values)), collapse=", ")))))
  } else {
    return(list(status="SUCCESS", values=list(value=sprintf("All data table attributes have valid definitions"))))
  }

  options("useFancyQuotes" = quoteStyle)
}

result <- check()
mdq_result <- list(status=result$status, output=list(result$values))
]]></code>

	<!-- Don't need a subSelector for entityName, as this element is required, 
		so their won't be entities that are selected that don't have this value, 
		and therefor no 'blank' values. -->
	<selector>
		<name>attributesPresent</name>
		<xpath>boolean(/eml/dataset/dataTable/attributeList/attribute)</xpath>
	</selector>
	<selector>
		<name>entityPresent</name>
		<xpath>boolean(/eml/dataset/dataTable)</xpath>
	</selector>
	<selector>
		<name>attributeName</name>
		<xpath>/eml/dataset/dataTable/attributeList/attribute</xpath>
		<subSelector>
			<name>attributeNameSubSelector</name>
			<xpath>./attributeName</xpath>
		</subSelector>
	</selector>
	<selector>
		<name>attributeDefinition</name>
		<xpath>/eml/dataset/dataTable/attributeList/attribute</xpath>
		<subSelector>
			<name>attributeDefinitionSubSelector</name>
			<xpath>./attributeDefinition</xpath>
		</subSelector>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</check>
<check>
    <id>award.funder.present.1</id>
    <name>Award Funder Present</name>
    <description>Check that an award funder exists.</description>
    <type>Findable</type>
    <level>OPTIONAL</level>
    <environment>python</environment>
    <code><![CDATA[
def call():
  # check: does an awardFunder exist?
  import re
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # These global variables are read by the quality engine when
  # the check returns
  global output
  global status
  
  dataFilename = "DataONEformats.csv"

  # Item is not present
  if 'awardFunder' not in globals() or awardFunder is None:
    output = "An award funder was not found."
    status = "FAILURE"
    return False
    
  if(mvar.isBlank(awardFunder)):
    output = "The award funder is blank."
    status = "FAILURE"
    return False
    
    
  # Now check if the value found for funder is know in the CrossRef
  # Funder Registry https://www.crossref.org/services/funder-registry/
  
  formatsFile = ""
  # The CrossRef Funder Registry file is passed via the 'mdq_params' hash
  if('mdq_params' not in globals()):
    output = "Internal error running check, mdq_params not available to check."
    status = "ERROR"
    return False
  else:
    funderFile = mdq_params['CrossRefFunderRegistryFile']
    formatsFile = "{}/{}".format(mdq_params['metadigDataDir'], dataFilename)
  
  # Create list of the CrossRef Funder Registry
  funders = []
  with open(funderFile, 'rb') as csvfile:
      fmtreader = csv.reader(csvfile, delimiter=',', quotechar='"')
      for row in fmtreader:
        funders.append(row)

  funderFound = False
  for funder in funders:
    funderEsc = re.escape(funder)
    if(re.search(funder, awardFunder)):
      funderStr = True
      status = "SUCCESS"
      break
     
  if(funderFound):
    output = "The funder {} was found.".format(funderStr)
    status = "SUCCESS"
    return True
  else:
    output = "The funder is non-blank but was not found in the CrossRef Funder Reistry"
    status = "FAILURE"
    return False
      ]]></code>
    <selector>
        <name>awardFunder</name>
        <!-- ISO 19115 RolCodes from https://geo-ide.noaa.gov/wiki/index.php?title=ISO_19115_and_19115-2_CodeList_Dictionaries -->
        <xpath>/eml/dataset/project/funding//text()[normalize-space()] |
               /eml/dataset/project/award/funderName |
               /resource/fundingReferences/fundingReference/awardNumber//text()[normalize-space()] |
               /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='sponsor']/organisationName |
               /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='sponsor']/party/CI_Organisation/name |
               /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='sponsor']/party/CI_Organisation/individual/CI_Individual/name
               /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='funder']/organisationName |
               /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='funder']/party/CI_Organisation/name |
               /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='funder']/party/CI_Organisation/individual/CI_Individual/name
        </xpath>
    </selector>
    <dialect>
        <name>DataCite 3.1</name>
        <xpath>boolean(/*[local-name() = 'resource'])</xpath>
    </dialect>
    <dialect>
        <name>Dryad Data Package and Data File Modules</name>
        <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
    </dialect>
    <dialect>
        <name>Ecological Metadata Language</name>
        <xpath>boolean(/*[local-name() = 'eml'])</xpath>
    </dialect>
    <dialect>
        <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
        <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
    </dialect>
    <dialect>
        <name>ISO 19115-1 / ISO 19115-3</name>
        <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
    </dialect>
</check>

<check>
  <id>check.bounding.coordinates.2</id>
  <name>Geographic coverage coordinates</name>
  <description>Geographic Coverage should contain bounding coordinates.</description>
  <type>discovery</type>  
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code>
    library(metadig)
    
    if (coordinatesPresent) >= 1) {
      success("A set of bounding coordinates describing the geographic coverage of this dataset is present.")
    } else {
      failure("A set of bounding coordinates describing the geographic coverage of this dataset is not present.")
    }
  </code>
  <selector namespaceAware="true">
    <name>coordinatesPresent</name>
    <xpath> boolean(/*[local-name() = 'eml']/dataset/coverage/geographicCoverage/boundingCoordinates) or
            boolean(/*/gmd:identificationInfo/*/gmd:extent/*/gmd:geographicElement/*/*/gco:Decimal) or
            boolean(/*/dcterms:spatial)
    </xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
    <name>Dryad Data Package and Data File Modules</name>
    <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
  </dialect>
  <dialect>
    <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
    <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
</check>
<check>
  <id>check.bounding.coordinates.1</id>
  <name>Geographic coverage coordinates</name>
  <description>Geographic Coverage should contain bounding coordinates.</description>
  <type>discovery</type>  
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code>
    library(metadig)
    
    if (length(coordinates) >= 1) {
      success("A set of bounding coordinates describing the geographic coverage of this dataset is present.")
    } else {
      failure("A set of bounding coordinates describing the geographic coverage of this dataset is not present.")
    }
  </code>
  <selector>
    <name>coordinates</name>
    <xpath>
    	(/eml/dataset/coverage/geographicCoverage/boundingCoordinates)
    	|
    	(/*/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox//* | /*/identificationInfo/SV_ServiceIdentification/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox//*)
    </xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
	<name>iso</name>
    <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
</check>
<check>
	<id>check.keyword.present.2</id>
	<name>Keywords present</name>
	<description>At least one keyword should be present.</description>
	<type>discovery</type>
	<level>REQUIRED</level>
	<environment>python</environment>
	<code><![CDATA[
def call():
  global output
  global status

  # Check if keywords were found in the metadata. (If non exists
  # then metadig-engine will not define this variable, so test for that.
  if(not keywords):
    status = "FAILURE"
    output = "Keywords are not present"
    return False
  else:
    status = "SUCCESS"
    output = "Keywords are present"
    return True
call()
	]]></code>
	
	<selector>
		<name>keywords</name>
		<xpath>
		(/eml/dataset/keywordSet/keyword) |
		(/*/identificationInfo/*/descriptiveKeywords/MD_Keywords[type/MD_KeywordTypeCode='theme']/keyword/CharacterString/text()) |
		(/*/subject)
		</xpath>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
	<dialect>
		<name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
		<xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
	</dialect>
	<dialect>
		<name>Dryad Data Package and Data File Modules</name>
		<xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
	</dialect>
</check>
<check>
  <id>check.contact.2</id>
  <name>Contact</name>
  <description>Contact should be present</description>
  <type>identification</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
<code><![CDATA[
    library(metadig)

    contactCount <- length(contacts)

    if (contactCount <= 0) {
      failure("No contacts are present.")
    } else {
      if(contactCount == 1) {
        success("One contact is present.")
      } else {
        success(sprintf("%d contacts are present.", contactCount))
      }
    }
  ]]></code>
  <selector namespaceAware="true">
    <name>contacts</name>
    <xpath>/*[local-name() = 'eml']/dataset/contact |
      /*/gmd:identificationInfo/*/gmd:pointOfContact
    </xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
    <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
    <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
</check>
<check>
	<id>check.contact.has.orcid.1</id>
	<name>Check that a contact has an ORCID, email and address</name>
	<description>Check if the contact contains a userId ORCID, email and address.</description>
	<type>identification</type>
	<level>INFO</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  # These variables are defined by the MQE from the <xpath> selectors.
  # "contactPresent" - is the dataset contact present
  # "userId"         - the dataset contact/userId
  # "emailPresent"   - the contact email
  # "addressPresent" - the contact address
  if(!contactPresent) {
    return(list(status="FAILURE", output="A 'contact' is not present, so unable to check for an ORCID, electronicMailAddress or address."))
  }
  
  # Assume that the check will succeed, until proven otherwise.
  # The output messages will be gathered into a list
  status <- "SUCCESS"
  values <- list()
  
  # There could be multiple contacts, but just one contact with a 'userId' will satisfy this check
  if(is.null(userId)) {
    # Should this be a SKIP?
    status <- "FAILURE"
    values[[length(values)+1]] <- list(value="A user identifier for any contact is not present, unable to check for an ORCID")
  } else {
    # contact/userId is present, so check if it is an orcid
    hasORCID <- grepl("^\\s*http(s)?://(dx\\.)?doi\\.org/(doi:)?10\\..+", userId, perl=T) || grepl("^\\s*doi:10\\..+", userId, perl=T)
    if(hasORCID) {
      values[[length(values)+1]] <- list(value="The user identifier for a contact contains an ORCID")
    } else {
      status <- "FAILURE"
      values[[length(values)+1]] <- list(value="The user identifier for any contact does not contain an ORCID")
    }
  }
  
  # There could be multiple contact, but just one contact with an 'email' will satisfy this check
  if(emailPresent) {
    values[[length(values)+1]] <- list(value="An email address for a contact is present")
  } else {
    status <- "FAILURE"
    values[[length(values)+1]] <- list(value="An email address for any contact is not present")
  } 
  
  # There could be multiple contact, but just one contact with an 'address' will satisfy this check
  if(addressPresent) {
    values[[length(values)+1]] <- list(value="An address for a contact is present")
  } else {
    status <- "FAILURE"
    values[[length(values)+1]] <- list(value="An address for any contact is not present")
  }
  
  return(list(status=status, values=values))
}

result <- check()
mdq_result <- list(status=result$status, output=result$values)
]]></code>
  <selector>
		 <name>contactPresent</name>
		 <xpath>boolean(/*[local-name() = 'eml']/dataset/contact)</xpath>
	 </selector>
  <selector>
		 <name>userId</name>
		 <xpath>/*[local-name() = 'eml']/dataset/contact/userId</xpath>
	 </selector>
  <selector>
		 <name>emailPresent</name>
		 <xpath>boolean(/*[local-name() = 'eml']/dataset/contact/electronicMailAddress)</xpath>
	 </selector>
  <selector>
		 <name>addressPresent</name>
		 <xpath>boolean(/*[local-name() = 'eml']/dataset/contact/address)</xpath>
	 </selector>
	 <dialect>
		 <name>eml</name>
		 <xpath>boolean(/*[local-name() = 'eml'])</xpath>
	 </dialect>
</check>
<check>
	<id>check.contact.info.2</id>
	<name>Check contact information</name>
	<description>Check if the contact contains an email and address.</description>
	<type>identification</type>
	<level>INFO</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  values <- list()

  contactCount <- length(contacts)
  emailCount <- length(emailAddresses)
  addressCount <- length(addresses)

  if(contactCount == 0) {
    values[[length(values)+1]] <- list(value=sprintf("A 'contact' is not present, so unable to check email and address."))
    return(list(status="FAILURE", values=values))
  }
  
  # Assume that the check will succeed, until proven otherwise.
  # The output messages will be gathered into a list
  status <- "SUCCESS"
  
  # Output number of contacts that have email addresses
  if(emailCount == contactCount) {
    values[[length(values)+1]] <- list(value=sprintf("All contacts have email addresses."))
  } else {
    values[[length(values)+1]] <- list(value=sprintf("%d of %d contacts have email addresses.", emailCount, contactCount))
  }
  
  # Output number of contact that have addresses
  if(addressCount == contactCount) {
    values[[length(values)+1]] <- list(value=sprintf("All contacts have addresses."))
  } else {
    values[[length(values)+1]] <- list(value=sprintf("%d of %d contacts have addresses.", addressCount, contactCount))
  }
  
  return(list(status=status, values=values))
}

result <- check()
mdq_result <- list(status=result$status, output=result$values)
]]></code>
  <selector namespaceAware="true">
		 <name>contacts</name>
		 <xpath>/*[local-name() = 'eml']/dataset/contact |
			 /*/gmd:identificationInfo/*/gmd:pointOfContact
		 </xpath>
	 </selector>
  <selector namespaceAware="true">
		 <name>emailAddresses</name>
		 <xpath>/*[local-name() = 'eml']/dataset/contact/electronicMailAddress |
			 /*/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress/gco:CharacterString
		 </xpath>
	 </selector>
  <selector namespaceAware="true">
		 <name>addresses</name>
		 <xpath>/*[local-name() = 'eml']/dataset/contact/address |
			 /*/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:deliveryPoint/gco:CharacterString
		 </xpath>
	 </selector>
	 <dialect>
		 <name>eml</name>
		 <xpath>boolean(/*[local-name() = 'eml'])</xpath>
	 </dialect>
  <dialect>
		<name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
		<xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
</check>
<check>
	<id>check.contact.info.1</id>
	<name>Check contact information</name>
	<description>Check if the contact contains an email and address.</description>
	<type>identification</type>
	<level>INFO</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  values <- list()
  if(contactCount == 0) {
    values[[length(values)+1]] <- list(value=sprintf("A 'contact' is not present, so unable to check email and address."))
    return(list(status="FAILURE", values=values))
  }
  
  # Assume that the check will succeed, until proven otherwise.
  # The output messages will be gathered into a list
  status <- "SUCCESS"
  
  # Output number of contacts that have email addresses
  if(emailCount == contactCount) {
    values[[length(values)+1]] <- list(value=sprintf("All contacts have email addresses."))
  } else {
    values[[length(values)+1]] <- list(value=sprintf("%d of %d contacts have email addresses.", emailCount, contactCount))
  }
  
  # Output number of contact that have addresses
  if(addressCount == contactCount) {
    values[[length(values)+1]] <- list(value=sprintf("All contacts have addresses."))
  } else {
    values[[length(values)+1]] <- list(value=sprintf("%d of %d contacts have addresses.", addressCount, contactCount))
  }
  
  return(list(status=status, values=values))
}

result <- check()
mdq_result <- list(status=result$status, output=result$values)
]]></code>
  <selector>
		 <name>contactCount</name>
		 <xpath>count(/eml/dataset/contact)</xpath>
	 </selector>
  <selector>
		 <name>emailCount</name>
		 <xpath>count(/eml/dataset/contact/electronicMailAddress)</xpath>
	 </selector>
  <selector>
		 <name>addressCount</name>
		 <xpath>count(/eml/dataset/contact/address)</xpath>
	 </selector>
	 <dialect>
		 <name>eml</name>
		 <xpath>boolean(/*[local-name() = 'eml'])</xpath>
	 </dialect>
</check>
<check>
  <id>check.contact.1</id>
  <name>Contact</name>
  <description>Contact should be present</description>
  <type>identification</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
<code><![CDATA[
    library(metadig)

    if (length(contact) <= 0) {
      failure("No contacts are present.")
    } else {
      if(contactCount == 1) {
        success("One contact is present.")
      } else {
        success(sprintf("%d contacts are present.", contactCount))
      }
    }
  ]]></code>
  <selector>
    <name>contact</name>
    <xpath>/eml/dataset/contact</xpath>
  </selector>
  <selector>
    <name>contactCount</name>
    <xpath>count(/eml/dataset/contact)</xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
</check>
<check>
   <id>coverage.contentType.present.1</id>
   <name>Coverage Content Type</name>
   <description>Check that a coverage content type exists.</description>
   <type>Interoperable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # A coverage content type is not present
  if 'coverageContentType' not in globals() or coverageContentType is None:
    output = "A coverage content type was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(coverageContentType)):
    output = "The coverage content type is blank."   
    status = "FAILURE"
    return False
  else:
    # Check if coverage content type is a single string or arrayList
    if(isinstance(coverageContentType, str) or isinstance(coverageContentType, unicode)):
      output = "The coverage content type '{}' was found".format(coverageContentType)
    elif (isinstance(coverageContentType, ArrayList)):
      output = "The coverage content type '{}' was found (first of {} types)".format(coverageContentType[0].strip(), coverageContentType.size())
    else:
      output = "The coverage content type '{}' was found)".format(coverageContentType)
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>coverageContentType</name>
      <xpath>
          /*/contentInfo/MD_CoverageDescription/attributeGroup/MD_AttributeGroup/contentType/MD_CoverageContentTypeCode |
          /*/contentInfo/MD_CoverageDescription/contentType/MD_CoverageContentTypeCode 
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
  <id>coverage.in.arctic.1</id>
  <name>Coverage includes that Arctic</name>
  <description>Checks to see if at least one geographic coverage intersects with the Arctic, which is defined as the area north of 45° N latitude.</description>
  <type>interpretation</type>
  <level>INFO</level>
  <environment>rscript</environment>
  <code><![CDATA[
library(metadig)

if (any(na.omit(as.numeric(north_bound_coordinates)) >= 45)) {
  success("At least one geographic coverage is in the Arctic.")
} else {
  failure("No geographic coverage is in the Arctic.")
}
  ]]></code>
  <selector>
    <name>north_bound_coordinates</name>
    <xpath>//coverage//geographicCoverage/boundingCoordinates/northBoundingCoordinate</xpath>
  </selector>
</check>
<check>
  <id>check.creator.present.2</id>
  <name>Creator</name>
  <description>Creator should be present</description>
  <type>identification</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
<code><![CDATA[
    library(metadig)

    if (length(creator) <= 0) {
      failure("No creators are present.")
    } else {
      if(length(creator) == 1) {
        success("One creator is present.")
      } else {
        success(sprintf("%d creators are present.", length(creator)))
      }
    }
  ]]></code>
  <selector namespaceAware="true">
    <name>creator</name>
    <xpath>/*[local-name() = 'eml']/dataset/creator |
      /*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:citedResponsibleParty/gmd:CI_ResponsibleParty[normalize-space(gmd:role/gmd:CI_RoleCode)='originator'] |
      /*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:citedResponsibleParty/gmd:CI_ResponsibleParty[normalize-space(gmd:role/gmd:CI_RoleCode)='author'] |
      /*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:citedResponsibleParty/gmd:CI_ResponsibleParty[normalize-space(gmd:role/gmd:CI_RoleCode)='principalInvestigator'] |
      /*/dcterms:creator
    </xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
    <name>Dryad Data Package and Data File Modules</name>
    <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
  </dialect>
  <dialect>
    <name>ISO 19115 and ISO 19115-2</name>
    <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
</check>
<check>
	<id>check.creator.has.orcid.1</id>
	<name>Creator has ORCID</name>
	<description>The creator field should contain an ORCID, email and address.</description>
	<type>identification</type>  
	<level>INFO</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  # These variables are defined by the MQE from the <xpath> selectors.
  # "creatorPresent" - the dataset creator
  # "userId"         - the dataset creator/userId
  # "emailPresent"   - the creator email
  # "addressPresent" - the creator address
  if(!creatorPresent) {
    return(list(status="SKIP", output="A creator entry is not present, unable to check for an ORCID, email or address."))
  }
  
  # Assume that the check will succeed, until proven otherwise.
  # The output messages will be gathered into a list
  status <- "SUCCESS"
  values <- list()
  
  # There could be multiple creators, but just one creator with a 'userId' will satisfy this check
  if(is.null(userId)) {
    # Should this be a SKIP?
    status <- "FAILURE"
    values[[length(values)+1]] <- list(value="A user identifier for any creator is not present, so a check for an ORCID cannot be made")
  } else {
    # creator/userId is present, so check if it is an orcid
    hasORCID <- grepl("^\\s*http(s)?://(dx\\.)?doi\\.org/(doi:)?10\\..+", userId, perl=T) || grepl("^\\s*doi:10\\..+", userId, perl=T)
    if(hasORCID) {
      values[[length(values)+1]] <- list(value="The user identifier for a creator is an ORCID")
    } else {
      status <- "FAILURE"
      values[[length(values)+1]] <- list(value="The user identifier for any creator does not contains an ORCID")
    }
  }
  
  # There could be multiple creator, but just one creator with an 'email' will satisfy this check
  if(emailPresent) {
    values[[length(values)+1]] <- list(value="An email address for a creator is present")
  } else {
    status <- "FAILURE"
    values[[length(values)+1]] <- list(value="An email address for any creator is not present")
  } 
  
  # There could be multiple creator, but just one creator with an 'address' will satisfy this check
  if(addressPresent) {
    values[[length(values)+1]] <- list(value="An address for a creator is present")
  } else {
    status <- "FAILURE"
    values[[length(values)+1]] <- list(value="An address for any creator is not present")
  }
  
  return(list(status=status, values=values))
  
}

result <- check()
mdq_result <- list(status=result$status, output=result$values)
]]></code>
  <selector>
		 <name>creatorPresent</name>
		 <xpath>boolean(/eml/dataset/creator)</xpath>
	 </selector>
  <selector>
		 <name>userId</name>
		 <xpath>/eml/dataset/creator/userId</xpath>
	 </selector>
  <selector>
		 <name>emailPresent</name>
		 <xpath>boolean(/eml/dataset/creator/electronicMailAddress)</xpath>
	 </selector>
  <selector>
		 <name>addressPresent</name>
		 <xpath>boolean(/eml/dataset/creator/address)</xpath>
	 </selector>
	 <dialect>
		 <name>eml</name>
		 <xpath>boolean(/*[local-name() = 'eml'])</xpath>
	 </dialect>
</check>
<check>
	<id>check.creator.info.2</id>
	<name>Check creator information</name>
	<description>Check if the creator contains an email and address.</description>
	<type>identification</type>  
	<level>INFO</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  values <- list()

  creatorCount <- length(creator)
  emailCount <- length(emailAddresses)
  addressCount <- length(addresses)

  if(creatorCount == 0) {
    values[[length(values)+1]] <- list(value=sprintf("A 'creator' is not present, so unable to check email and address."))
    return(list(status="FAILURE", values=values))
  }
  
  # Assume that the check will succeed, until proven otherwise.
  # The output messages will be gathered into a list
  status <- "SUCCESS"
  
  # Output number of creators that have email addresses
  if(emailCount == creatorCount) {
    values[[length(values)+1]] <- list(value=sprintf("All %s creators have email addresses.", creatorCount))
  } else {
    values[[length(values)+1]] <- list(value=sprintf("%d of %d creators have email addresses.", emailCount, creatorCount))
  }
  
  # Output number of creators that have addresses
  if(addressCount == creatorCount) {
    values[[length(values)+1]] <- list(value=sprintf("All %s creators have addresses.", creatorCount))
  } else {
    values[[length(values)+1]] <- list(value=sprintf("%d of %d creators have addresses.", addressCount, creatorCount))
  }

  return(list(status=status, values=values))
}

result <- check()
mdq_result <- list(status=result$status, output=result$values)
]]></code>
  <selector namespaceAware="true">
    <name>creator</name>
	<xpath>/*[local-name() = 'eml']/dataset/creator |
		  /*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:citedResponsibleParty/gmd:CI_ResponsibleParty[normalize-space(gmd:role/gmd:CI_RoleCode)='originator'] |
		  /*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:citedResponsibleParty/gmd:CI_ResponsibleParty[normalize-space(gmd:role/gmd:CI_RoleCode)='author'] |
		  /*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:citedResponsibleParty/gmd:CI_ResponsibleParty[normalize-space(gmd:role/gmd:CI_RoleCode)='principalInvestigator'] |
		  /*/dcterms:creator
	</xpath>
  </selector>
  <selector namespaceAware="true">
	<name>emailAddresses</name>
	<xpath>/*[local-name() = 'eml']/dataset/creator/electronicMailAddress |
		/*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:citedResponsibleParty/gmd:CI_ResponsibleParty[normalize-space(gmd:role/gmd:CI_RoleCode)='originator']/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress |
		/*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:citedResponsibleParty/gmd:CI_ResponsibleParty[normalize-space(gmd:role/gmd:CI_RoleCode)='author']/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress |
		/*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:citedResponsibleParty/gmd:CI_ResponsibleParty[normalize-space(gmd:role/gmd:CI_RoleCode)='principalInvestigator']/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress
	</xpath>
	</selector>
  <selector namespaceAware="true">
	<name>addresses</name>
	<xpath>/*[local-name() = 'eml']/dataset/creator/address |
		/*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:citedResponsibleParty/gmd:CI_ResponsibleParty[normalize-space(gmd:role/gmd:CI_RoleCode)='originator']/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:deliveryPoint|
		/*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:citedResponsibleParty/gmd:CI_ResponsibleParty[normalize-space(gmd:role/gmd:CI_RoleCode)='author']/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:deliveryPoint |
		/*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:citedResponsibleParty/gmd:CI_ResponsibleParty[normalize-space(gmd:role/gmd:CI_RoleCode)='principalInvestigator']/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:deliveryPoint
	</xpath>
  </selector>
	<dialect>
	  <name>eml</name>
	  <xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
	<dialect>
		<name>Dryad Data Package and Data File Modules</name>
		<xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
	</dialect>
	<dialect>
		<name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
		<xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
	</dialect>
</check>
<check>
	<id>check.creator.info.1</id>
	<name>Check creator information</name>
	<description>Check if the creator contains an email and address.</description>
	<type>identification</type>  
	<level>INFO</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  values <- list()

  creatorCount <- length(creator)
  emailCount <- length(emailAddresses)
  addressCount <- length(addresses)

  if(creatorCount == 0) {
    values[[length(values)+1]] <- list(value=sprintf("A 'creator' is not present, so unable to check email and address."))
    return(list(status="FAILURE", values=values))
  }
  
  # Assume that the check will succeed, until proven otherwise.
  # The output messages will be gathered into a list
  status <- "SUCCESS"
  
  # Output number of creators that have email addresses
  if(emailCount == creatorCount) {
    values[[length(values)+1]] <- list(value=sprintf("All %s creators have email addresses.", creatorCount))
  } else {
    values[[length(values)+1]] <- list(value=sprintf("%d of %d creators have email addresses.", emailCount, creatorCount))
  }
  
  # Output number of creators that have addresses
  if(addressCount == creatorCount) {
    values[[length(values)+1]] <- list(value=sprintf("All %s creators have addresses.", creatorCount))
  } else {
    values[[length(values)+1]] <- list(value=sprintf("%d of %d creators have addresses.", addressCount, creatorCount))
  }

  return(list(status=status, values=values))
}

result <- check()
mdq_result <- list(status=result$status, output=result$values)
]]></code>
  <selector namespaceAware="true">
    <name>creator</name>
	<xpath>/*[local-name() = 'eml']/dataset/creator</xpath>
  </selector>
  <selector namespaceAware="true">
	<name>emailAddresses</name>
	<xpath>/*[local-name() = 'eml']/dataset/creator/electronicMailAddress</xpath>
	</selector>
  <selector namespaceAware="true">
	<name>addresses</name>
	<xpath>/*[local-name() = 'eml']/dataset/creator/address</xpath>
  </selector>
	<dialect>
	  <name>eml</name>
	  <xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</check>
<check>
  <id>check.creator.present.1</id>
  <name>Creator</name>
  <description>Creator should be present</description>
  <type>identification</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
<code><![CDATA[
    library(metadig)

    if (length(creator) <= 0) {
      failure("No creators are present.")
    } else {
      if(length(creator) == 1) {
        success("One creator is present.")
      } else {
        success(sprintf("%d creators are present.", length(creator)))
      }
    }
  ]]></code>
  <selector namespaceAware="true">
    <name>creator</name>
    <xpath>/*[local-name() = 'eml']/dataset/creator</xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
</check>
<check>
  <id>data.head.and.tail.1</id>
  <name>Data head and tail</name>
  <description>Show the first and last rows of tabular data. For each data object referenced in the metadata, attempts to download, read, then display the first and last ten lines.</description>
  <type>interpretation</type>
  <level>INFO</level>
  <environment>rscript</environment>
  <code><![CDATA[
library(metadig)
library(data.table)
library(readxl)

supported_formats <- c("text/csv",
                     "text/tsv",
                     "text/plain",
                     "application/vnd.ms-excel",
                     "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")

if (length(names) <= 0) {
  success("No data files were described in this document so no head/tail display was created.")
} else {
  for (i in seq_along(names)) {
    if (!(formats[i] %in% supported_formats)) {
      save_output(paste0("Skipped displaying the head of ", names[i], " because it wasn't in the list of supported formats for displaying."))
      next
    }

    # Convert ecogrid URis to DataONE resolve URIs
    url <- gsub("ecogrid:/knb/", "https://cn.dataone.org/cn/v2/resolve/", urls[i])

    path <- tryCatch({
      mdq_get(url, FALSE)
    },
    error = function(e) {
      e
    })

    if (inherits(path, "error")) {
      save_output(paste0("Something went wrong when trying to download ", names[i]))
      next
    }

    x <- tryCatch({
      if (formats[i] == "text/csv") {
        read.csv(path)
      } else if (formats[i] == "text/tsv") {
        read.delim(path)
      } else if (formats[i] == "text/plain") {
        fread(path)
      } else if (formats[i] == "application/vnd.ms-excel") {
        readxl:::read_xls(path)
      } else if (formats[i] == "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet") {
        readxl:::read_xlsx(path)
      }
    },
    error = function(e) {
      save_output(paste0("Failed to read file ", names[i], " at the following URL: ", url, "."))
      e
    })

    if (is.data.frame(x)) {
      save_output(capture.output(head(x, n = 10)))
      save_output(capture.output(tail(x, n = 10)))
    } else {
      save_output(paste0("Something went wrong when trying to read ", names[i]))
    }
  }
}
success()
]]></code>
  <selector>
    <name>names</name>
    <xpath>/eml/dataset/*[self::dataTable|self::otherEntity]</xpath>
    <subSelector>
      <name>...</name>
      <xpath>./entityName</xpath>
    </subSelector>
  </selector>
  <selector>
    <name>formats</name>
    <xpath>/eml/dataset/*[self::dataTable|self::otherEntity]</xpath>
    <subSelector>
      <name>...</name>
      <xpath>.//formatName</xpath>
    </subSelector>
  </selector>
  <selector>
    <name>urls</name>
    <xpath>/eml/dataset/*[self::dataTable|self::otherEntity]</xpath>
    <subSelector>
      <name>...</name>
      <xpath>.//distribution/online/url</xpath>
    </subSelector>
  </selector>
</check>
<check>
   <id>dataset.abstract.length.1</id>
   <name>Dataset Abstract Length</name>
   <description>Check that an abstract exists and is of suffient length.</description>
   <type>Findable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  # check: datasetAbstractLength
  import re
  import metadig.variable as mvar

  global output
  global status
  minLength = 100
  
  if 'abstract' not in globals() or abstract is None:
    output = "An abstract was not found."
    status = "FAILURE"
    return False

  if(mvar.isBlank(abstract)):
    output = "The abstract is blank"
    status = "FAILURE"
    return False
  
  numWords = len(re.split('\s+', abstract.strip()))
  if (numWords < minLength):
    output = "The abstract word count of '{}' is less that the recommended minimum of '{}'".format(numWords, minLength)
    status = "FAILURE"
    return False
  else:
    output = "The abstract is valid, with a word count of {}".format(numWords)
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>abstract</name>
      <xpath>/resource/descriptions/description[@descriptionType='Abstract'] |
          /*/description |
          /eml/*/abstract |
          /*/identificationInfo/*/abstract |
          /*/identificationInfo/*/abstract
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.creator.present.1</id>
   <name>Dataset Creator Present</name>
   <description>Check that a dataset creator exists.</description>
   <type>Findable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status

  if ('creator' in globals() and creator is not None and creator):
    output = "A dataset author/originator is present"
    status = "SUCCESS"
    return True
  else:
    output = "A dataset author/originator is not present"
    status = "FAILURE"
    return False

      ]]></code>
   <selector>
      <name>creator</name>
      <xpath>boolean(
         /resource/creators/creator/* or
         /*/creator or
         /eml/dataset/creator or
         /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='author']/individualName or
         /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='author']/party/*/name or
         /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='originator']/party/*/name)
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.creatorIdentifier.present.1</id>
   <name>Dataset Creator Identifier Present</name>
   <description>Check that a dataset creator identifier exists.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # A dataset creator is not present
  if 'creator' not in globals() or creator is None:
    output = "A dataset creator identifier was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(creator)):
    output = "The dataset creator identifier is blank."   
    status = "FAILURE"
    return False
  else:
    # Check if dataset creator identifier is a single string or arrayList
    if(isinstance(creator, str) or isinstance(creator, unicode)):
      output = "The dataset creator identifier '{}' was found".format(creator)
    elif (isinstance(creator, ArrayList)):
      output = "The dataset creator identifier '{}' was found (first of {} formats)".format(creator[0].strip(), creator.size())
    else:
      output = "The dataset creator identifier '{}' was found)".format(creator)
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>creator</name>
      <xpath>
          /resource/contributors/contributor/nameIdentifier |
          /eml/*/creator/userId |
          /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='author']/party/*/partyIdentifier/MD_Identifier/code |
          /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='creator']/party/*/partyIdentifier/MD_Identifier/code |
          /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='originator']/party/*/partyIdentifier/MD_Identifier/code
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.creatorIdentifierType.present.1</id>
   <name>Dataset Creator Identifier Type</name>
   <description>Check that a dataset creator identifier type exists.</description>
   <type>Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status

  if ('ResourceAuthorOriginatorIdentifierType' in globals() and ResourceAuthorOriginatorIdentifierType is not None and ResourceAuthorOriginatorIdentifierType):
    output = "An author/originator identifier type is present"
    status = "SUCCESS"
    return True
  else:
    output = "An author/originator identifier type is not present"
    status = "FAILURE"
    return False
      ]]></code>
   <selector>
      <name>ResourceAuthorOriginatorIdentifierType</name>
      <xpath>boolean((/resource/contributors/contributor/nameIdentifier/@nameIdentifierScheme)
         or (/eml/*/creator/userId/@system)
         or (/eml/*/creator/userId/@directory)
         or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='author']/party/*/partyIdentifier/MD_Identifier/codeSpace/CharacterString)
         or (/MD_Metadata/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='originator']/party/*/partyIdentifier/MD_Identifier/codeSpace/CharacterString))
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.distribution.present.1</id>
   <name>Dataset Distribution Information Present</name>
   <description>Check that dataset distribution information exists and is resolvable.</description>
   <type>Accessible</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status

  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  import metadig.checks as checks

  # An attribute definition is not present
  if 'datasetDistribution' not in globals() or datasetDistribution is None:
    output = "A dataset distribution URL was not found."
    status = "FAILURE"
    return False
      
  if (mvar.isBlank(datasetDistribution)):
    output = "The dataset distribution URL is blank."
    status = "FAILURE"
    return False
  else:
    # Check if dataset distribution URL is a single string or arrayList
    if(isinstance(datasetDistribution, str) or isinstance(datasetDistribution, unicode)):
      output = "The resource distribution URL '{}' was found".format(datasetDistribution)
      url = datasetDistribution.strip()
    elif (isinstance(datasetDistribution, ArrayList)):
      output = "The dataset distribution URL '{}' was found (first of {} URLs)".format(datasetDistribution[0].strip(), datasetDistribution.size())
      url = datasetDistribution[0].strip()
    else:
      output = "The dataset distribution URL '{}' was found)".format(datasetDistribution.strip())
      url = datasetDistribution.strip()
      
  # 2019-08-9 Note that the resolvability part of this check is currently disabled, until https://redmine.dataone.org/issues/881 is 
  # closed and the fix is incorporated into a DataONE CCI release.
  status = "SUCCESS"
  return True

  #resolvable, msg = checks.isResolvable(url)
  #if (resolvable):
  #  output = '{} and is resolvable.'.format(output)      
  #  status = "SUCCESS"
  #  return True
  #else:
  #  output = "{}, but is not resolvable: {}".format(output, msg)      
  #  status = "FAILURE"
  #  return False
      ]]></code>
   <selector>
      <name>datasetDistribution</name>
      <xpath>
         /eml/dataset/distribution/online/url[@function="download"] |
         /eml/dataset/*/physical/distribution/online/url[@function="download"] |
         /*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorTransferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[function/CI_OnLineFunctionCode='download']/linkage/URL |
         /*/distributionInfo/MD_Distribution/transferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[function/CI_OnLineFunctionCode='download']/linkage/URL |
         /*/identificationInfo/*/citation/CI_Citation/onlineResource/CI_OnlineResource[function/CI_OnLineFunctionCode='download']/linkage/URL 
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1, 4.x</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.entityLicense.present.1</id>
   <name>Dataset Entity License Present</name>
   <description>Check that an entity usage license exists.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
         
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  displayNchars = 40
  # A dataset license is not present
  if 'datasetLicense' not in globals() or datasetLicense is None:
    output = "A dataset license was not found."
    status = "FAILURE"
    return False

  if (mvar.isBlank(datasetLicense)):
    output = "The dataset license is blank."   
    status = "FAILURE"
    return False
  else:
    # Check if dataset license is a single string or arrayList
    if(isinstance(datasetLicense, str) or isinstance(datasetLicense, unicode)):
      outstr = datasetLicense.strip()
      outstr.replace('\n', ' ').replace('\r', '')
      if(len(outstr) > displayNchars):
        outstr = "{}...".format(outstr[:displayNchars])
      output = "The dataset license '{}' was found".format(outstr)
    elif (isinstance(datasetLicense, ArrayList)):
      outstr = datasetLicense[0].strip()
      outstr.replace('\n', ' ').replace('\r', '')
      if(len(outstr) > displayNchars):
        outstr = "{}...".format(outstr[:displayNchars])
      output = "The dataset license '{}' was found (first of {} licenses)".format(outstr, datasetLicense.size())
    else:
      output = "The dataset license '{}' was found)".format(datasetLicense)
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>datasetLicense</name>
      <!--
      The Xpaths for the ISO    resourceConstraints check for just the MD_RestrictionCode of 'license', but may have to be made more 
      open, i.e. check for 'licenceUnrestricted' or 'intellectualPropertyRights'. See https://geo-ide.noaa.gov/wiki/index.php?title=ISO_19115_and_19115-2_CodeList_Dictionaries#MD_RestrictionCode
      for more details.
      -->
      <xpath>
        /eml/dataset/intellectualRights |
        /*/rights |
        /resource/rightsList/rights |
        /*/identificationInfo/MD_DataIdentification/resourceConstraints/MD_LegalConstraints/accessConstraints/MD_RestrictionCode[@codeListValue="license"] |
        /*/identificationInfo/MD_DataIdentification/resourceConstraints/MD_LegalConstraints/useConstraints/MD_RestrictionCode[@codeListValue="license"] |
        /*/identificationInfo/MD_DataIdentification/resourceConstraints/MD_LegalConstraints/otherConstraints/MD_RestrictionCode[@codeListValue="license"] |
        /eml/dataset/licensed/identifier
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language 2.1, 2.2.0</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.keywordType.present.1</id>
   <name>Dataset Keyword Type Present</name>
   <description>Check if each keyword has a type specified..</description>
   <type>Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  missing = []
  # Limit the number of missing keywords that will be listed
  missingListMax = 5
  # For each keyword, check if a type is specified
  if(len(keywords) == 0):
    output = "No keywords found, unable to check for keyword types."
    status = "SKIP"
    return True
     
  # For each keyword, check if a type is specified.
  # Note that the quality engine returns xpath selections as ArrayLists when 
  # multiple items are returned.
  for i in range(0, len(keywords)):
    keywordType = keywords.get(i)
    thisKeywordName = keywordNames.get(i)
    if(thisKeywordName is None):
      thisKeywordName = "no name"
    elif(isinstance(thisKeywordName, int)):
      thisKeywordName = str(thisKeywordName)
    elif(isinstance(thisKeywordName, ArrayList)):
      for j in range(0, len(thisKeywordName)):
        testStr = thisKeywordName.get(j)
        # The quality engine assumes that a string that looks like an
        # integer should be converted to an int, so convert it to
        # a string!
        if(isinstance(testStr, int)):
          testStr = str(testStr)
          
        testStr = testStr.strip()
        if(testStr == ""):
          continue
        else:
          thisKeywordName = testStr
          break
          
    if keywordType is None:
      if(len(missing) > missingListMax):
        missing.append('...')
        break
      else: 
        missing.append(thisKeywordName)
        continue
          
    if (mvar.isBlank(keywordType)):
      if(len(missing) > missingListMax):
        missing.append('...')
        break
      else:
        missing.append(thisKeywordName)
        continue

  if(len(missing) > 0):
    output = "The following keywords do not have a type specified: '{}'".format(', '.join(missing))
    status = "FAILURE"
    return False
  else:
    output = "All {} keywords have a type specified".format(len(keywords))
    status = "SUCCESS"
    return True

    ]]></code>
   <selector>
      <name>keywords</name>
      <xpath>
          /eml/dataset/keywordSet/keyword |
          /*/identificationInfo/*/descriptiveKeywords/MD_Keywords/keyword
      </xpath>
      <subSelector>
        <name>type</name>
        <xpath>
            attribute::keywordType |
            ../type/MD_KeywordTypeCode
        </xpath>
      </subSelector>
    </selector>
    <selector>
      <name>keywordNames</name>
      <xpath>
          /eml/dataset/keywordSet/keyword |
          /*/identificationInfo/*/descriptiveKeywords/MD_Keywords/keyword
      </xpath>
      <subSelector>
        <name>name</name>
        <xpath>./text() | ./*/text()</xpath>
      </subSelector>
   </selector>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.keywords.controlled.1</id>
   <name>Dataset Keywords Controlled</name>
   <description>Check if a keyword thesaurus is present, indicating that the keywords are controlled.</description>
   <type>Findable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status

  keywordGroupCount = 0
  naturalKeywordGroupCount = 0
  controlledKeywordGroupCount = 0
 
  # For each resource, check that the attributes defined for it have unique names
  if(len(keywordGroups) == 0):
    output = "No keywords found, unable to check for controlled keywords."
    status = "SKIP"
    return True
    
  for i in range(0, len(keywordGroups)):
    keywordGroupCount += 1
    # Should be only one thesaurus per keyword group. If there is ANY thesaurus
    # then it applies to the entire group, and so this group of keywords is
    # controlled and not 'natural'
    thesaurusPresent = keywordGroups.get(i)
    
    if(thesaurusPresent):
      controlledKeywordGroupCount += 1
    else:
      naturalKeywordGroupCount += 1
           
  if(controlledKeywordGroupCount > 0):
    output = "{} groups of controlled keywords (from a vocabulary) found (out of {} keyword groups.)".format(controlledKeywordGroupCount, keywordGroupCount)
    status = "SUCCESS"
    return True 
  else:
    output = "No controlled keyword (from a vocabulary) groups found (out of {} keyword groups.".format(keywordGroupCount)
    status = "FAILURE"
    return False
      ]]></code>
   <selector>
      <name>keywordGroups</name>
      <xpath>
           /*/identificationInfo/*/descriptiveKeywords |
           /eml/dataset/keywordSet
      </xpath>
      <subSelector>
        <name>thesaurusPresent</name>
        <xpath>boolean( 
            (./MD_Keywords/thesaurusName and not (./MD_keywords/thesaurusName[@nilReason="unknown"])) or
            (./keywordThesaurus))
        </xpath>
      </subSelector>
   </selector>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.landingPage.present.1</id>
   <name>Dataset Landing Page Present</name>
   <description>Check that a dataset landing page exists and is resolvable.</description>
   <type>Accessible</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  import metadig.checks as checks

  displayLength = 20
  # A dataset landing page is not present
  if 'datasetLandingPage' not in globals() or datasetLandingPage is None:
    output = "A dataset landing page url was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(datasetLandingPage)):
    output = "The dataset langing page url is blank."   
    status = "FAILURE"
    return False
  else:
    # Check if variable type is a single string or arrayList
    if(isinstance(datasetLandingPage, str) or isinstance(datasetLandingPage, unicode)):
      output = "The dataset landing page url '{}' was found".format(datasetLandingPage)
      url = datasetLandingPage.strip()
    elif (isinstance(datasetLandingPage, ArrayList)):
      output = "The dataset landing page url '{}' was found (first of {} urls)".format(datasetLandingPage[0].strip(), datasetLandingPage.size())
      url = datasetLandingPage[0].strip()
    else:
      output = "The dataset landing page url '{}' was found)".format(datasetLandingPage)
      url = datasetLandingPage.strip()
      
  # 2019-08-9 Note that the resolvability part of this check is currently disabled, until https://redmine.dataone.org/issues/881 is 
  # closed and the fix is incorporated into a DataONE CCI release.
  status = "SUCCESS"
  return True

  #resolvable, msg = checks.isResolvable(url)
  #if (resolvable):
  #  output = '{} and is resolvable.'.format(output)      
  #  status = "SUCCESS"
  #  return True
  #else:
  #  output = "{}, but is not resolvable: {}".format(output, msg)      
  #  status = "FAILURE"
  #  return False
      ]]></code>
   <selector>
      <name>datasetLandingPage</name>
      <xpath>
          /eml/dataset/distribution/online/url[@function="information"] |
          /eml/dataset/*/physical/distribution/online/url[@function="information"] |
          /*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorTransferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[function/CI_OnLineFunctionCode/@codeListValue="information"]/linkage/URL |
          /*/distributionInfo/MD_Distribution/transferOptions/MD_DigitalTransferOptions/onLine/CI_OnlineResource[function/CI_OnLineFunctionCode='information']/linkage/URL |
          /*/identificationInfo/*/citation/CI_Citation/onlineResource/CI_OnlineResource[function/CI_OnLineFunctionCode='information']/linkage/URL
  </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.methods.present.1</id>
   <name>Dataset Methods Present</name>
   <description>Check that a detailed methods section is present.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
   global output
   global status
   
   import metadig.variable as mvar

   # A detailed methods section is not present
   if 'detailedMethodsText' not in globals() or detailedMethodsText is None:
     output = "A detailed methods section was not found."
     status = "FAILURE"
     return False
         
   if (mvar.isBlank(detailedMethodsText)):
     output = "The detailed methods section is blank."
     status = "FAILURE"
     return False
   else:
     output = "A detailed methods section was found."
     status = "SUCCESS"
     return True
      ]]></code>
   <selector>
      <name>detailedMethodsText</name>
      <xpath>/*/resourceLineage/LI_Lineage/statement |
          /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/statement//text |
          /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LE_ProcessStep/description//text() |
          /*/provenance |
          /eml/dataset/methods/methodStep/description//text()
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.naturalLanguageKeywords.present.1</id>
   <name>Natural Language Keywords Present</name>
   <description>Check if kewords are present that are not controlled by a vocabulary (natural language keywords).</description>
   <type>Findable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status

  keywordGroupCount = 0
  naturalKeywordGroupCount = 0
  controlledKeywordGroupCount = 0
 
  # For each resource, check that the attributes defined for it have unique names
  if(len(keywordGroups) == 0)   :
    output = "No keywords found, unable to check for natural language keywords."
    status = "SKIP"
    return True
    
  for i in range(0, len(keywordGroups)):
    keywordGroupCount += 1
    # Should be only one thesaurus per keyword group. If there is ANY thesaurus 
    # then it applies to the entire group, and so this group of keywords is
    # controlled and not 'natural'
    thesaurusPresent = keywordGroups.get(i)
    
    if(thesaurusPresent):
      controlledKeywordGroupCount += 1
    else:
      naturalKeywordGroupCount += 1
           
  if(naturalKeywordGroupCount > 0):
    output = "{} groups of natural language keywords found (out of {} keyword groups.)".format(naturalKeywordGroupCount, keywordGroupCount)
    status = "SUCCESS"
    return True 
  else:
    output = "No natural language keyword groups found (out of {} keyword groups.".format(keywordGroupCount)
    status = "FAILURE"
    return False
      ]]></code>
   <selector>
      <name>keywordGroups</name>
      <xpath>
           /*/identificationInfo/*/descriptiveKeywords |
           /eml/dataset/keywordSet
      </xpath>
      <subSelector>
        <name>thesaurusPresent</name>
        <xpath>boolean( 
            (./MD_Keywords/thesaurusName and not (./MD_keywords/thesaurusName[@nilReason="unknown"])) or
            (./keywordThesaurus))
        </xpath>
      </subSelector>
   </selector>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.publicationDate.present.1</id>
   <name>Dataset Publication Date Present</name>
   <description>Check that a publication date exists.</description>
   <type>Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import metadig.variable as mvar

  if ('datasetPubDate' in globals() and datasetPubDate is not None and datasetPubDate):
    status = "SUCCESS"
  else:
    output = "A entity publication date is not present"
    status = "FAILURE"
    return False
    
  if (mvar.isBlank(datasetPubDate)):
    output = "The entity publication date is blank"
    status = "FAILURE"
    return False
  else:
    output = "The entity publication date '{}' was found".format(datasetPubDate)
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>datasetPubDate</name>
      <xpath>boolean(
         /resource/publicationYear or
         /*/available or
         /eml/dataset/pubDate or
         /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/Date or
         /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/DateTime or
         /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[dateType/CI_DateTypeCode='publication']/date/DateTime)
      </xpath>
   </selector>
   <selector>
       <name>datasetPubDate</name>
       <xpath>/resource/publicationYear |
              /*/available |
              /eml/dataset/pubDate |
              /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/Date |
              /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/DateTime |
              /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[dateType/CI_DateTypeCode='publication']/date/DateTime
       </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
  <id>dataset.publicationDate.timeframe.1</id>
  <name>Publication date is not in the future</name>
  <description>Publication Date Should Not Be In The Future</description>
  <type>Findable</type>
  <level>OPTIONAL</level>
  <environment>rscript</environment>
  <code><![CDATA[
    library(metadig)
    if (pubDatePresent) {
      # A publication date is present, so now check if it is in
      # the future
      # The R as.Date function assumes that you are specifying a date as number of
      # days since epoch, if a string is entered that looks like a number, i.e. "2017"
      # so we have to check to see if R got confused.
      pubDate <- toString(datasetPubDate)
      # R handles ISO 8601 formatted dates, so specifying the year only will cause problems. In
      # this case, add month and day in the ISO way.
      if(nchar(pubDate) == 4) {
        pubDate <- sprintf("%s-01-01", pubDate)
      }
      metadataDate <- as.Date(pubDate, optional = TRUE)
      # If the date wasn't parsable by R, return an error
      if(is.na(metadataDate)) {
        metadataDate <- as.Date(pubDate, tryFormats = c("%d/%m/%y"), optional = TRUE)
        if(is.na(metadataDate)) failure(sprintf("Unable to parse publication date '%s'.", pubDate))
      } else {
        currentDate <- Sys.Date()
        if(metadataDate > currentDate) {
          failure(sprintf("The publication date '%s' is in the future.", pubDate))
        } else {
          success(sprintf("The publication date '%s' was found and is not in the future.", datasetPubDate))
        }
      }
    } else {
      failure("A publication date is not present.") 
    }
   ]]></code>
   <selector>
     <name>pubDatePresent</name>
     <xpath>boolean(
            /resource/publicationYear or
            /*/available or
            /eml/dataset/pubDate or
            /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/Date or
            /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/DateTime or
            /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[dateType/CI_DateTypeCode='publication']/date/DateTime)
     </xpath>
   </selector>
   <selector>
       <name>datasetPubDate</name>
       <xpath>/resource/publicationYear |
              /*/available |
              /eml/dataset/pubDate |
              /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/Date |
              /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/DateTime |
              /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[dateType/CI_DateTypeCode='publication']/date/DateTime
       </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.publisher.present.1</id>
   <name>Dataset Publisher Present</name>
   <description>Check that a publisher exists.</description>
   <type>Accessible</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import metadig.variable as mvar
 
  if ('datasetPublisherPresent' in globals() and datasetPublisherPresent is not None and datasetPublisherPresent):
    status = "SUCCESS"
  else:
    output = "A dataset publisher is not present"
    status = "FAILURE"
    return False
    
  if (mvar.isBlank(datasetPublisher)):
    output = "The dataset publisher is blank."
    status = "FAILURE"
    return False

  output = "The dataset publisher '{}' was found".format(datasetPublisher.strip())
  return True 
      ]]></code>
   <selector>
      <name>datasetPublisherPresent</name>
      <xpath>boolean(
          /resource/publisher or
          /eml/dataset/publisher or
          /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='publisher']/organisationName or
          /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='publisher']/party/CI_Organisation/name)
      </xpath>
   </selector>
   <selector>
      <name>datasetPublisher</name>
      <xpath>/resource/publisher |
             /eml/dataset/publisher |
             /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='publisher']/organisationName |
             /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='publisher']/party/CI_Organisation/name
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.publisherIdentifier.present.1</id>
   <name>Dataset Publisher Identifier Present</name>
   <description>Check that a dataset publisher identifier exists.</description>
   <type>Accessible</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import metadig.variable as mvar
  import java.util.ArrayList as ArrayList

  # A dataset publisher identifier is not present
  if 'datasetPublisherIdentifier' not in globals() or datasetPublisherIdentifier is None:
    output = "A dataset publisher identifier was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(datasetPublisherIdentifier)):
    output = "The dataset publisher identifier is blank."
    status = "FAILURE"
    return False
  else:
    # Check if dataset publisher identifier is a single string or arrayList
    if(isinstance(datasetPublisherIdentifier, str) or isinstance(datasetPublisherIdentifier, unicode)):
      output = "The dataset publisher identifier '{}' was found".format(datasetPublisherIdentifier.strip())
    elif (isinstance(datasetPublisherIdentifier, ArrayList)):
      output = "The dataset publisher identifier '{}' was found (first of {} publisher identifiers)".format(datasetPublisherIdentifier[0].strip(), datasetPublisherIdentifier.size())
    else:
      output = "The dataset publisher identifier '{}' was found)".format(datasetPublisherIdentifier)

    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>datasetPublisherIdentifier</name>
      <xpath>
          /resource/publisher |
          /eml/dataset/publisher/userId |
          /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='publisher']/organisationName |
          /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='publisher']/party/CI_Organisation/name
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.revisionDate.present.1</id>
   <name>Dataset Revision Date Present</name>
   <description>Check that a revision date exists.</description>
   <type>Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  if ('datasetRevisionDatePresent' in globals() and datasetRevisionDatePresent is not None and datasetRevisionDatePresent):
    output = "A dataset creation or revision date is present"
    status = "SUCCESS"
    return True
  else:
    output = "A dataset creation or revision date is not present"
    status = "FAILURE"
    return False
      ]]></code>
   <selector>
      <name>datasetRevisionDatePresent</name>
      <xpath>boolean((/resource/dates/date)
         or (/*/dateSubmitted)
         or (/eml/*/maintenance/changeHistory/changeDate)
         or (/eml/*/pubDate)
         or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='creation']/date/Date)
         or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='creation']/date/DateTime)
         or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='revision']/date/Date)
         or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='revision']/date/DateTime)
         or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/Date)
         or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/DateTime)
         or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='creation']/date/DateTime)
         or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='revision']/date/DateTime)
         or (/*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/DateTime))
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.serviceLocation.present.1</id>
   <name>Dataset Service Location Present</name>
   <description>Check that a service location exists.</description>
   <type>Accessible</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status

  if ('serviceLocation' in globals() and serviceLocation is not None and serviceLocation):
    output = "A service location is present"
    status = "SUCCESS"
    return True
  else:
    output = "A service location is not present"
    status = "FAILURE"
    return False
      ]]></code>
   <selector>
      <name>serviceLocation</name>
      <xpath>boolean((/*/identificationInfo/SV_ServiceIdentification/containsOperations/SV_OperationMetadata/connectPoint/CI_OnlineResource/linkage)
         or (/*/identificationInfo/SV_ServiceIdentification/containsOperations/SV_OperationMetadata/connectPoint/CI_OnlineResource/linkage/URL))
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.serviceProvider.present.1</id>
   <name>Dataset Service Provider Present</name>
   <description>Check that a service provider is present.</description>
   <type>Accessible</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # A data service provider is not present
  if 'serviceProvider' not in globals() or serviceProvider is None:
    output = "A service provider was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(serviceProvider)):
    output = "The service provider is blank."   
    status = "FAILURE"
    return False
  else:
    # Check if resource identifier type is a single string or arrayList
    if(isinstance(serviceProvider, str) or isinstance(serviceProvider, unicode)):
      output = "The service provider '{}' was found".format(serviceProvider)
    elif (isinstance(serviceProvider, ArrayList)):
      output = "The service provider '{}' was found (first of {} providers)".format(serviceProvider[0].strip(), serviceProvider.size())
    else:
      output = "The service provider '{}' was found)".format(serviceProvider)
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>serviceProvider</name>
      <xpath>
          /*/identificationInfo/SV_ServiceIdentification/pointOfContact/CI_ResponsibleParty/individualName |
          /*/identificationInfo/SV_ServiceIdentification/pointOfContact/CI_ResponsibleParty/organisationName |
          /*/identificationInfo/SV_ServiceIdentification/pointOfContact/CI_ResponsibleParty/positionName
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.serviceType.present.1</id>
   <name>Dataset Service Type Present</name>
   <description>Check that a service type exists.</description>
   <type>Accessible</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status

  if ('serviceType' in globals() and serviceType is not None and serviceType):
    output = "A service type is present"
    status = "SUCCESS"
    return True
  else:
    output = "A service type is not present"
    status = "FAILURE"
    return False

      ]]></code>
   <selector>
      <name>serviceType</name>
      <xpath>boolean((/*/identificationInfo/SV_ServiceIdentification/serviceType/LocalName))</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.spatialExtent.present.1</id>
   <name>Dataset Spatial Extent Present</name>
   <description>Check that at least one spatial extent exists.</description>
   <type>Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status

  if ('spatialExtent' in globals() and spatialExtent is not None and spatialExtent):
    output = "A spatial extent is present"
    status = "SUCCESS"
    return True
  else:
    output = "A spatial extent is not present"
    status = "FAILURE"
    return False
      ]]></code>
   <selector>
      <name>spatialExtent</name>
      <xpath>boolean(
          /*/identificationInfo/MD_DataIdentification/extent/EX_Extent/geographicElement or
    	  /*/identificationInfo/*/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox//* or
          /*/identificationInfo/SV_ServiceIdentification/extent/EX_Extent/geographicElement/EX_GeographicBoundingBox//* or
          /*/spatial or
          /*/identificationInfo/*/extent/EX_Extent/geographicElement or
          /eml/*/coverage/geographicCoverage/boundingCoordinates or
          /resource/geoLocations/geoLocation)
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.taxonomicExtent.present.1</id>
   <name>Dataset Taxonomic Extent Present</name>
   <description>Check that a taxonomic extent exists.</description>
   <type>Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  if ('taxonomicExtent' in globals() and taxonomicExtent is not None and taxonomicExtent):
    output = "A taxonomic extent is present"
    status = "SUCCESS"
    return True
  else:
    output = "A taxonomic extent is not present"
    status = "FAILURE"
    return False
      ]]></code>
   <selector>
      <name>taxonomicExtent</name>
      <xpath>boolean(
          /*/scientificName or
          /eml/*/coverage/taxonomicCoverage)
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>dataset.temporalExtent.present.1</id>
   <name>Dataset Temporal Extent Present</name>
   <description>Check that a temporal extent exists.</description>
   <type>Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  if ('temporalExtent' in globals() and temporalExtent is not None and temporalExtent):
    output = "A temporal extent is present"
    status = "SUCCESS"
    return True
  else:
    output = "A temporal extent is not present"
    status = "FAILURE"
    return False
      ]]></code>
   <selector>
      <name>temporalExtent</name>
      <xpath>boolean(
          /*/identificationInfo/*/extent/EX_Extent/temporalElement/EX_TemporalExtent or
          /*/temporal or
          /eml/*/coverage/temporalCoverage)
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
  <id>dataset.title.length.1</id>
  <name>Dataset title length is sufficient</name>
  <description>Check that the dataset title is greater than 7 words and less than 20.</description>
  <type>identification</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[
  check <- function() {
    library(base)

    if(!titlePresent) {
      return(list(status = "FAILURE", output = sprintf("The dataset title is not present, so the check is unable to determine title word length.")))
    }

    # Required minimum word count for title
    strictMinCount <- 5
    # Recommended minimum word count
    minWordCount <- 7
    # Recommended max word count
    maxWordCount <- 20

    wordCount <- length(unlist(strsplit(datasetTitle, "\\s+", perl=T)))
    if (wordCount < strictMinCount) {
      return(list(status = "FAILURE", output = sprintf("The number of words in the dataset's title is %d. The minimum required word count is %s.", wordCount, minWordCount))) 
    } else if (wordCount < minWordCount) {
      return(list(status = "FAILURE", output = sprintf("The number of words in the dataset's title is %d. The minimum recommended word count is %s.", wordCount, minWordCount))) 
    } else if (wordCount > maxWordCount) {
      return(list(status = "FAILURE", output = sprintf("The number of words in the dataset's title is %d. The maximum recommended word count is %s.", wordCount, maxWordCount))) 
    } else {
      return(list(status = "SUCCESS", output = sprintf("The number of words in the dataset's title is sufficient because it is between %d and %d words long.", minWordCount, maxWordCount))) 
    }
  }
  result <- check()
  mdq_result <- list(status=result$status, output=list(list(value=result$output)))
  ]]></code>
  <selector>
    <name>titlePresent</name>
    <xpath>boolean(
	/eml/dataset/title or 
	/*/description or
      	/*/identificationInfo/*/citation/CI_Citation/title)
    </xpath>
  </selector>
  <selector>
    <name>datasetTitle</name>
    <xpath>/eml/dataset/title |
      /*/description |
      /*/identificationInfo/*/citation/CI_Citation/title
    </xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
    <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
    <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
  <dialect>
    <name>Dryad Data Package and Data File Modules</name>
    <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
  </dialect>
</check>
<check>
   <id>dataset.title.sufficient.1</id>
   <name>Dataset Title Sufficient</name>
   <description>Check that a title exists and contains sufficient information.</description>
   <type>Findable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  # check: is the dataset title sufficient - i.e. does it contain
  # the "who", "what", "where"?
  import re
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # These global variables are read by the quality engine when
  # the check returns
  global output
  global status

  minWordCount = 5
  maxWordCount = 20
  displayNchars = 20
  # Title is not present
  if 'datasetTitle' not in globals() or datasetTitle is None:
    output = "A dataset title was not found."
    status = "FAILURE"
    return False
    
  if (mvar.isBlank(datasetTitle)):
    output = "The dataset title is blank."
    status = "FAILURE"
    return False
    
  words = re.split('\s+', datasetTitle.strip())
  if(len(words) < minWordCount):
    output = "The dataset title word count ({}) contains less that the recommended minimum ({}): '{}'".format(len(words), maxWordCount, datasetTitle)
    status = "FAILURE"
    return False
  elif(len(words) > maxWordCount):
    output = "The dataset title word count ({}) contains more than the recommended maximum ({}): '{}...'".format(len(words), maxWordCount, datasetTitle[:displayNchars])
    status = "FAILURE"
    return False
  else:
    output = "The dataset title contains a sufficent word count (count={}, minimum={}, maximum={}".format(len(words), minWordCount, maxWordCount)
    status = "SUCCESS"
    return True

  ]]></code>
   <selector>
      <name>datasetTitle</name>
      <xpath>/resource/titles/title |
             /*/title |
             /eml/dataset/title |
             /*/identificationInfo/*/citation/CI_Citation/title
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 4.x</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
       <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
       <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
    </dialect>
    <dialect>
       <name>ISO 19115-1 / ISO 19115-3</name>
       <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
    </dialect>
</check>
<check>
   <id>distribution.contact.present.1</id>
   <name>Distribution Contact Present</name>
   <description>Check that a distribution contact exists.</description>
   <type>Accessible</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # A distribution contact is not present
  if 'distributionContact' not in globals() or distributionContact is None:
    output = "A distribution contact was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(distributionContact)):
    output = "The distribution contact is blank."   
    status = "FAILURE"
    return False
  else:
    # Check if resource identifier type is a single string or arrayList
    if(isinstance(distributionContact, str) or isinstance(distributionContact, unicode)):
      output = "The distribution contact '{}' was found".format(distributionContact)
    elif (isinstance(distributionContact, ArrayList)):
      output = "The distribution contact '{}' was found (first of {} contacts)".format(distributionContact[0].strip(), distributionContact.size())
    else:
      output = "The distribution contact '{}' was found)".format(distributionContact)
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>distributionContact</name>
      <xpath>
          /eml/*/associatedParty/role[RoleType='distributor'] |
          /eml/*/contact |
          /*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorContact/CI_ResponsibleParty/organisationName/*/text() | 
          /*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorContact/CI_ResponsibleParty/individualName/*/text() |
          /*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorContact/CI_ResponsibleParty/positionName/*/text()
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>distribution.contactIdentifier.present.1</id>
   <name>Distribution Contact Identifier</name>
   <description>Check that a distribution contact identifier exists.</description>
   <type>Accessible</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # A distribution contact identifier is not present
  if 'distributionContactIdentifier' not in globals() or distributionContactIdentifier is None:
    output = "A distribution contact identifier was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(distributionContactIdentifier)):
    output = "The distribution contact identifier is blank."   
    status = "FAILURE"
    return False
  else:
    # Check if distribution contact identifier type is a single string or arrayList
    if(isinstance(distributionContactIdentifier, str) or isinstance(distributionContactIdentifier, unicode)):
      output = "The distribution contact identifier '{}' was found".format(distributionContactIdentifier)
    elif (isinstance(distributionContactIdentifier, ArrayList)):
      output = "The distribution contact identifier '{}' was found (first of {} identifiers)".format(distributionContactIdentifier[0].strip(), distributionContactIdentifier.size())
    else:
      output = "The distribution contact identifier '{}' was found)".format(distributionContactIdentifier)
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>distributionContactIdentifier</name>
      <xpath>
          //*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorContact/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='distributor']/party/*/partyIdentifier/MD_Identifier/code |
          //*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorContact/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='pointOfContact']/party/*/partyIdentifier/MD_Identifier/code
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
	
	
	<id>check.echo.datasource.1</id>
	<name>Echo datasource</name>
	<description>Extract datasource (auth MN) from system metadata</description>
	<type>identification</type>
	<level>METADATA</level>
	<environment>Java</environment>
	<code>edu.ucsb.nceas.mdqengine.processor.DatasourceEchoCheck</code>
	<!-- not used -->
	<selector>
		<name>title</name>
		<xpath>/eml/dataset/title</xpath>
	</selector>
</check>
<check>
	
	
	<id>check.echo.formatId.1</id>
	<name>Echo formatId</name>
	<description>Extract formatId from system metadata</description>
	<type>identification</type>
	<level>METADATA</level>
	<environment>Java</environment>
	<code>edu.ucsb.nceas.mdqengine.processor.FormatIdEchoCheck</code>
	<!-- not used -->
	<selector>
		<name>title</name>
		<xpath>/eml/dataset/title</xpath>
	</selector>
</check>
<check>
	
	
	<id>check.echo.funder.1</id>
	<name>Funder</name>
	<description>Check for extracting funder from the metadata for result indexing and analysis.</description>
	<type>identification</type>
	<level>METADATA</level>
	<environment>rscript</environment>
	<code><![CDATA[
	library(stringr)
	NSFawardLength <- 7
if (is.null(awards)) {
  status <- "SUCCESS"
  output <- "NA"
  mdq_result <- list(status = status,
                     output = list(list(value = output)))
} else {
  status <- "SUCCESS"  
    awards <- trimws(gsub("nsf award", "", tolower(awards)))
  # Extract the integer funding numbers from any other character left in the 'funding' element.
  awards <- str_extract(awards, "\\d+")
  # Make sure that all award numbers are the correct number of characters
  # The number may have been stripped of leading zeros, so add them back
  # in if necessary.
  awardFormat <- paste0("%0", NSFawardLength, "d")
  awards <- lapply(awards, function(x) {
    award <- x
    if(nchar(x) < NSFawardLength) {
        award <- sprintf(awardFormat, as.integer(x))
    }
    as.character(award)
  })
  mdq_result <- list(status = status,
                     output = lapply(awards, function(message) {
                     message <- str_trim(message, side = c("both", "left", "right"))
                     list(value = message)}))
}]]></code>
	<selector>
		<name>awards</name>
		<xpath>/*[local-name() = 'eml']/dataset/project/funding//text()[normalize-space()]</xpath>
	</selector>
</check>
<check>
	
	
	<id>check.echo.rightsHolder.1</id>
	<name>Echo rightsHolder</name>
	<description>Extract rightsHolder from system metadata</description>
	<type>identification</type>
	<level>METADATA</level>
	<environment>Java</environment>
	<code>edu.ucsb.nceas.mdqengine.processor.RightsHolderEchoCheck</code>
	<!-- not used -->
	<selector>
		<name>title</name>
		<xpath>/eml/dataset/title</xpath>
	</selector>
</check>
<check>
   <id>entity.access.public.1</id>
   <name>Entity Access Public</name>
   <description>Check that entities are publicly available.</description>
   <type>Accessible</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  # Check that the metadata and data sets are publicly available.
  import re
  import metadig.variable as mvar
  import xml.etree.ElementTree as ET

  global output
  global status
  
  status = "FAILURE"
  
  # Currently this check is only checking the metadata access and not each 
  # data object
  if ('systemMetadata' not in globals() or systemMetadata is None):
    status = "FAILURE"
    output = "DataONE system metadata not available, unable to confirm publib access"
    return False
  
  root = ET.fromstring(systemMetadata)

  # Check an access rule that allows 'read' permission to the 'public' subject.
  # for example:
  # <accessPolicy>
  #  <allow>
  #    <subject>public</subject>
  #    <permission>read</permission>
  #  </allow>
  #  ...
  # </accessPolicy
  
  rule = root.findall("./accessPolicy/allow[subject='public']")
  # No rules exist for 'public' subject
  if(len(rule) == 0):
    status = "FAILURE"
    output = "No access rule for 'public' user in DataONE system metadata. Data are not publicly available"
  else:
    perm = rule[0].findall("permission")
    if(len(perm) == 0):
      status = "FAILURE"
      output = "No access rule for 'public' user in DataONE system metadata. Data are not publicly available"
    else:
      for elem in perm:
        if(elem.text == 'read' or elem.text == 'changePermission'):
          status = "SUCCESS"
          output = "Access rule for 'public' user found in DataONE system metadata. Data are publicly available"
          return True
          
      status = "FAILURE"
      output = "No Access rule for 'public' user found in DataONE system metadata. Data are not publicly available"
      return True
      
      ]]></code>
   <selector>
       <!-- This selector is not used, as sysmetadata must be processed manually -->
      <name>public</name>
      <xpath>/*/dataset/access</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.attributeDefinition.present.1</id>
   <name>Entity Attribute Definition Present</name>
   <description>Check that an attribute definition exists.</description>
   <type>Interoperable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  NoneType = type(None)
  
  # Check if definitions are present for each attribute.
  if not attributeDefinitionPresent:
    output = "No attributes are present, so unable to check for attribute defintions. Check skipped."
    status = "SKIP"
    return True 
    
  attributeCount = 0
  missing = []
  attributeNamesMissing = False
  missingCount = 0
  maxPrint = 5
  
  if(isinstance(attributeName, NoneType) or attributeName.size() == 0): 
    attributeNamesMissing = True
  
  for i in range(0, attributeDefinition.size()):
    attributeCount += 1
    definition = attributeDefinition.get(i)
    if(not attributeNamesMissing):
      name = attributeName.get(i)
    # Check if the name is missing or blank
    if(isinstance(name, NoneType) or mvar.isBlank(name)):
      attributeNamesMissing = True
      
    # No definition for this attribute was specified
    if(isinstance(definition, NoneType) or len(definition) == 0): 
      missingCount += 1
      if(not attributeNamesMissing):
        missing.append(name)
    else:
      if(mvar.isBlank(definition)):
        missingCount += 1
        if(not attributeNamesMissing):
          missing.append(name)
      else:
        continue
  
  if(missingCount > 0):
    if(attributeNamesMissing):
      output = "{} attributes (of {} attributes) do not have a definition (also name not specified in metadata)".format(missingCount, attributeCount)
    else:
      output = "These {} attributes (of {} total) do not have a definition: '{}'".format(missingCount, attributeCount, ', '.join(missing[0:maxPrint]))
    if(len(missing) > maxPrint):
      output += ", ..."
    status = "FAILURE"
    return False
  else:
    output = "All {} attributes have a definition".format(attributeCount)
    status = "SUCCESS"
    return True
    ]]></code>
   <selector>
      <name>attributeDefinitionPresent</name>
      <xpath>boolean(
          /eml/dataset/*/attributeList/attribute or
          /*/contentInfo/MD_CoverageDescription/attributeGroup/*/attribute/*/description or
          /*/contentInfo/MI_CoverageDescription/attributeGroup/*/attribute/*/description or
          /*/contentInfo/*/dimension/MI_Band/descriptor or
          /*/contentInfo/*/dimension/MD_Band/descriptor)</xpath>
   </selector>
   <selector>
      <name>attributeDefinition</name>
      <xpath>/eml/dataset/*/attributeList/attribute |
          /*/contentInfo/MD_CoverageDescription/attributeGroup/*/attribute |
          /*/contentInfo/MI_CoverageDescription/attributeGroup/*/attribute |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band 
      </xpath>
      <subSelector>
         <name>definition</name>
         <xpath>
             ./attributeDefinition |
             ./*/description |
             ./descriptor/*/text()
         </xpath>
     </subSelector>
   </selector>
   <selector>
      <name>attributeName</name>
      <xpath>
          /eml/dataset/*/attributeList/attribute |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band
      </xpath>
      <subSelector>
         <name>name</name>
         <xpath>
             ./attributeName | 
             ./*/name/code/*/text() |
             ./sequenceIdentifier/MemberName/aName/*/text() 
         </xpath>
     </subSelector>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.attributeDefinition.sufficient.1</id>
   <name>Entity Attribute Definition Sufficient</name>
   <description>Check that each attribute definition is sufficient (e.g. word count).</description>
   <type>Interoperable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  import re
  
  NoneType = type(None)
  minWordCount = 5
  maxWordCount = 20
  maxPrint = 5
  attributeNamesMissing = False
  
  # Check if definitions are present for each attribute.
  if not attributeDefinitionPresent:
    output = "No attributes are present, so unable to check if defintions are sufficient. Check skipped."
    status = "SKIP"
    return True 
    
  attributeCount = 0
  insufficient = []
  insufficientCount = 0
  
  if(isinstance(attributeName, NoneType) or attributeName.size() == 0):
   attributeNamesMissing = True

  # Check each attribute definition to see if it is missing or blank.
  for i in range(0, attributeDefinition.size()):
    attributeCount += 1
    definition = attributeDefinition.get(i)
    if(not attributeNamesMissing):
      name = attributeName.get(i)
      # Check if the attribute name is blank
      if(isinstance(name, NoneType) or mvar.isBlank(name)):
        attributeNamesMissing = True
        
    # No definition for this attribute was specified
    if(isinstance(definition, NoneType) or len(definition) == 0):
      insufficientCount += 1
      if(not attributeNamesMissing):
        insufficient.append(name)
    else:
      if(mvar.isBlank(definition)):
        insufficientCount += 1
        if(not attributeNamesMissing):
          insufficient.append(name)
        continue
          
      # If for some reason there are multiple definitions for this entity, just use the first one
      if(isinstance(definition, ArrayList)):
        definition = definition.get(0)
      # Now check the word count
      words = re.split('\s+', definition.strip())
      if(len(words) < minWordCount or len(words) > maxWordCount):
        insufficientCount += 1
        if(not attributeNamesMissing):
          insufficient.append(name)
  
  # Let the user know if defintions are missing, but don't fail the check based
  # on this (unless all are missing), as that is part of a different check
  if(insufficientCount > 0):
    # Only print the max entries allowed - otherwise the report could get unweildy  
    if(attributeNamesMissing):
      output = "{} attributes (of {} attributes) have insufficient definitions - less than {} words or greater than {} words.".format(insufficientCount, attributeCount, minWordCount, maxWordCount)
      #output = "attributeCount {}, attributeDefinition.size() {}, attributeName.size() {} ".format(attributeCount, attributeDefinition.size(), attributeName.size())
    else:
      output = "These {} attributes (of {} total) have insufficient defintions less than {} or greater than {} words: '{}'".format(len(insufficient),attributeCount, minWordCount, maxWordCount, ", ".join(insufficient[0:maxPrint]))
      if(len(insufficient) > maxPrint):
        output += ", ..."
      
    status = "FAILURE"
    return False
  else:
    output = "All {} attribute have sufficient definitions.".format(attributeCount)
    status = "SUCCESS"
    return True
    ]]></code>
   <selector>
      <name>attributeDefinitionPresent</name>
      <xpath>boolean(
          /eml/dataset/*/attributeList/attribute/attributeDefinition or
          /*/contentInfo/MD_CoverageDescription/attributeGroup/*/attribute/*/description or
          /*/contentInfo/MI_CoverageDescription/attributeGroup/*/attribute/*/description or
          /*/contentInfo/*/dimension/MI_Band/descriptor or
          /*/contentInfo/*/dimension/MD_Band/descriptor)</xpath>
   </selector>
   <selector>
      <name>attributeDefinition</name>
      <xpath>/eml/dataset/*/attributeList/attribute |
          /*/contentInfo/MD_CoverageDescription/attributeGroup/*/attribute |
          /*/contentInfo/MI_CoverageDescription/attributeGroup/*/attribute |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band 
      </xpath>
      <subSelector>
         <name>definition</name>
         <xpath>
             ./attributeDefinition |
             ./*/description |
             ./descriptor/*/text()
         </xpath>
     </subSelector>
   </selector>
   <selector>
      <name>attributeName</name>
      <xpath>
          /eml/dataset/*/attributeList/attribute |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band
      </xpath>
      <subSelector>
         <name>name</name>
         <xpath>
             ./attributeName | 
             ./*/name/code/*/text() |
             ./sequenceIdentifier/MemberName/aName/*/text()
         </xpath>
     </subSelector>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.attributeDomain.present.1</id>
   <name>Entity Attribute Domain Present</name>
   <description>Check that an attribute domain is defined for each relevant attribute.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  NoneType = type(None)
  # Check if a measurementScale is present for each attribute.
  if not attributesPresent:
    output = "No attributes present so measurement domain cannot be checked, check skipped."
    status = "SKIP"
    return True 
    
  attributeCount = 0
  missing = []
  missingCount = 0
  attributeNamesMissing = False
  maxPrint = 5
  
  # Check global variable (from XPath selector) to see if attribute names exist
  if(isinstance(attributeName, NoneType) or attributeName.size == 0):
    attributeNamesMissing = True
    
  for i in range(0, attributeDomain.size()):
    attributeCount += 1
    domain = attributeDomain.get(i)
    if(not attributeNamesMissing):
      name = attributeName.get(i)
    # Check if the attribute name is blank
    if(isinstance(name, NoneType) or mvar.isBlank(name)):
      attributeNamesMissing = True

    # No domain for this attribute was specified
    if(isinstance(domain, NoneType) or len(domain) == 0):
      missingCount += 1
      if(not attributeNamesMissing):
        missing.append(name)
    else:
      # Note: there may be more that one value returned for the domain, i.e for ISO the min and max values are returned
      if(mvar.isBlank(domain)):
        missingCount += 1
        if(not attributeNamesMissing):
          missing.append(name)
      else:
        continue
        
  if(missingCount > 0):
    if(attributeNamesMissing):
      output = "{} attributes (of {} total) do not have a measurement domain defined".format(missingCount, attributeCount)
    else:
      output = "The following {} attributes (of {} total) do not have a measurement domain specified: '{}'".format(missingCount, attributeCount, ', '.join(missing[0:maxPrint]))
      
    if(len(missing) > maxPrint):
      output += ", ..."
    status = "FAILURE"
    return False
  else:
    output = "All {} attributes have a measurement domain defined".format(attributeCount)
    status = "SUCCESS"
    return True
    ]]></code>
   <selector>
      <name>attributesPresent</name>
      <xpath>boolean(
          /eml/dataset/*/attributeList/attribute or
          /*/contentInfo/*/dimension/MI_Band or
          /*/contentInfo/*/dimension/MD_Band)</xpath>
   </selector>
   <selector>
      <name>attributeDomain</name>
      <xpath>/eml/dataset/*/attributeList/attribute |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band 
      </xpath>
      <subSelector>
         <!-- if attributes are present, one of these domain types must be present (except for dateTimeDomain) -->
         <name>domain</name>
         <xpath>
             ./measurementScale/nominal/nonNumericDomain |
             ./measurementScale/ordinal/nonNumericDomain |
             ./measurementScale/interval/numericDomain |
             ./measurementScale/ratio/numericDomain |
             ./measurementScale/dateTime/dateTimeDomain |
             ./minValue |
             ./maxValue
         </xpath>
     </subSelector>
   </selector>
   <selector>
      <name>attributeName</name>
      <xpath>
          /eml/dataset/*/attributeList/attribute |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band
      </xpath>
      <subSelector>
         <name>name</name>
         <xpath>
             ./attributeName | 
             ./sequenceIdentifier/MemberName/aName/*/text()
         </xpath>
     </subSelector>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
  <id>entity.attributeEnumeratedDomains.present.1</id>
  <name>Entity Attribute Enumerated Domains Present</name>
  <description>Enumerated domains should be defined</description>
  <type>interpretation</type>
  <level>OPTIONAL</level>
  <environment>rscript</environment>
  <code><![CDATA[
library(metadig)

# Find the <attribute> elements that have enumerated domains in them
idxs <- which(!is.na(enumerated_domains))

for (i in idxs) {
  # Check the <code> element
  for (code in codes[i]) {
    if (is.null(code) || nchar(code) <= 0) {
      failure(paste0("A code for the attribute ", names[i], " (id: ", ids[i], ") was undefined. This is either because the <code> was missing or did not contain any content."))
    }
  }

  # Check the <definition> element
  for (definition in definitions[i]) {
    if (is.null(definition) || nchar(definition) <= 0) {
      failure(paste0("A definition for the attribute ", names[i], " (id: ", ids[i], ") was undefined. This is either because the <definition> was missing or did not contain any content."))
    }
  }
}

success("All enumerated domain descriptions found had codes and definitions.")
]]></code>
  <selector>
    <name>ids</name>
    <xpath>/eml/dataset/dataTable/attributeList/attribute/@id</xpath>
  </selector>
  <selector>
    <name>names</name>
    <xpath>/eml/dataset/dataTable/attributeList/attribute</xpath>
    <subSelector>
      <name>...</name>
      <xpath>./attributeName</xpath>
    </subSelector>
  </selector>
  <selector>
    <name>enumerated_domains</name>
    <xpath>/eml/dataset/dataTable/attributeList/attribute</xpath>
    <subSelector>
      <name>...</name>
      <xpath>./measurementScale/nominal/nonNumericDomain/enumeratedDomain</xpath>
    </subSelector>
  </selector>
  <selector>
    <name>codes</name>
    <xpath>/eml/dataset/dataTable/attributeList/attribute</xpath>
    <subSelector>
      <name>...</name>
      <xpath>./measurementScale/nominal/nonNumericDomain/enumeratedDomain/codeDefinition/code</xpath>
    </subSelector>
  </selector>
  <selector>
    <name>definitions</name>
    <xpath>/eml/dataset/dataTable/attributeList/attribute</xpath>
    <subSelector>
      <name>...</name>
      <xpath>./measurementScale/nominal/nonNumericDomain/enumeratedDomain/codeDefinition/definition</xpath>
    </subSelector>
  </selector>
</check>
<check>
   <id>entity.attributeMeasurementScale.present.1</id>
   <name>Entity Attribute Measurement Scales Present</name>
   <description>Check that an attribute measurement scale exists.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  # Check if a measurementScale is present for each attribute.
  
  if not attributesPresent:
    output = "No attributes present, unable to check if attributes have a measurement scale defined."
    status = "SKIP"
    return True 
    
  attributeCount = 0
  missing = []
    
  for i in range(0, len(attributeMeasurementScale)):
    attributeCount += 1
    measurementScale = attributeMeasurementScale.get(i)
    name = attributeName.get(i)
    # No measurement scale for this attribute
    if(measurementScale == None):
      missing.append(name)
    else:
      # There should be only one measurement scale per attribute, which the quality engine will return it as a string.
      if(isinstance(measurementScale, str) or isinstance(measurementScale, unicode)):
        continue
      else:
        continue
  
  if(len(missing) > 0):
    output = "The following attributes do not have a measurement scale: '{}')".format(', '.join(missing))
    status = "FAILURE"
    return False
  else:
    output = "All {} attributes have a measurement scale".format(attributeCount)
    status = "SUCCESS"
    return True
    ]]></code>
   <selector>
      <name>attributesPresent</name>
      <xpath>boolean(/eml/dataset/*/attributeList/attribute)</xpath>
   </selector>
   <selector>
      <name>attributeMeasurementScale</name>
      <xpath>/eml/dataset/*/attributeList/attribute</xpath>
      <subSelector>
         <name>measurementScale</name>
         <xpath>./measurementScale</xpath>
     </subSelector>
   </selector>
   <selector>
      <name>attributeName</name>
      <xpath>/eml/dataset/*/attributeList/attribute</xpath>
      <subSelector>
         <name>name</name>
         <xpath>./attributeName</xpath>
     </subSelector>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.attributeName.differs.1</id>
   <name>Entity Attribute Names Differ from Definitions</name>
   <description>Check that attribute defintions are not simply the attribute name.</description>
   <type>Accessible</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  definitionIsSame = []
  missingDefinitions = []
  maxPrint = 5
  
  # For each entity, check that the attributes defined for it have unique names
  if(len(attributeDefinition) == 0):
    output = "No entity definitions found, unable to check that attribute names differ from definitions."
    status = "SKIP"
    return True
  
  # Check each definition - see if it is blank or missing, then check if it is the same as the 
  # name
  for i in range(0, len(attributeDefinition)):
    definition = attributeDefinition.get(i)
    name = attributeName.get(i)
    # No definition for this attribute
    if(definition == None):
      missingDefinitions.append(name)
      continue
    else:
      # If only one definition element for this attribute, the quality engine will return it as a string.
      # If multiples exist, it will be returned as a Java Arraylist (jython)
      if(isinstance(definition, str) or isinstance(definition, unicode)):
        if(name == definition):
          definitionIsSame.append(name)
        continue
      else:
        continue
        
  if(len(definitionIsSame) > 0):
    # Only print the max entries allowed - otherwise the report could get unweildy  
    output = "These attributes (out of {} total) have names and defintions that are the same: {}".format(len(attributeDefinition), ', '.join(definitionIsSame[0:maxPrint]))
    if(len(definitionIsSame) > maxPrint):
      output += ", ..."
    status = "FAILURE"
    return False
  else:
    output = "All {} attributes have definitions that differ from the name".format(len(attributeDefinition))
    status = "SUCCESS"
    return True 
      ]]></code>
      <selector>
         <name>attributeDefinitionPresent</name>
         <xpath>boolean(
             /eml/dataset/*/attributeList/attribute or
             /*/contentInfo/MD_CoverageDescription/attributeGroup/*/attribute/*/description or
             /*/contentInfo/MI_CoverageDescription/attributeGroup/*/attribute/*/description or
             /*/contentInfo/*/dimension/MI_Band/descriptor or
             /*/contentInfo/*/dimension/MD_Band/descriptor)</xpath>
      </selector>
      <selector>
         <name>attributeDefinition</name>
         <xpath>/eml/dataset/*/attributeList/attribute |
             /*/contentInfo/MD_CoverageDescription/attributeGroup/MD_AttributeGroup/attribute |
             /*/contentInfo/*/dimension/MI_Band |
             /*/contentInfo/*/dimension/MD_Band 
         </xpath>
         <subSelector>
            <name>definition</name>
            <xpath>
                ./*/description |
                ./descriptor/*/text() |
                ./attributeDefinition
            </xpath>
        </subSelector>
      </selector>
      <selector>
         <name>attributeName</name>
         <xpath>
             /eml/dataset/*/attributeList/attribute |
             /*/contentInfo/*/dimension/MI_Band |
             /*/contentInfo/*/dimension/MD_Band
         </xpath>
         <subSelector>
            <name>name</name>
            <xpath>
                ./attributeName | 
                ./*/name/code/*/text() |
                ./sequenceIdentifier/MemberName/aName/*/text() |
                ./sequenceIdentifier/MemberName/aName/*/text()
            </xpath>
        </subSelector>
      </selector>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.attributeNames.unique.1</id>
   <name>Entity Attribute Names Are Unique</name>
   <description>Check that attribute names are unique.</description>
   <type>Accessible</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  # Determine if elements are repeated in a list
  def duplicates(x):
    repeated = []
    nElements = len(x)
      
    for i in range(nElements):
      k = i + 1
      for j in range(k, nElements):
        if x[i] == x[j] and x[i] not in repeated:
          if(str(x[i]).strip() == ""): 
            continue
          repeated.append(str(x[i]))
    return repeated
    
  allDuplicates = []
  entityCount = 0
  attributeCount = 0
  
  # For each entity, check that the attributes defined for it have unique names
  if(len(entities) == 0):
    output = "No entities found, unable to check for duplicate attribute names."
    status = "SKIP"
    return True
  
  for i in range(0, len(entities)):
    entityCount += 1
    attrList = entities.get(i)
    # No attributes for this entity
    if(attrList == None):
      continue
    else:
      # If only one attribute, the quality engine will return it as a string. Don't
      # check for dupes (characters) in a single string, only check a list of strings
      if(isinstance(attrList, str) or isinstance(attrList, unicode)):
        attributeCount += 1
        continue
      else:
        attributeCount += len(attrList)
        allDuplicates.extend(duplicates(attrList))
        
  if(len(allDuplicates) > 0):
    output = "{} entities total. Duplicates of these attribute names were found: {}".format(entityCount, ', '.join(allDuplicates))
  else:
    output = "{} entities, {} attributes total. No duplicate attribute names were found.".format(entityCount, attributeCount)
  status = "SUCCESS"
  return True 
      ]]></code>
   <selector>
      <name>entities</name>
      <xpath>
          /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity] |
          /*/contentInfo/MD_CoverageDescription |
          /*/contentInfo/MI_CoverageDescription 
      </xpath>
      <subSelector>
          <name>attributeNames</name>
          <xpath>
              ./attributeList/attribute/attributeName |
              ./attributeDescription/RecordType |
              ./dimension/MI_Band/sequenceIdentifier/MemberName/aName//text() |
              ./dimension/MD_Band/sequenceIdentifier/MemberName/aName//text()
          </xpath>
      </subSelector>
   </selector>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.attributePrecision.present.1</id>
   <name>Entity Attribute Precision Defined</name>
   <description>Check that attributes have a measurement precision defined.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  # Check if a measurement precision is present for each attribute.
  
  if not attributesPresent:
    output = "No attributes present that require measurement precision, check skipped."
    status = "SKIP"
    return True 
    
  attributeCount = 0
  missing = []
  
  for i in range(0, len(attributePrecision)):
    attributeCount += 1
    precision = attributePrecision.get(i)
    name = attributeName.get(i)
    # No precision for this attribute was specified
    if(precision == None):
        if(name == None): 
          missing.append("name not specified")
        else:
          missing.append(name)
    else:
      # Precision value should be type int
      if(not(isinstance(precision, int))):
        if(name == None): 
          missing.append("name not specified")
        else:
          missing.append(name)
      else:
        continue
  
  if(len(missing) > 0):
    output = "The following attributes are missing a precision value or have an invalid value specified: '{}'".format(', '.join(missing))
    status = "FAILURE"
    return False
  else:
    output = "All {} attributes that require a measurement precision have one defined".format(attributeCount)
    status = "SUCCESS"
    return True
    ]]></code>
   <selector>
      <name>attributesPresent</name>
      <xpath>boolean(
          /eml/dataset/*/attributeList/attribute or
          /*/contentInfo/*/dimension/MI_Band or
          /*/contentInfo/*/dimension/MD_Band)</xpath>
   </selector>
   <selector>
      <!-- Only select attributes that require a precision, i.e. for EML 
           attribute measurement types include: "interval", "ratio", "dateTime"
      -->
      <name>attributePrecision</name>
      <xpath>
          /eml/dataset/*/attributeList/attribute/measurementScale/interval |
          /eml/dataset/*/attributeList/attribute/measurementScale/ratio |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band 
      </xpath>
      <subSelector>
         <name>domain</name>
         <xpath>
             ./precision |
             ./dateTimePrecision | 
             ./bitsPerValue
         </xpath>
     </subSelector>
   </selector>
   <selector>
      <name>attributeName</name>
      <xpath>
          /eml/dataset/*/attributeList/attribute/measurementScale/interval |
          /eml/dataset/*/attributeList/attribute/measurementScale/ratio |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band
      </xpath>
      <subSelector>
         <name>name</name>
         <xpath>
             ../../attributeName | 
             ./sequenceIdentifier/MemberName/aName/*/text() |
             ./sequenceIdentifier/MemberName/aName/*/text() |
             ./descriptor/*/text() |
             attribute::id
         </xpath>
     </subSelector>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.attributeStorageType.present.1</id>
   <name>Entity Attribute Storage Type Present</name>
   <description>Check that a storage type exits for each relevant attribute.</description>
   <type>Accessible</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  # Check if an attribute storage type is present for each attribute.
  
  if not attributesPresent:
    output = "No attributes are present, so unable to check for attribute storage type. Check skipped."
    status = "SKIP"
    return True 
    
  attributeCount = 0
  missing = []
  
  for i in range(0, len(attributeStorageType)):
    attributeCount += 1
    storageType = attributeStorageType.get(i)
    name = attributeName.get(i)
    # No storageType for this attribute was specified
    if(storageType == None or len(storageType) == 0):
        missing.append(name)
    else:
      if(mvar.isBlank(storageType)):
          missing.append(name)
      else:
        continue
  
  if(len(missing) > 0):
    output = "The following attributes do not have storage type: '{}'".format(', '.join(missing))
    status = "FAILURE"
    return False
  else:
    output = "All {} attributes have a storage type".format(attributeCount)
    status = "SUCCESS"
    return True
    ]]></code>
   <selector>
      <name>attributesPresent</name>
      <xpath>boolean(/eml/dataset/*/attributeList/attribute)
      </xpath>
   </selector>
   <selector>
      <name>attributeStorageType</name>
      <xpath>/eml/dataset/*/attributeList/attribute</xpath>
      <subSelector>
         <name>storageType</name>
         <xpath>./storageType</xpath>
     </subSelector>
   </selector>
   <selector>
      <name>attributeName</name>
      <xpath>
          /eml/dataset/*/attributeList/attribute
      </xpath>
      <subSelector>
         <name>name</name>
         <xpath>./attributeName</xpath>
     </subSelector>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.attributeUnits.present.1</id>
   <name>Entity Attribute Units Defined</name>
   <description>Check that units are defined for each attribute that should have them.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  # Check if measurement units are present for each attribute.
  
  if not attributesPresent:
    output = "No attributes present that require units, check skipped."
    status = "SKIP"
    return True 
    
  attributeCount = 0
  missing = []
  
  for i in range(0, len(attributeUnits)):
    attributeCount += 1
    units = attributeUnits.get(i)
    name = attributeName.get(i)
    # Multiple names may have been returned for an entity, especially for ISO, which has several different
    # ways to identity one (@id, descriptor, aName)
    if (name != None and isinstance(name, ArrayList)):
         name = name.get(0)
         
    # No units for this attribute was specified
    if(units == None):
        if(name == None): 
          missing.append("name not specified")
        else:
          missing.append(name)
    else:
      # Units value should be type int
      if(units == None or (isinstance(units, ArrayList) and len(units) == 0)):
        if(name == None): 
          missing.append("name not specified")
        else:
          missing.append(name)
      else:
        continue
  
  if(len(missing) > 0):
    output = "The following attributes are missing a units value or have an invalid value specified: '{}'".format(', '.join(missing))
    status = "FAILURE"
    return False
  else:
    output = "All {} attributes that require units have them defined".format(attributeCount)
    status = "SUCCESS"
    return True
    ]]></code>
   <selector>
      <name>attributesPresent</name>
      <xpath>boolean(
          /eml/dataset/dataTable/attributeList/attribute/measurementScale/interval or
          /eml/dataset/dataTable/attributeList/attribute/measurementScale/ratio or
          /*/contentInfo/*/dimension/MD_Band or
          /*/contentInfo/*/dimension/MI_Band
          )
      </xpath>
   </selector>
   <selector>
      <!-- Only select attributes that require a units, i.e. for EML 
           attribute measurement types include: "interval", "ratio", "dateTime"
           For ISO 19115*, if "minValue" or "maxValue" is specified, then Units 
           must also be specified, but any other attribute can have units.
      -->
      <name>attributeUnits</name>
      <xpath>
         /eml/dataset/dataTable/attributeList/attribute/measurementScale/interval |
         /eml/dataset/dataTable/attributeList/attribute/measurementScale/ratio |
         /*/contentInfo/*/dimension/MD_Band |
         /*/contentInfo/*/dimension/MI_Band
      </xpath>
      <subSelector>
         <name>units</name>
         <xpath>
             ./unit/* |
             ./units/*
         </xpath>
     </subSelector>
   </selector>
   <selector>
      <name>attributeName</name>
      <xpath>
          /eml/dataset/*/attributeList/attribute/measurementScale/interval |
          /eml/dataset/*/attributeList/attribute/measurementScale/ratio |
          /*/contentInfo/*/dimension/MD_Band |
          /*/contentInfo/*/dimension/MI_Band
      </xpath>
      <subSelector>
         <name>name</name>
         <xpath>
             ../../attributeName | 
             ./sequenceIdentifier/MemberName/aName/*/text() |
             ./descriptor/*/text() |
             attribute::id
         </xpath>
     </subSelector>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
	
	
	<id>check.entity.attributes.present.1</id>
	<name>Check that an each entity has a name and attributes.</name>
	<description>Check that each data entity has attributes.</description>
	<type>interpretation</type>
	<level>OPTIONAL</level>
	<environment>rscript</environment>
	<code><![CDATA[
	
check <- function() {
  library(base)
  library(metadig)
  # variables defined by MQE from the <xpath> selectors.
  # "entityName" - the names of each data entity
  # "entityType" - the type of data entity, e.g. "dataTable", "spatialVector", etc.
  # "entityAttributesPresent" - the names of each data entity
  
  outputList <- list()
  
  if(!entityPresent) {
    return(list(status="SKIP", values=list(list(value="No data table descriptions (and related attributes) are present."))))
  }

  # Skip check if no attributes present
  if(!attributesPresent) {
    return(list(status="SKIP", values=list(list(value="No data table attributes are present."))))
  }  
  
  # Assume that the check will succeed, until proven otherwise.
  # The dataset may have multiple entities, so check each one. 
  status <- "SUCCESS"
  if (length(entityName) > 0) {
    for(iEntity in 1:length(entityName)) {
      thisEntityName <- entityName[[iEntity]]
      #thisEntityType <- entityType[[iEntity]]

      if(!entityAttributesPresent[[iEntity]]) {
        outputList[[length(outputList)+1]] <- list(value=sprintf("The data table description '%s' does not have attributes defined.", thisEntityName))
      }
    }
  } else {
      # No data entities were selected by the xpath, so tell the user no check was performed.
      outputList[[length(outputList)+1]] <- list(value=sprintf("No data table descriptions are present, so uanble to check for attributes."))
      return(list(status="SKIP", values=outputList))
  }
  
  # If no output was set, then the check passed, otherwise have to check for SKIP or FAILURE
  if(length(outputList) > 0) {
    return(list(status="FAILURE", values=outputList))
  } else {
    return(list(status="SUCCESS", values=list(list(value=sprintf("All data table descriptions have attributes defined.")))))
  }
}

result <- check()
mdq_result <- list(status=result$status, output=result$values) 
]]></code>

	<!-- Don't need a subSelector for entityName, as this is required, 
		so their won't be entities that are selected that don't have this value, 
		and therefor no 'blank' values. -->
	<selector>
		<name>attributesPresent</name>
		<!-- <xpath>boolean(/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]/attributeList/attribute)</xpath> -->
		<xpath>boolean(/eml/dataset/dataTable/attributeList/attribute)</xpath>
	</selector>
	<selector>
		<name>entityPresent</name>
		<!-- <xpath>boolean(/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity])</xpath> -->
		<xpath>boolean(/eml/dataset/dataTable)</xpath>
	</selector>
	<selector>
		<name>entityName</name>
		<!-- <xpath>/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]/entityName</xpath> -->
		<xpath>/eml/dataset/dataTable/entityName</xpath>
	</selector>
	<selector>
		<name>entityType</name>
		<!-- <xpath>/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]</xpath> -->
		<xpath>/eml/dataset/dataTable</xpath>
		<subSelector>
			<name>et</name>
			<xpath>name(.)</xpath>
		</subSelector>
	</selector>
	<selector>
		<name>entityAttributesPresent</name>
		<!-- <xpath>/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]</xpath> -->
		<xpath>/eml/dataset/dataTable</xpath>
		<subSelector>
			<name>entityAttributesSubSelector</name>
			<xpath>boolean(./attributeList/attribute)</xpath>
		</subSelector>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</check>
<check>
	
	
	<id>check.attribute.definition.sufficient.1</id>
	<name>Attribute definition is sufficient.</name>
	<description>Check that each attribute definition has greater that 4 words.</description>
	<type>interpretation</type>
	<level>OPTIONAL</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  # varialbe defined by MQE from the <xpath> selectors.
  # "attributeName" - the names of each data entity
  # "attributeDefinition" - the names of each data entity
  
  minWordCount <- 4
  
   # Skip check if no dataTables
  if(!entityPresent) {
    return(list(status="SKIP", values=list(value="No data table descriptions are present, so cannot check attribute definition word counts.")))
  }

  # Skip check if no attributes present
  if(!attributesPresent) {
    return(list(status="SKIP", values=list(value="No data table description attributes are present, so cannot check attribute definition word counts.")))
  } 

  values <- list()
  attrCount <- 0
  if (length(attributeName) > 0) {
    for(iAttr in 1:length(attributeName)) {
      attrName <- tolower(as.character(attributeName[[iAttr]]))
      attrDef <- tolower(as.character(attributeDefinition[[iAttr]]))
      if(!is.na(attrName) && !is.na(attrDef)) {
        attrCount <- attrCount + 1
        wordCount <- length(unlist(strsplit(attrDef, "\\s+", perl=T)))
        if(wordCount < minWordCount) {
          values[[length(values)+1]] <- attributeName[[iAttr]]
        }
      }
    }
  }
  
  quoteStyle <- getOption("useFancyQuotes")
  options("useFanceyQuotes" = FALSE)
  
  if(length(values) > 0) {
    return(list(status="FAILURE", values=list(value=sprintf("These data table description attributes have definitions shorter than %d words: %s", minWordCount, paste(sQuote(unlist(values)), collapse=", ")))))
  } else {
    return(list(status="SUCCESS", values=list(value=sprintf("All data table description attributes have sufficient definitions"))))
  }
}

result <- check()
mdq_result <- list(status=result$status, output=list(result$values))
]]></code>

	<!-- Don't need a subSelector for entityName, as this element is required, 
		so their won't be entities that are selected that don't have this value, 
		and therefor no 'blank' values. -->
	<selector>
		<name>attributesPresent</name>
		<xpath>boolean(/eml/dataset/dataTable/attributeList/attribute)</xpath>
	</selector>
	<selector>
		<name>entityPresent</name>
		<xpath>boolean(/eml/dataset/dataTable)</xpath>
	</selector>
	<selector>
		<name>attributeName</name>
		<xpath>/eml/dataset/dataTable/attributeList/attribute</xpath>
		<subSelector>
			<name>attributeNameSubSelector</name>
			<xpath>./attributeName</xpath>
		</subSelector>
	</selector>
	<selector>
		<name>attributeDefinition</name>
		<xpath>/eml/dataset/dataTable/attributeList/attribute</xpath>
		<subSelector>
			<name>attributeDefinitionSubSelector</name>
			<xpath>./attributeDefinition</xpath>
		</subSelector>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</check>
<check>
  <id>entity.checksum.congruent.1</id>
  <name>Entity checksum and algorithm are congruent.</name>
  <description>Check that an entity checksum and algorithm are congruent with the data they describe.</description>
  <type>Interoperable</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[
  check <- function() {
    library(base)
    library(metadig)
    library(dataone)
    
    # First, find the first resource identifier. There may be multiple
    # resource identifiers described in this metadata document, but only 
    # the first will be checks, as it would take an excessive amount of time 
    # to check all res ids for all datasets.
    #firstResId = getFirstResId(resourceIdentifier)
    
    # Skip check if no resource identifiers present
    if(!resourceIdentifierPresent) {
      return(list(status="SKIP", values=list(list(value="No resource identifiers found, can't check if checksum is congruent with data."))))
    }  

    status <- "SUCCESS"
    if (length(resourceIdentifiers) > 0) {
        firstResId <- resourceIdentifiers[[1]]
    } else {
        # No data entities were selected by the xpath, so tell the user no check was performed.
        outputList[[length(outputList)+1]] <- list(value=sprintf("No data table descriptions are present, so uanble to check for attributes."))
        return(list(status="SKIP", values=outputList))
    }
    
    # Next, retrieve the objects checksum from DataONE
    # We could get the source MN baseURL from the metadata and get the checksum 
    # from there, but that would involve another call to the CN to get the MN
    # baseURL (listNodes)
    cnProd <- dataone:CNode()
    chksum <- getChecksum(dnProd, firstResId)
    
    # Compare the checksum from the metadata with the DataONE checksum
    if(checksum )
    
    # Check if the checksum value and algorithm for at least one data entity exists
    if(!checksumAndAlgorithmPresent) {
      return(list(status = "FAILURE", output = sprintf("A data resource checksum is not present.")))
    }
    
    return(list(status = "SUCCESS", output = sprintf("A data resource checksum and checksum algorithm are present (%s resources found).", checksumAlgorithmCount)))
  }
  result <- check()
  mdq_result <- list(status=result$status, output=list(list(value=result$output)))
  ]]></code>
  <selector>
    <name>checksumAndAlgorithmPresent</name>
    <xpath>boolean(/eml/dataset/*/physical/authentication[@method])
    </xpath>
  </selector>
  <selector>
    <name>checksum</name>
    <xpath>/eml/dataset/*/physical/authentication</xpath>
  </selector>
  <selector>
    <name>checksumCount</name>
    <xpath>count(/eml/dataset/*/physical/authentication)</xpath>
  </selector>
  <selector>
    <name>checksumAlgorithmCount</name>
    <xpath>count(/eml/dataset/*/physical/authentication[@method])</xpath>
  </selector>
  <selector>
    <name>resourceIdentifierPresent</name>
    <xpath>boolean(/eml/@id or
        /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]/@id or
        /eml/dataset/alternateIdentifier)
    </xpath>
  </selector>
  <selector>
    <name>resourceIdentifiers</name>
    <xpath>/eml/@id |
        /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]/@id |
        /eml/dataset/alternateIdentifier
    </xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
</check>
<check>
  <id>entity.checksum.present.1</id>
  <name>Entity checksum and algorithm are present.</name>
  <description>Check that an entity checksum and algorithm are present.</description>
  <type>Interoperable</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[
  check <- function() {
    library(base)
    
    # Check if the checksum value and algorithm for at least one data entity exists
    if(!checksumAndAlgorithmPresent) {
      return(list(status = "FAILURE", output = sprintf("An entity checksum is not present.")))
    }
    
    return(list(status = "SUCCESS", output = sprintf("An entity checksum and checksum algorithm are present (%s entities found).", checksumAlgorithmCount)))
  }
  result <- check()
  mdq_result <- list(status=result$status, output=list(list(value=result$output)))
  ]]></code>
  <selector>
    <name>checksumAndAlgorithmPresent</name>
    <xpath>boolean(/eml/dataset/*/physical/authentication[@method])
    </xpath>
  </selector>
  <selector>
    <name>checksumCount</name>
    <xpath>count(/eml/dataset/*/physical/authentication)
    </xpath>
  </selector>
  <selector>
    <name>checksumAlgorithmCount</name>
    <xpath>count(/eml/dataset/*/physical/authentication[@method])
    </xpath>
  </selector>
  <dialect>
     <name>Ecological Metadata Language</name>
     <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
     <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
     <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
</check>
<check>
   <id>entity.description.present.1</id>
   <name>Entity Description Present</name>
   <description>Check that a description is available for every entity.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  maxPrint = 5
  
  # Check if a entity description is present for each attribute.
  if not entityPresent:
    output = "No entities are  present so cannot check their descriptions, skipping this check."
    status = "SKIP"
    return True 
    
  entityCount = 0
  missing = []
    
  for i in range(0, len(entities)):
    entityCount += 1
    description = entities.get(i)
    name = entityNames.get(i)
    # No description for this entity was specified
    if(description == None):
      if(name == None): 
        missing.append("entity #{}".format(i))
      else:
        missing.append(name)
        
      if(len(missing) > maxPrint): 
        break
    else:
      # Description value should be a string or an array of strings
      if(isinstance(description, ArrayList)):
        continue
      elif(not(isinstance(description, str) or isinstance(description, unicode))):
        if(name == None): 
          missing.append("entity #{}".format(i))
        else:
          missing.append(name)
          
        if(len(missing) > maxPrint): 
          break
      else:
        continue
  
  if(len(missing) > 0):
    output = "The following entities are missing a description: '{}'".format(', '.join(missing))
    if(len(missing) > maxPrint):
      output += ", ..."
    status = "FAILURE"
    return False
  else:
    output = "All {} entities have descriptions".format(entityCount)
    status = "SUCCESS"
    return True
    ]]></code>
   <selector>
      <name>entityPresent</name>
      <xpath>boolean(
          /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity] or
          /*/contentInfo/MD_CoverageDescription or
          /*/contentInfo/MI_CoverageDescription)
      </xpath>
   </selector>
   <selector>
      <name>entities</name>
      <xpath>
          /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity] |
          /*/contentInfo/MD_CoverageDescription |
          /*/contentInfo/MI_CoverageDescription
      </xpath>
      <subSelector>
         <name>description</name>
         <xpath>
             ./entityDescription |
             ./attributeDescription/RecordType
         </xpath>
     </subSelector>
   </selector>
   <selector>
      <name>entityNames</name>
      <xpath>
          /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity] |
          /*/contentInfo/MD_CoverageDescription |
          /*/contentInfo/MI_CoverageDescription
      </xpath>
      <!-- Coverage descriptions don't really have a specific name, so use the description instead -->
      <subSelector>
         <name>names</name>
         <xpath>
             ./entityName | 
             ./attributeDescription/RecordType
         </xpath>
     </subSelector>
   </selector>

   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.format.nonproprietary.1</id>
   <name>Non proprietary entity format</name>
   <description>Check that all entities use non-propietary formats.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  global mdq_params
  
  # Check the data formats for all data entities.
  # The check fails if the specified data format matches a format marked as proprietary.
  # This check uses a reformatted copy of the DataONE format list, that is usually kept in the file 
  # /opt/local/metadig/DataONEformats.csv. This file is manually edited to mark specific formats as proprietary. This file is obtained using the DataONE 'formats'
  # service, i.e 'https://cn.dataone.org/cn/v2/formats'.
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  import csv
  
  def isProprietary(formats, thisFormat):
    for row in formats:
      if (row[4].lower().strip() in ("yes", "y", "true", "t", "1")):
        if(row[2].lower().strip() == thisFormat.lower().strip()):
          return True
        if(row[3].lower().strip() == thisFormat.lower().strip()):
          return True
        
    return False
  
  dataFilename = "DataONEformats.csv"
  formatsFile = ""
  # The checks data directory is passed via the 'mdq_params' hash
  # The filename is known only to this check.
  if('mdq_params' not in globals()):
    output = "Internal error running check, mdq_params not available to check."
    status = "ERROR"
    return False
  else:
    formatsFile = "{}/{}".format(mdq_params['metadigDataDir'], dataFilename)
  
  # Create list with the DataONE formats
  formats = []
  with open(formatsFile, 'rb') as csvfile:
      fmtreader = csv.reader(csvfile, delimiter=',', quotechar='"')
      for row in fmtreader:
        formats.append(row)

  proprietaryFound = []
  # An entity format is not present
  if 'entityFormat' not in globals() or entityFormat is None:
    output = "An entity format was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(entityFormat)):
    output = "The entity format is blank."   
    status = "FAILURE"
    return False
    
  for i in range(0, len(entityFormat)):
    # Check each entity format and see if it is in the 'proprietary' list, which
    # is based on all formats from DataONE that have been manually determined to be
    # proprietary.
    thisFormat = entityFormat.get(i)
    if(isProprietary(formats, thisFormat)):
      proprietaryFound.append(thisFormat)
      
  if(len(proprietaryFound) > 0):
    fmts = list(set([f.encode('UTF8') for f in proprietaryFound]))
    output = "These proprietary data entity formats were found: '{}' (out of {} total formats.)".format(', '.join(fmts), len(entityFormat))
    status = "FAILURE"
    return False
  else:
    output = "No proprietary data entity formats found (out of {} total formats.".format(len(entityFormat))
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>entityFormat</name>
      <xpath>
          /*/distributionInfo/MD_Distribution/distributionFormat/MD_Format/name//text() |
          /*/distributionInfo/MD_Distribution/distributor/MD_Distributor/distributorFormat/MD_Format/name//text() |
          /DryadDataFile/format/CharacterString |
          //resourceFormat/MD_Format/name | 
          /eml/dataset/*/physical/dataFormat//formatName |
          /resource/formats/format
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.format.present.1</id>
   <name>Entity Format Present</name>
   <description>Check that each entity has a format specified.</description>
   <type>Interoperable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # A entity format is not present
  if 'entityFormat' not in globals() or entityFormat is None:
    output = "A entity format was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(entityFormat)):
    output = "The entity format is blank."   
    status = "FAILURE"
    return False
  else:
    # Check if the entity format is a single string or arrayList
    if(isinstance(entityFormat, str) or isinstance(entityFormat, unicode)):
      output = "The entity format '{}' was found".format(entityFormat)
    elif (isinstance(entityFormat, ArrayList)):
      output = "The entity format '{}' was found (first of {} formats)".format(entityFormat[0].strip(), entityFormat.size())
    else:
      output = "The entity format '{}' was found)".format(entityFormat)
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>entityFormat</name>
      <xpath>
          /*/identificationInfo/MD_DataIdentification/resourceFormat/MD_Format/formatSpecificationCitation/CI_Citation/identifier/MD_Identifier/code |
          /*/identificationInfo/MD_DataIdentification/resourceFormat/MD_Format/formatSpecificationCitation/CI_Citation/title | 
          /DryadDataFile/format/CharacterString |
          //resourceFormat/MD_Format/name | 
          /eml/dataset/*/physical/dataFormat//formatName |
          /resource/formats/format
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.identifier.present.1</id>
   <name>Entity Identifier Present</name>
   <description>Check that each entity has an identifier.</description>
   <type>Findable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # An attribute definition is not present
  if 'entityIdentifier' not in globals() or entityIdentifier is None:
    output = "A entity identifier was not found."
    status = "FAILURE"
    return False
        
        
  # check if the identifier is blank
  # TODO: check the identifier namespace
  if (mvar.isBlank(entityIdentifier)):
    output = "The entity identifier is blank."
    status = "FAILURE"
    return False
  else:
    # Check if entity identifier is a single string or arrayList
    if(isinstance(entityIdentifier, str) or isinstance(entityIdentifier, unicode)):
      output = "The entity identifier '{}' was found".format(entityIdentifier)
    elif (isinstance(entityIdentifier, ArrayList)):
      output = "The entity identifier '{}' was found (first of {} identifiers)".format(entityIdentifier[0].strip(), entityIdentifier.size())
    else:
      output = "The entity identifier '{}' was found)".format(entityIdentifier)

    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>entityIdentifier</name>
      <xpath>
          /*/identificationInfo/*/citation/CI_Citation/identifier/MD_Identifier/code//text()[normalize-space()] |
          /*/identificationInfo/*/citation/CI_Citation/identifier/RS_Identifier/code//text()[normalize-space()] |
          /*/identifier |
          /eml/@id |
          /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]/@id |
          /eml/dataset/*/alternateIdentifier |
          /resource/identifier[identifierType='DOI'] |
          /resource/alternateIdentifiers/alternateIdentifier
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.identifier.resolvable.1</id>
   <name>Entity Identifier Resolvable</name>
   <description>Check that the entity identifier is resolvable.</description>
   <type>Findable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  import metadig.checks as checks
  import urllib
  import re
  
  d1_resolve_service="https://cn.dataone.org/cn/v2/resolve/"

  # An attribute definition is not present
  if 'entityIdentifier' not in globals() or entityIdentifier is None:
    output = "A entity identifier was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(entityIdentifier)):
    output = "The entity identifier is blank."
    status = "FAILURE"
    return False
  else:
    # Check if entity identifier is a single string or arrayList
    if(isinstance(entityIdentifier, str) or isinstance(entityIdentifier, unicode)):
      output = "The entity identifier '{}' was found".format(entityIdentifier)
      id = entityIdentifier
    elif (isinstance(entityIdentifier, ArrayList)):
      output = "The entity identifier '{}' was found (first of {} identifiers)".format(entityIdentifier[0].strip(), entityIdentifier.size())
      id = entityIdentifier.get(0)
    else:
      output = "The entity identifier '{}' was found)".format(entityIdentifier)
      id = entityIdentifier

  # Now check if the entity identifier is a resolvable url. If it doesn't look like a URL, then 
  # see if DataONE knows about it.
  usedD1 = False
  if(re.match("^\s*http.*:\/", id)):
    resolvable, msg = checks.isResolvable(id)
  else:
    usedD1 = True
    url = "{}{}".format(d1_resolve_service,urllib.quote(id))
    resolvable, msg = checks.isResolvable(url)
  
  if (resolvable):
    if(usedD1):
      output = '{} and is resolvable.'.format(output)
    else:
      output = '{} and is resolvable as a DataONE identifier.'.format(output)      
    status = "SUCCESS"
    return True
  else:
    output = "{}, but is not resolvable: {}".format(output, msg)      
    status = "FAILURE"
    return False
   ]]></code>
   <selector>
      <name>entityIdentifier</name>
      <xpath>
          /*/identificationInfo/*/citation/CI_Citation/identifier/MD_Identifier/code//text()[normalize-space()] |
          /*/identificationInfo/*/citation/CI_Citation/identifier/RS_Identifier/code//text()[normalize-space()] |
          /*/identifier |
          /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]/@id |
          /eml/dataset/*/alternateIdentifier |
          /eml/@id |
          /resource/identifier[identifierType='DOI'] |
          /resource/alternateIdentifiers/alternateIdentifier
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.identifierType.present.1</id>
   <name>Entity Identifier Type Present</name>
   <description>Check that an entity identifier type exists.</description>
   <type>Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import metadig.variable as mvar

  # An attribute definition is not present
  if 'resourceIdentifierType' not in globals() or resourceIdentifierType is None:
    output = "A entity identifier type was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(resourceIdentifierType)):
    output = "The entity identifier type is blank."   
    status = "FAILURE"
    return False
  else:
    # Check if resource identifier type is a single string or arrayList
    if(isinstance(resourceIdentifierType, str) or isinstance(resourceIdentifierType, unicode)):
      output = "The entity identifier type '{}' was found".format(resourceIdentifierType)
    else:
      output = "The entity identifier type '{}' was found".format(resourceIdentifierType[0])
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>resourceIdentifierType</name>
      <xpath>/eml/@system |
         /resource/identifier/@identifierType |
         /*/identificationInfo/*/citation/CI_Citation/identifier/MD_Identifier/codeSpace//text()[normalize-space()] |
         /*/identificationInfo/*/citation/CI_Citation/identifier/MD_Identifier/authority//text()[normalize-space()]
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
	
	
	<id>entity.items.present.1</id>
	<name>Check that an entity name, description, format, size, checksum is present</name>
	<description>Check that each data entity has a name, description, format, size, checksum.</description>
	<type>interpretation</type>
	<level>INFO</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  library(metadig)
  # variables defined by MQE from the <xpath> selectors.
  # "entityName" - the names of each data entity
  # "entityDescriptionPresent" - is the names of each data entity present
  # "entityFormatPresent" - is the description for the entity present
  # "entitySizePresent" - is the description for the entity present
  # 'entityChecksumPresent" - is the checksum value (e.g. SHA1, MD5) of the entity present
  
  outputList <- list()
  # Assume that the check will succeed, until proven otherwise.
  # The dataset may have multiple entities, so check each one. All entities are checked
  # so mdqe can report to the user about all entities, not just the one that failed.
  # Set quote style to simple quotes
  skip <- FALSE
  if (length(entityName) > 0) {
    for(iEntity in 1:length(entityName)) {
      # Assume that the check will succeed, until proven otherwise.
      undefEl <- list()
      thisEntityType <- entityType[[iEntity]]
      
      if(!isDefined("entityName", entityName, iEntity)) {
        undefEl[[length(undefEl)+1]] <- "name"
        thisEntityName <- sprintf("%d", iEntity)
      } else {
        thisEntityName <- sprintf("%s", entityName[[iEntity]])
      }
      
      if(!isTrueVal("entityFormatPresent", entityFormatPresent, iEntity)) {
        undefEl[[length(undefEl)+1]] <- "format"
      }

      if(!isTrueVal("entitySizePresent", entitySizePresent, iEntity)) {
        undefEl[[length(undefEl)+1]] <- "size"
      }

      if(!isTrueVal("entityDescriptionPresent", entityDescriptionPresent, iEntity)) {
        undefEl[[length(undefEl)+1]] <- "description"
      }

      if(!isTrueVal("entityChecksumPresent", entityChecksumPresent, iEntity)) {
        undefEl[[length(undefEl)+1]] <- "checksum (authentication)"
      }

      # Store output for this entity if it didn't pass a check. We will only report on entities that don't have
      # all the elements we are checking for.
      if(length(undefEl) > 0) {
        outputList[[length(outputList)+1]] <- list(value=sprintf("Description for '%s' is missing these items: %s", thisEntityName, paste(sQuote(unlist(undefEl)), collapse=", ")))
      }
    }
  } else {
      # No data entities were selected by the xpath, so tell the user no check was performed and set status to SKIP
      outputList[[length(outputList)+1]] <- list(value=sprintf("No data descriptions are present, so unable to check entity 'name', 'format', etc"))
      skip <- TRUE
  }
  
  # If nt output was set, then the check passed, otherwise have to check for SKIP or FAILURE
  status <- "FAILURE"
  if(length(outputList) > 0) {
    if (skip) status <- "SKIP"
    return(list(status=status, values=outputList))
  } else {
    outputList[[length(outputList)+1]] <- list(value=sprintf("All data description sections have a name, description, format, size and checksum"))
    return(list(status="SUCCESS", values=outputList))
  }
}

result <- check()
mdq_result <- list(status=result$status, output=result$values) 
]]></code>

	<!-- Don't need a subSelector for entityName, as this element is required, 
		so their won't be entities that are selected that don't have this value, 
		and therefor no 'blank' values. -->
	<selector>
		<name>entityName</name>
		<xpath>/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]/entityName</xpath>
	</selector>
	<selector>
		<name>entityType</name>
		<xpath>/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]</xpath>
		<subSelector>
		<name>et</name>
		<xpath>name(.)</xpath>
		</subSelector>
	</selector>
	<selector>
		<name>entityDescriptionPresent</name>
		<xpath>/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]</xpath>
		<subSelector>
			<name>entityDescriptionSubSelector</name>
			<xpath>boolean(./entityDescription)</xpath>
		</subSelector>
	</selector>
	<selector>
		<name>entitySizePresent</name>
		<xpath>/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]</xpath>
		<subSelector>
			<name>entitySizeSubSelector</name>
			<xpath>boolean(./physical/size)</xpath>
		</subSelector>
	</selector>
	<selector>
		<name>entityFormatPresent</name>
		<xpath>/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]</xpath>
		<subSelector>
			<name>entityFormatPresentSubSelector</name>
			<xpath>boolean(./physical/dataFormat)</xpath>
		</subSelector>
	</selector>
	<selector>
		<name>entityChecksumPresent</name>
		<xpath>/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]</xpath>
		<subSelector>
			<name>entityChecksumPresentSubSelector</name>
			<xpath>boolean(./physical/authentication)</xpath>
		</subSelector>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</check>
<check>
	
	
	<id>check.entity.name.length.1</id>
	<name>Entity name length</name>
	<description>Length of entity name is less than 100 characters.</description>
	<type>identification</type>
	<level>OPTIONAL</level>
	<environment>rscript</environment>
	<code><![CDATA[
    check <- function() {
      library(base)
      # Variables defined by MQE
      # "entityCount" - the number of entities in the dataset
      # "entityNames" - the entity names for the dataset entities (dataTables)
      maxEntityNameLength <- 100
      
      # Skip check if no dataTables
      if(!entityPresent) {
        return(list(status="SKIP", output = "No data table descriptions are present, so unable to check entity name lenghts."))
      }
      
      # Assume that the check will pass, but one problem will cause failure
      status <- "SUCCESS"
      if(is.null(entityNames) || entityCount == 0) {
        return(list(status = "FAILURE", output = sprintf("No data table description names found, so the check is unable to determine entity name lengths.")))
      }
      
      # The dataset may have multiple entities, so check each one
      errEntityNames <- list()
      for (iEntity in 1:entityCount) {
        thisEntityName <- entityNames[[iEntity]]
        if (nchar(thisEntityName) > maxEntityNameLength) {
          errEntityNames[[length(errEntityNames)+1]] <- thisEntityName
        }
      }
      
      if(length(errEntityNames) > 0) {
         if(length(errEntityNames) > 1) {
           msg <- sprintf("%d data table descriptions have names longer than %d characters.", length(errEntityNames), maxEntityNameLength)
         } else {
           msg <- sprintf("%d data table descriptions has a name longer that %d characters.", length(errEntityNames), maxEntityNameLength)
         }
         return(list(status = "FAILURE", output = msg))
      } else {
        return(list(status = "SUCCESS", output = sprintf("All data table description names are less that %s characters." , maxEntityNameLength))) 
      }
    }
    result <- check()
    mdq_result <- list(status=result$status, output=list(list(value=result$output)))
        ]]></code>
        
    <selector>
		<name>entityPresent</name>
	    <xpath>boolean(/eml/dataset/dataTable)</xpath>
	</selector>
	<selector>
		<name>entityCount</name>
		<xpath>count(/*[local-name() = 'eml']/dataset/dataTable)</xpath>
	</selector>
	<selector>
		<name>entityNames</name>
		<xpath>/*[local-name() = 'eml']/dataset/dataTable</xpath>
		<subSelector>
			<name>entityNamesSubSelector</name>
			<xpath>./entityName</xpath>
		</subSelector>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</check>
<check>
   <id>entity.name.present.1</id>
   <name>Entity Names Present</name>
   <description>Check that a name is specified for every entity.</description>
   <type>Interoperable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  maxPrint = 5
  # Check if a name is present for each entity.
  if not entityPresent:
    output = "No entities are  present so cannot check their name, skipping this check."
    status = "SKIP"
    return True 
    
  entityCount = 0
  missing = []
    
  for i in range(0, len(entities)):
    entityCount += 1
    name = entities.get(i)
    # No name for this entity was specified
    if(name == None):
      missing.append("entity #{}".format(i))
      if(len(missing) > maxPrint): 
        continue
    else:
      # Description value should be a string or an array of strings
      if(isinstance(name, ArrayList)):
        continue
      elif(not(isinstance(name, str) or isinstance(name, unicode))):
        if(name == None): 
          if(len(missing) > maxPrint):
            missing.append("entity #{}".format(i))
        else:
          missing.append(name)
      else:
        continue
  
  if(len(missing) > 0):
    output = "The following entities are missing a name: '{}'".format(', '.join(missing))
    if(len(missing) > maxPrint):
      output += ", ..."
    status = "FAILURE"
    return False
  else:
    output = "All {} entities have names".format(entityCount)
    status = "SUCCESS"
    return True
    ]]></code>
   <selector>
      <name>entityPresent</name>
      <xpath>boolean(
          /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity] or
          /*/contentInfo/MD_CoverageDescription or
          /*/contentInfo/MI_CoverageDescription)
      </xpath>
   </selector>
   <selector>
      <name>entities</name>
      <xpath>
          /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity] |
          /*/contentInfo/MD_CoverageDescription |
          /*/contentInfo/MI_CoverageDescription
      </xpath>
      <subSelector>
         <name>name</name>
         <xpath>
             ./entityName |
             ./attributeDescription/RecordType
         </xpath>
     </subSelector>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
	
	
	<id>check.entity.present.2</id>
	<name>Data entity present check.</name>
	<description>Check that a data entity is present.</description>
	<type>interpretation</type>
	<level>OPTIONAL</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  library(metadig)
  # variables defined by MQE from the <xpath> selectors.
  # "entityPresent" - is a data entity description present?
  
  outputList <- list()
  status <- "SUCCESS"
  # Assume that the check will succeed, until proven otherwise.
  # The dataset may have multiple entities, so check each one. 
  if(entityPresent) {
    if (entityCount == 1) {
      outputList[[length(outputList)+1]] <- list(value=sprintf("1 data entity description is present."))
    } else {
      outputList[[length(outputList)+1]] <- list(value=sprintf("%d data entity descriptions are present", entityCount))
    }
    return(list(status=status, values=outputList))
  } else {
    outputList[[length(outputList)+1]] <- list(value=sprintf("No data entity descriptions are present."))
    return(list(status="FAILURE", values=outputList))
  }
}

result <- check()
mdq_result <- list(status=result$status, output=result$values) 
]]></code>
	<selector namespaceAware="true">
		<name>entityPresent</name>
		<xpath>boolean(
		       /*[local-name() = 'eml']/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity] or
		       /*/gmd:distributionInfo/gmd:MD_Distribution)
		</xpath>
	</selector>
	<selector namespaceAware="true">
		<name>entityCount</name>
		<xpath>count(
			/*[local-name() = 'eml']/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity] |
			/*/gmd:distributionInfo/gmd:MD_Distribution)
		</xpath>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
	<dialect>
		<name>ISO 19115 and ISO 19115-2</name>
		<xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
	</dialect>
</check>
<check>
	
	
	<id>check.entity.present.1</id>
	<name>Data entity present check.</name>
	<description>Check that a data entity is present.</description>
	<type>interpretation</type>
	<level>OPTIONAL</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  library(metadig)
  # variables defined by MQE from the <xpath> selectors.
  # "entityPresent" - is a data entity present?
  
  outputList <- list()
  status <- "SUCCESS"
  # Assume that the check will succeed, until proven otherwise.
  # The dataset may have multiple entities, so check each one. 
  if(entityPresent) {
    if (entityCount == 1) {
      outputList[[length(outputList)+1]] <- list(value=sprintf("1 data entity is present."))
    } else {
      outputList[[length(outputList)+1]] <- list(value=sprintf("%d data entities are present", entityCount))
    }
    return(list(status=status, values=outputList))
  } else {
    outputList[[length(outputList)+1]] <- list(value=sprintf("No data entities are present."))
    return(list(status="FAILURE", values=outputList))
  }
}

result <- check()
mdq_result <- list(status=result$status, output=result$values) 
]]></code>
	<selector>
		<name>entityPresent</name>
		<xpath>boolean(/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity])</xpath>
	</selector>
	<selector>
		<name>entityCount</name>
		<xpath>count(/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity])</xpath>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</check>
<check>
   <id>entity.qualityDescription.present.1</id>
   <name>Entity Data Quality Description Present</name>
   <description>Check that a description of data quality practices and protocols used is present.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
   global output
   global status
   
   import metadig.variable as mvar

   # A data quality description is not present
   if 'dataQualityDescription' not in globals() or dataQualityDescription is None:
     output = "A data quality description was not found."
     status = "FAILURE"
     return False
         
   if (mvar.isBlank(dataQualityDescription)):
     output = "The data quality description is blank."
     status = "FAILURE"
     return False
   else:
     output = "A data quality description was found."
     status = "SUCCESS"
     return True
      ]]></code>
   <selector>
      <name>dataQualityDescription</name>
      <xpath>/*/dataQualityInfo/DQ_DataQuality/report//text() |
          /eml/dataset/methods/methodStep/qualityControl/description//text() |
          /eml/dataset/methods/methodStep/qualityControl/description//text() |
          /eml/dataset/*/methods/methodStep/qualityControl/description//text() |
          /eml/dataset/attributeList/attribute/methods/methodStep/qualityControl/description//text()
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>entity.type.present.1</id>
   <name>Entity Type Present</name>
   <description>Check that an entity type exists.</description>
   <type>Interoperable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  # Check if an entity type is present
  # Note: for EML, this checks looks for the presence of one of the
  # entity type elements, not an element value that specifies the entity type
  # as a string. When the quality engine is upgraded to an XPath implementation 
  # supporting XPath 2.0 'name()' function, then the entity name can be returned.
  # For now, just the presence or absence is checked for with a boolean operator.
  if ('entityTypePresent' in globals() and entityTypePresent is not None and entityTypePresent):
    status = "SUCCESS"
    output = "An entity type was found"
    return True 
  else:
    output = "An entity type was not found"
    status = "FAILURE"
    return False
    
      ]]></code>
   <selector>
      <name>entityTypePresent</name>
      <xpath>boolean(/*/metadataScope/MD_MetadataScope/resourceScope/MD_ScopeCode |
         /*/type |
         /*/hierarchyLevel/MD_ScopeCode |
         /eml/dataset/dataTable | 
         /eml/dataset/otherEntity | 
         /eml/dataset/spatialVector |
         /eml/dataset/spatialRaster | 
         /eml/dataset/view |
         /resource/resourceType/@resourceTypeGeneral)
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
    <dialect>
        <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
        <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
    </dialect>
    <dialect>
        <name>ISO 19115-1 / ISO 19115-3</name>
        <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
    </dialect>
</check>
<check>
  <id>enumerated.domains.1</id>
  <name>Enumerated domain</name>
  <description>Enumerated domains should be defined</description>
  <type>interpretation</type>
  <level>OPTIONAL</level>
  <environment>rscript</environment>
  <code><![CDATA[
library(metadig)

# Find the <attribute> elements that have enumerated domains in them
idxs <- which(!is.na(enumerated_domains))

for (i in idxs) {
  # Check the <code> element
  for (code in codes[i]) {
    if (is.null(code) || nchar(code) <= 0) {
      failure(paste0("A code for the attribute ", names[i], " (id: ", ids[i], ") was undefined. This is either because the <code> was missing or did not contain any content."))
    }
  }

  # Check the <definition> element
  for (definition in definitions[i]) {
    if (is.null(definition) || nchar(definition) <= 0) {
      failure(paste0("A definition for the attribute ", names[i], " (id: ", ids[i], ") was undefined. This is either because the <definition> was missing or did not contain any content."))
    }
  }
}

success("All enumerated domain descriptions found had codes and definitions.")
]]></code>
  <selector>
    <name>ids</name>
    <xpath>/eml/dataset/dataTable/attributeList/attribute/@id</xpath>
  </selector>
  <selector>
    <name>names</name>
    <xpath>/eml/dataset/dataTable/attributeList/attribute</xpath>
    <subSelector>
      <name>...</name>
      <xpath>./attributeName</xpath>
    </subSelector>
  </selector>
  <selector>
    <name>enumerated_domains</name>
    <xpath>/eml/dataset/dataTable/attributeList/attribute</xpath>
    <subSelector>
      <name>...</name>
      <xpath>./measurementScale/nominal/nonNumericDomain/enumeratedDomain</xpath>
    </subSelector>
  </selector>
  <selector>
    <name>codes</name>
    <xpath>/eml/dataset/dataTable/attributeList/attribute</xpath>
    <subSelector>
      <name>...</name>
      <xpath>./measurementScale/nominal/nonNumericDomain/enumeratedDomain/codeDefinition/code</xpath>
    </subSelector>
  </selector>
  <selector>
    <name>definitions</name>
    <xpath>/eml/dataset/dataTable/attributeList/attribute</xpath>
    <subSelector>
      <name>...</name>
      <xpath>./measurementScale/nominal/nonNumericDomain/enumeratedDomain/codeDefinition/definition</xpath>
    </subSelector>
  </selector>
</check>
<check>
  <id>geographic.description.present.2</id>
  <name>Geographic coverage description</name>
  <description>Geographic coverage description should be present at the dataset level.</description>
  <type>discovery</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code>
    library(metadig)
    
    if (descriptionPresent) {
      success("A textual description of the geographic coverage of this dataset is present.")
    } else {
      failure("A textual description of the geographic coverage of this dataset is not present.")
    }
  </code>
  <selector namespaceAware="true">
    <name>descriptionPresent</name>
    <xpath>boolean(
        /eml/dataset/coverage/geographicCoverage/geographicDescription or
        /*/identificationInfo/*/extent/EX_Extent/description or
        /*/spatial)
    </xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
    <name>Dryad Data Package and Data File Modules</name>
    <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
  </dialect>
  <dialect>
    <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
    <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
</check>
<check>
  <id>check.geographic.description.1</id>
  <name>Geographic coverage description</name>
  <description>Geographic coverage description should be present at the dataset level.</description>
  <type>discovery</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code>
    library(metadig)
    
    if (length(description) >= 1) {
      success("A textual description of the geographic coverage of this dataset is present.")
    } else {
      failure("A textual description of the geographic coverage of this dataset is not present.")
    }
  </code>
  <selector>
    <name>description</name>
    <xpath>/eml/dataset/coverage/geographicCoverage/geographicDescription</xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
</check>
<check>
  <id>check.identifier.is.doi.1</id>
  <name>DOI Identifier</name>
  <description>Identifier should be a DOI.</description>
  <type>identification</type>
  <level>OPTIONAL</level>
  <environment>rscript</environment>
  <code><![CDATA[
library(stringr)

# Alter the FAILURE message if the source member node is ADC. 

if (!exists("authoritativeMemberNode") || is.null(authoritativeMemberNode)) {
  warningMsg <- "The identifier '%s' does not look like a DOI.."
} else {
  if (authoritativeMemberNode == "urn:node:ARCTIC" || authoritativeMemberNode == "urn:node:mnTestARCTIC") {
    warningMsg <- "The identifier '%s' does not look like a DOI. Note that a DOI will be assigned to this dataset when it has been reviewed and approved."
  } else {
    warningMsg <- "The identifier '%s' does not look like a DOI."
  }
}

# If the system metadata was provided to the quality engine, then use the metadata pid there.
if (exists("systemMetadataPid") || !is.null(systemMetadataPid)) {
  identifier <- systemMetadataPid
}

if (length(identifier) == 0) {
  mdq_result <- list(status = "FAILURE",
                     output = list(list(value = "No identifier was found.")))
} else if (length(identifier) > 1) {
  mdq_result <- list(status = "FAILURE",
                     output = list(list(value = "More that one identifier was found when a single one was expected.")))
} else {
  doi_patterns = c("doi:10\\..+",
                   "http(s)?:\\/\\/(dx.)?doi\\.org\\/(doi\\:)?10\\..+")

  is_doi = any(str_detect(identifier, doi_patterns))

  if (is_doi) {
    mdq_result <- list(status = "SUCCESS",
                       output = list(list(value = sprintf("The identifier '%s' looks like a DOI.", identifier))))
  } else {
    mdq_result <- list(status = "FAILURE",
                       output = list(list(value = sprintf(warningMsg, identifier))))
  }
}
  ]]></code>
   <selector>
    <name>identifier</name>
    <xpath>
    (/eml/@packageId)
    |
    (/*/fileIdentifier/CharacterString)
    </xpath>
  </selector>
</check>
<check>
  <id>check.identifier.is.present.1</id>
  <name>Identifier present</name>
  <description>Identifier should be present.</description>
  <type>identification</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[
if (length(identifier) > 0) {
mdq_result <- list(status = "SUCCESS",
                   output = list(list(value = "An identifier is present.")))
} else {
mdq_result <- list(status = "FAILURE",
                   output = list(list(value = "An identifier is not present.")))
}
    ]]>
  </code>
  <selector>
    <name>identifier</name>
    <xpath>
    (/eml/@packageId)
    |
    (/*/fileIdentifier/CharacterString)
    </xpath>
  </selector>
</check>
<check>
	
	
	<id>check.lookup.award.1</id>
	<name>Award lookup</name>
	<description>Look-up award information from NSF using award id</description>
	<type>identification</type>
	<level>METADATA</level>
	<environment>Java</environment>
	<code>edu.ucsb.nceas.mdqengine.processor.AwardLookupCheck</code>
	<selector>
		<name>awards</name>
		<xpath>/*[local-name() = 'eml']/dataset/project/funding//text()[normalize-space()]</xpath>
	</selector>
</check>
<check>
	
	
	<id>check.lookup.group.1</id>
	<name>Group lookup</name>
	<description>Look up group information from CN using system metadata info</description>
	<type>identification</type>
	<level>METADATA</level>
	<environment>Java</environment>
	<code>edu.ucsb.nceas.mdqengine.processor.GroupLookupCheck</code>
	<!-- not used -->
	<selector>
		<name>title</name>
		<xpath>/eml/dataset/title</xpath>
	</selector>
</check>
<check>
   <id>metadata.identifier.present.1</id>
   <name>Metadata Identifier Present</name>
   <description>Check that a metadata identifier exists.</description>
   <type>Findable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  import metadig.variable as mvar

  # These global variables are read by the quality engine when
  # the check returns
  global output
  global status

  # check if metadata identifier is present
  if 'metadataIdentifier' not in globals() or metadataIdentifier is None:
    output = "A metadata identifier was not found."
    status = "FAILURE"
    return False
    
  if (mvar.isBlank(metadataIdentifier)):
    output = "The metadata identifier is blank."
    status = "FAILURE"
    return False
  else:
    output = "The metadata identifier '{}' was found.".format(metadataIdentifier.strip())
    status = "SUCCESS"
    return True 
    
  # Check if the identifier is an authority id (DOI, ARK, CURIE, RRID)
  # doi:, https://doi.org/, urn, http:, https:, ark:, RRID:
   ]]></code>
   <selector>
      <name>metadataIdentifier</name>
      <xpath>/*/metadataIdentifier/MD_Identifier |
             /*/fileIdentifier |
             /eml/@packageId
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>metadata.identifier.resolvable.1</id>
   <name>Metadata Identifier Resolvable</name>
   <description>Check that the metadata identifier exists and is resolvable.</description>
   <type>Accessible</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  import metadig.variable as mvar
  import metadig.checks as checks

  # These global variables are read by the quality engine when
  # the check returns
  global output
  global status

  # check if metadata identifier is present
  if 'metadataIdentifier' not in globals() or metadataIdentifier is None:
    output = "A metadata identifier was not found."
    status = "FAILURE"
    return False
    
  if (mvar.isBlank(metadataIdentifier)):
    output = "The metadata identifier is blank."
    status = "FAILURE"
    return False
  else:
    # TODO: Check if the identifier is an authority id (DOI, ARK, CURIE, RRID)
    # doi:, https://doi.org/, urn, http:, https:, ark:, RRID:
  
    # Check if the identifier is resolvable
    try:
      (resolvable, msg) = checks.isResolvable(metadataIdentifier.strip())
    except Exception:
      output = 'Error resolving metadata identifier "{}"'.format(metadataIdentifier.strip())
      status = "ERROR"
      return False 
    
    if (resolvable):
      output = 'The metadata identifier "{}" is resolvable.'.format(metadataIdentifier.strip())
      status = "SUCCESS"
      return True
    else:
      output = 'The metadata identifier "{}" is not resolvable'.format(metadataIdentifier.strip(), msg)      
      status = "FAILURE"
      return False
   ]]></code>
   <selector>
      <name>metadataIdentifier</name>
      <xpath>/*/metadataIdentifier/MD_Identifier |
             /*/fileIdentifier/*/text() |
             /eml/@packageId
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>metadata.license.present.1</id>
   <name>Metadata License Present</name>
   <description>Check that a metadata license exists and is controlled by a vocabulary.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
         
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # A metadata license is not present
  if 'metadataLicense' not in globals() or metadataLicense is None:
    output = "A metadata license was not found."
    status = "FAILURE"
    return False

  if (mvar.isBlank(metadataLicense)):
    output = "The metadata license is blank."   
    status = "FAILURE"
    return False
  else:
    # Check if metadata license is a single string or arrayList
    if(isinstance(metadataLicense, str) or isinstance(metadataLicense, unicode)):
      output = "The metadata license '{}' was found".format(metadataLicense)
    elif (isinstance(metadataLicense, ArrayList)):
      output = "The metadata license '{}' was found (first of {} licenses)".format(metadataLicense[0].strip(), metadataLicense.size())
    else:
      output = "The metadata license '{}' was found)".format(metadataLicense)
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>metadataLicense</name>
      <!--
      The Xpaths for the ISO metadataConstraints check for just the MD_RestrictionCode of 'license', but may have to be made more 
      open, i.e. check for 'licenceUnrestricted' or 'intellectualPropertyRights'. See https://geo-ide.noaa.gov/wiki/index.php?title=ISO_19115_and_19115-2_CodeList_Dictionaries#MD_RestrictionCode
      for more details.
      -->
      <xpath>
        /eml/dataset/licensed/identifier |
        /*/rights |
        /resource/rightsList/rights |
        /*/metadataConstraints/MD_LegalConstraints/accessConstraints/MD_RestrictionCode |
        /*/metadataConstraints/MD_LegalConstraints/useConstraints/MD_RestrictionCode |
        /*/metadataConstraints/MD_LegalConstraints/otherConstraints/MD_RestrictionCode
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language 2.1, 2.2.0</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
	
	
	<id>check.methods.present.2</id>
	<name>Methods present</name>
	<description>All datasets should contain a methods section, and it's description should have sufficient length (7 words).</description>
	<type>interpretation</type>
	<level>REQUIRED</level>
	<environment>rscript</environment>
	<code><![CDATA[
library(metadig)
library(base)

check <- function() {
    badStepCount <- 0
    # Recommended minimum word count
    minWordCount <- 7
    # Recommended max word count
    maxWordCount <- 20
    
    # Check that a <methods> section is present for the dataset.
    if(!methodsPresent) {
        return(list(status = "FAILURE", output = sprintf("A methods section is not present, so unable to check method step descriptions word count.")))
    }

    # For each method step that has a description, check if the word count is adequate.
    if (methodStepDescriptionCount > 0) {
        for(iDescr in 1:length(methodStepDescription)) {
            thisDescr <- methodStepDescription[[iDescr]]
            if(is.null(thisDescr) || class(thisDescr) != "character" || grepl("^\\s*$", thisDescr)) {
              next;
            } else {
                wordCount <- length(unlist(strsplit(thisDescr, "\\s+", perl=T)))
                if (wordCount < minWordCount) {
                    badStepCount <- badStepCount + 1
                }
            }
        }
    } else {
        # No methodSteps defined (shouldn't happen, it's a required element for methods)
        return(list(status="FAILURE", output=sprintf("No method step descriptions are present.")))
    }
    
    # Report the total number of method step descriptions that aren't of sufficient length.
    if (badStepCount > 0) {
        return(list(status="FAILURE", output=sprintf("%d of %d method step descriptions have word counts less than the recommended count (word count > %d).", badStepCount, methodStepDescriptionCount, minWordCount)))
    } else {
        return(list(status="SUCCESS", output=sprintf("All %d method step descriptions are sufficient (word count > %d).", methodStepCount, minWordCount)))
    }
}
result <- check()
mdq_result <- list(status=result$status, output=list(list(value=result$output)))
]]></code>
	<selector namespaceAware="true">
		<name>methodsPresent</name>
		<xpath>boolean(
			/*[local-name() = 'eml']/dataset/methods or
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage
			)</xpath>
	</selector>
	<selector namespaceAware="true">
		<name>methodStepCount</name>
		<xpath>count(
			/*[local-name() = 'eml']/dataset/methods/methodStep |
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage/gmd:LI_Lineage/gmd:processStep/gmd:LI_ProcessStep |
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage/gmd:LI_Lineage/gmd:processStep/gmi:LE_ProcessStep |
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage/gmd:LI_Lineage/gmd:source/gmd:LI_Source/gmd:sourceStep/gmd:LI_ProcessStep |
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage/gmd:LI_Lineage/gmd:source/gmd:LE_Source/gmd:sourceStep/gmd:LE_ProcessStep
			)</xpath>
	</selector>
	<selector namespaceAware="true">
		<name>methodStepDescriptionCount</name>
		<xpath>count(
			/*[local-name() = 'eml']/dataset/methods/methodStep/description |
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage/gmd:LI_Lineage/gmd:processStep/gmd:LI_ProcessStep/gmd:description |
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage/gmd:LI_Lineage/gmd:processStep/gmi:LE_ProcessStep/gmd:description |
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage/gmd:LI_Lineage/gmd:source/gmd:LI_Source/gmd:sourceStep/gmd:LI_ProcessStep/gmd:description |
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage/gmd:LI_Lineage/gmd:source/gmd:LE_Source/gmd:sourceStep/gmd:LE_ProcessStep/gmd:description
			)</xpath>
	</selector>
	<selector namespaceAware="true">
		<name>methodStepDescription</name>
        <!-- use string-join to gather all descendant text nodes, when Java supports Xpath 2.0 -->
		<xpath>/*[local-name() = 'eml']/dataset/methods/methodStep/description//text()[normalize-space()] |
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage/gmd:LI_Lineage/gmd:processStep/gmd:LI_ProcessStep/gmd:description//text()[normalize-space()] |
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage/gmd:LI_Lineage/gmd:processStep/gmi:LE_ProcessStep/gmd:description//text()[normalize-space()] |
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage/gmd:LI_Lineage/gmd:source/gmd:LI_Source/gmd:sourceStep/gmd:LI_ProcessStep/gmd:description//text()[normalize-space()] |
			/*/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:lineage/gmd:LI_Lineage/gmd:source/gmd:LE_Source/gmd:sourceStep/gmd:LE_ProcessStep/gmd:description//text()[normalize-space()]
		</xpath>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
	<dialect>
		<name>ISO 19115 and ISO 19115-2</name>
		<xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
	</dialect>
</check>
<check>
	
	
	<id>check.methods.present.1</id>
	<name>Methods present</name>
	<description>All datasets should contain a methods section, or a link to a separate methods doc.</description>
	<type>interpretation</type>
	<level>REQUIRED</level>
	<environment>rscript</environment>
	<code><![CDATA[
library(metadig)
library(base)

check <- function() {
    badStepCount <- 0
    # Recommended minimum word count
    minWordCount <- 7
    # Recommended max word count
    maxWordCount <- 20
    
    # Check that a <methods> section is present for the dataset.
    if(!methodsPresent) {
        return(list(status = "FAILURE", output = sprintf("A methods section is not present, so unable to check method step descriptions word count.")))
    }

    if (methodStepCount > 0) {
        for(iDescr in 1:length(methodStepDescription)) {
            thisDescr <- methodStepDescription[[iDescr]]
            if(is.null(thisDescr) || class(thisDescr) != "character") {
              badStepCount <- badStepCount + 1
            } else {
                wordCount <- length(unlist(strsplit(thisDescr, "\\s+", perl=T)))
                if (wordCount < minWordCount) {
                    badStepCount <- badStepCount + 1
                }
            }
        }
    } else {
        # No methodSteps defined (shouldn't happen, it's a required element for methods)
        return(list(status="FAILURE", output=sprintf("No method step descriptions are present.")))
    }
    
    if (badStepCount > 0) {
        return(list(status="FAILURE", output=sprintf("%d of %d method step descriptions have fewer than the minimum recommended %d words", badStepCount, methodStepCount, minWordCount)))
    } else {
        return(list(status="SUCCESS", output=sprintf("All method step descriptions are sufficient (> %d words).", minWordCount)))
    }
}
result <- check()
mdq_result <- list(status=result$status, output=list(list(value=result$output)))
]]></code>
	<selector>
		<name>methodsPresent</name>
		<xpath>boolean(/eml/dataset/methods)</xpath>
	</selector>
	<selector>
		<name>methodStepCount</name>
		<xpath>count(/eml/dataset/methods/methodStep)</xpath>
	</selector>
	<selector>
		<name>methodStepDescription</name>
		<xpath>/eml/dataset/methods/methodStep</xpath>
		<subSelector>
			<name>msd</name>
			<xpath>./description/para/text() | ./description/text() | ./description/section/para/text()</xpath>
		</subSelector>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</check>
<check>
  <id>missing.value.codes.1</id>
  <name>Missing Value Codes</name>
  <description><![CDATA[Missing value codes should be present for all attributes. Note that this only checks for the presence of a <missingValueCode> in each <attribute> and does not check the validity of the code values.]]></description>
  <type>interpretation</type>
  <level>OPTIONAL</level>
  <environment>rscript</environment>
  <code><![CDATA[
library(metadig)

check <- function() {
  # Skip check if no dataTables
  if(length(entityName) == 0) {
    return(list(status="SKIP", values=list(list(value="No data table descriptions are present, so cannot check attribute 'missing value codes'"))))
  }

  # Skip check if no attributes present
  if(!attributesPresent) {
    return(list(status="SKIP", values=list(list(value="No data table attributes are present, so cannot check missing value codes"))))
  }
  
  status <- "SUCCESS"
  outputList <- list()
  totalCount <- 0
  # Check the attribute
  # Check each dataTable for count of attributes with missing value codes defined
  for(iEntity in 1:length(entityName)) {
    thisEntityName <- entityName[[iEntity]]
    missingCodeCount <- 0
    thisAttrCount <- attributeCount[[iEntity]]
    thisCodeCount <- codeCount[[iEntity]] 
    # This dataTable is deficient in 'missing value codes'
    if(thisCodeCount < thisAttrCount) {
      status <- "FAILURE"
      missingCodeCount <- thisAttrCount - thisCodeCount
      outputList[[length(outputList)+1]] <- list(value=sprintf("Data table description '%s' does not have 'missing value codes' defined for %d of %d attributes", thisEntityName, missingCodeCount, thisCodeCount))
    } 
  }

  # Did we find any deficient dataTables?
  if(length(outputList > 0)) {
    return(list(status=status, values=outputList))
  } else {
    return(list(status="SUCCESS", values=list(list(value=sprintf("All attributes for all data table descriptions have 'missing value codes' defined.")))))
  }
}
result <- check()
mdq_result <- list(status=result$status, output=result$values) 
  
  ]]></code>
	<selector>
		<name>attributesPresent</name>
		<xpath>boolean(/eml/dataset/dataTable/attributeList/attribute)</xpath>
	</selector>
	<selector>
		<name>entityName</name>
		<xpath>/eml/dataset/dataTable</xpath>
		<subSelector>
			<name>entityNameSubSelector</name>
			<xpath>./entityName</xpath>
		</subSelector>
	</selector>
	<selector>
		<name>codeCount</name>
		<xpath>/eml/dataset/dataTable</xpath>
		<subSelector>
			<name>...</name>
			<xpath>count(./attributeList/attribute/missingValueCode)</xpath>
		</subSelector>
	</selector>
	<selector>
		<name>attributeCount</name>
		<xpath>/eml/dataset/dataTable</xpath>
		<subSelector>
			<name>...</name>
			<xpath>count(./attributeList/attribute)</xpath>
		</subSelector>
	</selector>

</check>
<check>
	
	
	<id>check.nsf.award.numbers.in.nsf.database.1</id>
	<name>NSF awards in database</name>
	<description>All entered NSF award numbers should be present in the NSF award database.</description>
	<type>identification</type>
	<level>OPTIONAL</level>
	<environment>rscript</environment>
	<code><![CDATA[
library(httr)
library(stringr)
NSFawardLength <- 7

if (is.null(awards)) {
  mdq_result <- list(status = "SKIP",
                     output = list(list(value = "No NSF award numbers are present in the metadata document so this check was skipped.")))

} else {
  # Clean up each award string so we can pass it to the HTTP API
  awards <- trimws(gsub("nsf award", "", tolower(awards)))
  # Extract the integer funding numbers from any other character left in the 'funding' element.
  awards <- str_extract(awards, "\\d+")
  # Make sure that all award numbers are the correct number of characters
  # The number may have been stripped of leading zeros, so add them back
  # in if necessary.
  awardFormat <- paste0("%0", NSFawardLength, "d")
  awards <- lapply(awards, function(x) {
    award <- x
    if(nchar(x) < NSFawardLength) {
        award <- sprintf(awardFormat, as.integer(x))
    }
    as.character(award)
  })

  # Search for each award
  responses <- lapply(awards, function(award) {
    tryCatch({
      req <- GET(paste0("https://arcticdata.io/api.nsf.gov/services/v1/awards.json?id=", award))
      stopifnot(req$status_code == 200) # Throw an error if the HTTP status isn't 200
      content(req)
    },
    error = function(e) {
      list()
    })
  })

  # Determine if each award was found
  is_found <- sapply(responses, function(r) ifelse(!is.null(r$response$award) && length(r$response$award) == 1, TRUE, FALSE))


  if (all(is_found)) {
    mdq_result <- list(status = "SUCCESS",
                       output = list(list(value = "All award numbers were found in the NSF award database.")))
  } else {

    outputs <- paste0("The award number '", awards[!is_found], "' was not found in the NSF award database.")
    mdq_result <- list(status = "ERROR",
    
                       output = lapply(outputs, function(message) { list(value = message)}))
  }
}

]]></code>
	<selector>
		<name>awards</name>
		<xpath>/*[local-name() = 'eml']/dataset/project/funding//text()[normalize-space()]</xpath>
	</selector>
</check>
<check>
	
	
	<id>check.nsf.award.numbers.present.1</id>
	<name>award numbers</name>
	<description>One or more award numbers must be entered.</description>
	<type>identification</type>
	<level>REQUIRED</level>
	<environment>rscript</environment>
	<code><![CDATA[
	library(stringr)
if (is.null(awards)) {
  status <- "FAILURE"
  output <- "No award numbers were found."
  mdq_result <- list(status = status,
                     output = list(list(value = output)))
} else if (length(awards) < 1) {
  status <- "FAILURE"
  output <- paste0("No award numbers were found when one or more were expected.")
  mdq_result <- list(status = status,
                     output = list(list(value = output)))
} else if (all(nchar(awards) <= 0)) {
  status <- "FAILURE"
  output <- "Of the award numbers found, none were non-zero in length."
  mdq_result <- list(status = status,
                     output = list(list(value = output)))
} else {
  status <- "SUCCESS"
  output <- "At least one award number was found."
  mdq_result <- list(status = status,
                     output = list(list(value = output)))
}]]></code>
	<selector>
		<name>awards</name>
		<xpath>/*[local-name() = 'eml']/dataset/project/funding//text()[normalize-space()]</xpath>
	</selector>
</check>
<check>
  <id>pair.plot.1</id>
  <name>Pair plot</name>
  <description>Show a pair / scatter-plot matrix plot. For each data object referenced in the metadata, attempts to download, read, then display the pair plot.</description>
  <type>interpretation</type>
  <level>INFO</level>
  <environment>rscript</environment>
  <code><![CDATA[
library(metadig)
library(data.table)
library(readxl)

supported_formats <- c("text/csv",
                     "text/tsv",
                     "text/plain",
                     "application/vnd.ms-excel",
                     "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")

if (length(names) <= 0) {
  success("No data files were described in the metadata, so unable to create a pair plot of the data.")
} else {
  for (i in seq_along(names)) {
    if (!(formats[i] %in% supported_formats)) {
      save_output(paste0("Skipped displaying the head of ", names[i], " because it wasn't in the list of supported formats for displaying."))
      next
    }

    # Convert ecogrid URis to DataONE resolve URIs
    url <- gsub("ecogrid:/knb/", "https://cn.dataone.org/cn/v2/resolve/", urls[i])

    path <- tryCatch({
      mdq_get(url, FALSE)
    },
    error = function(e) {
      e
    })

    if (inherits(path, "error")) {
      save_output(paste0("Something went wrong when trying to download ", names[i]))
      next
    }

    x <- tryCatch({
      if (formats[i] == "text/csv") {
        read.csv(path)
      } else if (formats[i] == "text/tsv") {
        read.delim(path)
      } else if (formats[i] == "text/plain") {
        fread(path)
      } else if (formats[i] == "application/vnd.ms-excel") {
        readxl:::read_xls(path)
      } else if (formats[i] == "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet") {
        readxl:::read_xlsx(path)
      }
    },
    error = function(e) {
      save_output(paste0("Failed to read file ", names[i], " at the following URL: ", url, "."))
      e
    })

    if (is.data.frame(x)) {
      save_output(capture.output(head(x, n = 10)))
      save_output(capture.output(tail(x, n = 10)))
    } else {
      save_output(paste0("Something went wrong when trying to read ", names[i]))
    }
  }
}
success()
]]></code>
  <selector>
    <name>names</name>
    <xpath>//dataset/otherEntity</xpath>
    <subSelector>
      <name>...</name>
      <xpath>./entityName</xpath>
    </subSelector>
  </selector>
  <selector>
    <name>formats</name>
    <xpath>//dataset/otherEntity</xpath>
    <subSelector>
      <name>...</name>
      <xpath>.//formatName</xpath>
    </subSelector>
  </selector>
  <selector>
    <name>urls</name>
    <xpath>//dataset/otherEntity</xpath>
    <subSelector>
      <name>...</name>
      <xpath>.//distribution/online/url</xpath>
    </subSelector>
  </selector>
    <selector>
    <name>pids</name>
    <xpath>//dataset/otherEntity</xpath>
    <subSelector>
      <name>...</name>
      <xpath>./@id</xpath>
    </subSelector>
  </selector>
</check>
<check>
   <id>provenance.processStepCode.present.1</id>
   <name>Provenance Process Step Code Present</name>
   <description>Check that provenance process step software is specified.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # Provenace step source code is not present
  if 'provenanceProcessStepCode' not in globals() or provenanceProcessStepCode is None:
    output = "Provenance process step source code (software) was not found."
    status = "FAILURE"
    return False
        
  if (mvar.isBlank(provenanceProcessStepCode)):
    output = "The provenance process step code is blank."   
    status = "FAILURE"
    return False
  else:
    # Check if provenance process step code is a single string or arrayList
    if(isinstance(provenanceProcessStepCode, str) or isinstance(provenanceProcessStepCode, unicode)):
      output = "Provenance process step code '{}' was found".format(provenanceProcessStepCode)
    elif (isinstance(provenanceProcessStepCode, ArrayList)):
      output = "A provenance process step code (software) '{}' was found (first of {} scales)".format(provenanceProcessStepCode[0].strip(), provenanceProcessStepCode.size())
    else:
      output = "A provenance process step code (software)'{}' was found)".format(provenanceProcessStepCode)
    status = "SUCCESS"
    return True
      ]]></code>
   <selector>
      <name>attributeMeasurementScale</name>
      <xpath>/eml/*/methods/methodsStep/software</xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>provenance.sourceEntity.present.1</id>
   <name>Provenance Source Entity Present</name>
   <description>Check if a lineage source entity is specified.</description>
   <type>Reusable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
 
  if ('Source' in globals() and Source is not None and Source):
    output = "A lineage source is present"
    status = "SUCCESS"
    return True
  else:
    output = "A lineage source is not present"
    status = "FAILURE"
    return False

      ]]></code>
   <selector>
      <name>Source</name>
      <xpath>boolean(/*/resourceLineage/LI_Lineage/source/LI_Source
          or /*/resourceLineage/LI_Lineage/source/LE_Source
          or /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/source/LI_Source
          or /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/source/LE_Source
          or /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LI_ProcessStep/source/LI_Source
          or /*/dataQualityInfo/DQ_DataQuality/lineage/LI_Lineage/processStep/LE_ProcessStep/source/LE_Source)
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
   <id>provenance.trace.present.1</id>
   <name>Provenance Trace Present</name>
   <description>Check that provenance information is present.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
   global output
   global status
   
   import metadig.variable as mvar

   # An attribute definition is not present
   if 'provenanceTrace' not in globals() or provenanceTrace is None:
     output = "Provenance trace information was not found."
     status = "FAILURE"
     return False
         
   if (mvar.isBlank(provenanceTrace)):
     output = "Provenance trace information is blank."
     status = "FAILURE"
     return False
   else:
     output = "Provenance trace information was found."
     status = "SUCCESS"
     return True
      ]]></code>
   <selector>
      <name>provenanceTrace</name>
      <xpath>
          /*/resourceLineage/LI_Lineage/processStep/LI_ProcessStep |
          /*/dataQualityInfo/DQ_DataQuality/lineage/*/processStep |
          /*/dataQualityInfo/DQ_DataQuality/lineage/*/source/*/sourceStep/LI_ProcessStep |
          /eml/*/methods/methodStep/dataSource |
          /eml/*/methods/methodStep/subStep/dataSource
      </xpath>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</check>
<check>
  <id>check.pub.date.2</id>
  <name>Publication date</name>
  <description>Publication date should be present</description>
  <type>identification</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code>
    library(metadig)
    
    if (pubDatePresent) {
      success("A publication date is present.")
    } else {
      failure("A publication date is not present.") 
    }
  </code>
  <selector namespaceAware="true">
    <name>pubDatePresent</name>
    <xpath>boolean(/*[local-name() = 'eml']/dataset/pubDate) or
      boolean(/*/gmd:identificationInfo/*/gmd:citation/gmd:CI_Citation/gmd:date) or
      boolean(/*/dcterms:dateSubmitted)
    </xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
    <name>Dryad Data Package and Data File Modules</name>
    <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
  </dialect>
  <dialect>
    <name>ISO 19115 and ISO 19115-2</name>
    <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
</check>
<check>
  <id>check.pub.date.1</id>
  <name>Publication date</name>
  <description>Publication date should be present</description>
  <type>identification</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[

    library(metadig)
    
    if (length(pub_date) >= 1) {
      success("A publication date is present.")
    } else {
      failure("A publication date is not present.") 
    }
  ]]></code>
  <selector>
    <name>pub_date</name>
    <xpath>/eml/dataset/pubDate</xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
</check>
<check>
	
	
	<id>sampling.description.present.1</id>
	<name>Sampling description present</name>
	<description>Checks if a sampling description is present in the methods section.</description>
	<type>interpretation</type>
	<level>OPTIONAL</level>
	<environment>rscript</environment>
	<code><![CDATA[
    check <- function() {
      library(base)
      # These variables are defined by the MQE from the <xpath> selectors.
      # "samplingDescriptionPresent" - is a methods sampling description present?
      if(samplingDescriptionPresent) {
        return(list(status="SUCCESS", output="A sampling description is present in the methods section."))
      } else {
        return(list(status="FAILURE", output="A sampling description is not present in the methods section."))
      }
    }
  
    result <- check()
    mdq_result <- list(status=result$status, output=list(list(value=result$output)))    
    ]]></code>
	<selector>
		<name>samplingDescriptionPresent</name>
		<xpath>boolean(/eml/dataset/methods/sampling/samplingDescription)</xpath>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</check>
<check>
	
	
	<id>check.sampling.study.extent.present.1</id>
	<name>Sampling extent description present</name>
	<description>Checks that a sampling study extent is present.</description>
	<type>interpretation</type>
	<level>OPTIONAL</level>
	<environment>rscript</environment>
	<code><![CDATA[
    check <- function() {
      library(base)
      # These variables are defined by the MQE from the <xpath> selectors.
      # "extendDescriptionPresent" - is a methods sampling description present?
      if(extentDescriptionPresent) {
        return(list(status="SUCCESS", output="A sampling study extent description is present in the methods section."))
      } else {
        return(list(status="FAILURE", output="A sampling study extent description is not present in the methods section."))
      }
    }
  
    result <- check()
    mdq_result <- list(status=result$status, output=list(list(value=result$output)))    
    ]]></code>
	<selector>
		<name>extentDescriptionPresent</name>
		<xpath>boolean(/eml/dataset/methods/sampling/studyExtent/description)</xpath>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</check>
<check>
	
	
	<id>check.taxonomic.coverage.1</id>
	<name>Taxonomic coverage present</name>
	<description>Check that a taxonomic coverage exists at the dataset level, or at least one entity's level, or one attribute's level.</description>
	<type>discovery</type>
	<level>INFO</level>
	<environment>rscript</environment>
	<code><![CDATA[
	check <- function() {
      library(base)
      # These variables are defined by the MQE from the <xpath> selectors.
      # "datasetTaxonomicCoverage" - is a taxonomic coverage present at the dataset level
      # "entityTaxonomicCoverage" - is a taxonomic coverage present at the entity level
      # "attributeTaxonomicCoverage" - is a taxonomic coverage present at the attribute level
      
      # Return as soon as a taxonomic coverage is found, checking them in order of dataset, entity, attribute.
      if(datasetTaxonomicCoverage) {
        return(list(status = "SUCCESS", output = sprintf("A taxonomic coverage is present at the dataset level.")))
      } else if(entityTaxonomicCoverage) {
        return(list(status = "SUCCESS", output = sprintf("A taxonomic coverage is present at the entity level.")))
      } else if(attributeTaxonomicCoverage) {
        return(list(status = "SUCCESS", output = sprintf("A taxonomic coverage is present at the attribute level.")))
      } else {
        return(list(status = "FAILURE", output = sprintf("A taxonomic coverage was not found at the dataset, entity or attribute levels.")))
      }
     
      return(list(status=status, output=output))
    }
    result <- check()
    mdq_result <- list(status=result$status, output=list(list(value=unlist(result$output))))
    ]]></code>

	<!-- Taxonomic coverage at the dataset level -->
	<selector>
		<name>datasetTaxonomicCoverage</name>
		<xpath>boolean(/*[local-name() = 'eml']/dataset/coverage/taxonomicCoverage)</xpath>
	</selector>
	<!-- Taxonomic coverage at the entity level. Use the required 'entityName' 
		to ensure that entities are being selected. -->
	<selector>
		<name>entityTaxonomicCoverage</name>
		<xpath>boolean(/*[local-name() = 'eml']/dataset/*/entityName/../coverage/taxonomicCoverage)
			</xpath>
	</selector>
	<!-- Taxonomic coverage can be at the attribute level -->
	<selector>
		<name>attributeTaxonomicCoverage</name>
		<xpath>boolean(/*[local-name() = 'eml']/dataset/*/attributeList/attribute/coverage/taxonomicCoverage)
			</xpath>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</check>
<check>
  <id>check.temporal.coverage.2</id>
  <name>Temporal coverage</name>
  <description>Temporal coverage should be present at the dataset level</description>
  <type>discovery</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[
  check <- function() {
    if(!coveragePresent) {
      return(list(status = "FAILURE", output = sprintf("A description of this dataset's temporal coverage is not present.")))
    } else {
      return(list(status = "SUCCESS", output = sprintf("A description of this dataset's temporal coverage is present.")))
    }
  }
  result <- check()
  mdq_result <- list(status=result$status, output=list(list(value=result$output)))
  ]]></code>
  <selector namespaceAware="true">
    <name>coveragePresent</name>
    <xpath>boolean(/*[local-name() = 'eml']/dataset/coverage/temporalCoverage) or
           boolean(/*/gmd:identificationInfo/*/gmd:extent/*/gmd:temporalElement/*/gmd:extent) or
           boolean(/*/dcterms:temporal)
    </xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
    <name>Dryad Data Package and Data File Modules</name>
    <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
  </dialect>
  <dialect>
    <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
    <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
</check>
<check>
  <id>check.temporal.coverage.1</id>
  <name>Temporal coverage</name>
  <description>Temporal coverage should be present at the dataset level</description>
  <type>discovery</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[
  check <- function() {
    if(!coveragePresent) {
      return(list(status = "FAILURE", output = sprintf("A description of this dataset's temporal coverage is not present.")))
    } else {
      return(list(status = "SUCCESS", output = sprintf("A description of this dataset's temporal coverage is present.")))
    }
  }
  result <- check()
  mdq_result <- list(status=result$status, output=list(list(value=result$output)))
  ]]></code>
  <selector>
    <name>coveragePresent</name>
    <xpath>boolean(/eml/dataset/coverage/temporalCoverage)</xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
</check>
<check>
  <id>check.temporal.start.year.1</id>
  <name>Temporal coverage start year</name>
  <description>Temporal coverage should include a start year</description>
  <type>discovery</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[
    library(metadig)
    check_presence(begin_date)
  ]]></code>
  <selector>
    <name>begin_date</name>
    <xpath>/eml/dataset/coverage/temporalCoverage/rangeOfDates/beginDate/calendarDate | /eml/dataset/coverage/temporalCoverage/singleDateTime/calendarDate</xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
</check>
<check>
  <id>check.title.1</id>
  <name>Title</name>
  <description>Title should be present</description>
  <type>identification</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[
    library(metadig)

    if (length(title) <= 0) {
      failure("No title(s) were found.")
    } else {
      success("One or more titles were found.")
    }
  ]]></code>
  <selector>
    <name>title</name>
    <xpath>
    (/eml/dataset/title)
    |
    (/*/identificationInfo/*/citation/CI_Citation/title/CharacterString)</xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
      <name>iso</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
    </dialect>
</check>
<check>
  <id>check.usage.is.cc.2</id>
  <name>Usage</name>
  <description>Usage should be Creative Commons</description>
  <type>identification</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[
library(stringr)

# CC-BY: This work is licensed under the Creative Commons Attribution 4.0 International License.\nTo view a copy of this license, visit http://creativecommons.org/licenses/by/4.0/."
# CC-0:"This work is dedicated to the public domain under the Creative Commons Universal 1.0 Public Domain Dedication.\nTo view a copy of this dedication, visit https://creativecommons.org/publicdomain/zero/1.0/."

phrases <- c("http[s]*://creativecommons.org/licenses/by/4.0", "http[s]*://creativecommons.org/publicdomain/zero/1.0")

if (length(rights) == 0) {
  status <- "FAILURE"
  message <- "The document is not licensed with a Creative Commons CC-0 or CC-BY license."
} else {
  if (length(rights) > 1) {
    rights[[1]] <- paste(rights, collapse = '')
  }

  if (str_detect(rights[[1]], phrases[[1]])) {
    status <- "SUCCESS"
    message <- "The document is licensed with a Creative Commons CC-BY license."
  } else if (str_detect(rights[[1]], phrases[[2]])) {
    status <- "SUCCESS"
    message <- "The document is licensed with a Creative Commons CC-0 license."
  } else {
    status <- "FAILURE"
    message <- "The document is not licensed with a Creative Commons CC-0 or CC-BY license."
  }
}

mdq_result <- list(status = status,
                   output = list(list(value = message)))
  ]]></code>
  <selector namespaceAware="true">
    <name>rights</name>
    <!--  Remove blank text nodes from consideration -->
    <xpath>/*[local-name() = 'eml']/dataset/intellectualRights//text()[not(self::text()[not(normalize-space())])] |
      /*/gmd:identificationInfo/*/gmd:resourceConstraints/gmd:MD_LegalConstraints |
      /*/dcterms:rights
    </xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
    <name>Dryad Data Package and Data File Modules</name>
    <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
  </dialect>
  <dialect>
    <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
    <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
</check>
<check>
  <id>check.usage.is.cc.1</id>
  <name>Usage</name>
  <description>Usage should be Creative Commons</description>
  <type>identification</type>
  <level>REQUIRED</level>
  <environment>rscript</environment>
  <code><![CDATA[
library(stringr)

# CC-BY: This work is licensed under the Creative Commons Attribution 4.0 International License.\nTo view a copy of this license, visit http://creativecommons.org/licenses/by/4.0/."
# CC-0:"This work is dedicated to the public domain under the Creative Commons Universal 1.0 Public Domain Dedication.\nTo view a copy of this dedication, visit https://creativecommons.org/publicdomain/zero/1.0/."

phrases <- c("http[s]*://creativecommons.org/licenses/by/4.0", "http[s]*://creativecommons.org/publicdomain/zero/1.0")

if (length(rights) == 0) {
  status <- "FAILURE"
  message <- "The document is not licensed with a Creative Commons CC-0 or CC-BY license."
} else if (length(rights) > 1) {
  status <- "FAILURE"
  message <- "More than one license was found which was an unexpected state."
} else {
  if (str_detect(rights[[1]], phrases[[1]])) {
    status <- "SUCCESS"
    message <- "The document is licensed with a Creative Commons CC-BY license."
  } else if (str_detect(rights[[1]], phrases[[2]])) {
    status <- "SUCCESS"
    message <- "The document is licensed with a Creative Commons CC-0 license."
  } else {
    status <- "FAILURE"
    message <- "The document is not licensed with a Creative Commons CC-0 or CC-BY license."
  }
}

mdq_result <- list(status = status,
                   output = list(list(value = message)))
  ]]></code>
  <selector>
    <name>rights</name>
    <!--  Remove blank text nodes from consideration -->
    <xpath>/eml/dataset/intellectualRights//text()[not(self::text()[not(normalize-space())])]</xpath>
  </selector>
  <dialect>
    <name>eml</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
</check>
</mdq:allChecks>

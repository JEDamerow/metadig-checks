<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
   <id>dataset.keywordType.present.1</id>
   <name>Dataset Keyword Type Present</name>
   <description>Check if each keyword has a type specified..</description>
   <type>Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  missing = []
  # Limit the number of missing keywords that will be listed
  missingListMax = 5
  # For each keyword, check if a type is specified
  if(len(keywords) == 0):
    output = "No keywords found, unable to check for keyword types."
    status = "SKIP"
    return True
     
  # For each keyword, check if a type is specified.
  # Note that the quality engine returns xpath selections as ArrayLists when 
  # multiple items are returned.
  for i in range(0, len(keywords)):
    keywordType = keywords.get(i)
    thisKeywordName = keywordNames.get(i)
    if(thisKeywordName is None):
      thisKeywordName = "no name"
    elif(isinstance(thisKeywordName, int)):
      thisKeywordName = str(thisKeywordName)
    elif(isinstance(thisKeywordName, ArrayList)):
      for j in range(0, len(thisKeywordName)):
        testStr = thisKeywordName.get(j)
        # The quality engine assumes that a string that looks like an
        # integer should be converted to an int, so convert it to
        # a string!
        if(isinstance(testStr, int)):
          testStr = str(testStr)
          
        testStr = testStr.strip()
        if(testStr == ""):
          continue
        else:
          thisKeywordName = testStr
          break
          
    if keywordType is None:
      if(len(missing) > missingListMax):
        missing.append('...')
        break
      else: 
        missing.append(thisKeywordName)
        continue
          
    if (mvar.isBlank(keywordType)):
      if(len(missing) > missingListMax):
        missing.append('...')
        break
      else:
        missing.append(thisKeywordName)
        continue

  if(len(missing) > 0):
    output = "The following keywords do not have a type specified: '{}'".format(', '.join(missing))
    status = "FAILURE"
    return False
  else:
    output = "All {} keywords have a type specified".format(len(keywords))
    status = "SUCCESS"
    return True

    ]]></code>
   <selector>
      <name>keywords</name>
      <xpath>
          /eml/dataset/keywordSet/keyword |
          /*/identificationInfo/*/descriptiveKeywords/MD_Keywords/keyword
      </xpath>
      <subSelector>
        <name>type</name>
        <xpath>
            attribute::keywordType |
            ../type/MD_KeywordTypeCode
        </xpath>
      </subSelector>
    </selector>
    <selector>
      <name>keywordNames</name>
      <xpath>
          /eml/dataset/keywordSet/keyword |
          /*/identificationInfo/*/descriptiveKeywords/MD_Keywords/keyword
      </xpath>
      <subSelector>
        <name>name</name>
        <xpath>./text() | ./*/text()</xpath>
      </subSelector>
   </selector>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</mdq:check>

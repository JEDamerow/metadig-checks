<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
   <id>entity.description.present.1</id>
   <name>Entity Description Present</name>
   <description>Check that a description is available for every entity.</description>
   <type>Reusable</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  # Check if a entity description is present for each attribute.
  
  if not entityPresent:
    output = "No entities are  present so cannot check their descriptions, skipping this check."
    status = "SKIP"
    return True 
    
  entityCount = 0
  missing = []
    
  for i in range(0, len(entities)):
    entityCount += 1
    description = entities.get(i)
    name = entityNames.get(i)
    # No description for this entity was specified
    if(description == None):
      if(name == None): 
        missing.append("entity #{}".format(i))
      else:
        missing.append(name)
    else:
      # Description value should be a string or an array of strings
      if(isinstance(description, ArrayList)):
        continue
      elif(not(isinstance(description, str) or isinstance(description, unicode))):
        if(name == None): 
          missing.append("entity #{}".format(i))
        else:
          missing.append(name)
      else:
        continue
  
  if(len(missing) > 0):
    output = "The following entities are missing a description: '{}'".format(', '.join(missing))
    status = "FAILURE"
    return False
  else:
    output = "All {} entities have descriptions".format(entityCount)
    status = "SUCCESS"
    return True
    ]]></code>
   <selector>
      <name>entityPresent</name>
      <xpath>boolean(
          /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity] or
          /*/contentInfo/MD_CoverageDescription or
          /*/contentInfo/MI_CoverageDescription)
      </xpath>
   </selector>
   <selector>
      <name>entities</name>
      <xpath>
          /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity] |
          /*/contentInfo/MD_CoverageDescription |
          /*/contentInfo/MI_CoverageDescription
      </xpath>
      <subSelector>
         <name>description</name>
         <xpath>
             ./entityDescription |
             ./attributeDescription/RecordType
         </xpath>
     </subSelector>
   </selector>
   <selector>
      <name>entityNames</name>
      <xpath>
          /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity] |
          /*/contentInfo/MD_CoverageDescription |
          /*/contentInfo/MI_CoverageDescription
      </xpath>
      <!-- Coverage descriptions don't really have a specific name, so use the description instead -->
      <subSelector>
         <name>names</name>
         <xpath>
             ./entityName | 
             ./attributeDescription/RecordType
         </xpath>
     </subSelector>
   </selector>

   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</mdq:check>

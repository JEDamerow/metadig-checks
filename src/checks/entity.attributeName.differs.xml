<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
   <id>entity.attributeName.differs.1</id>
   <name>Entity Attribute Names Differ from Definitions</name>
   <description>Check that attribute defintions are not simply the attribute name.</description>
   <type>Accessible</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  
  definitionIsSame = []
  missingDefinitions = []
  maxPrint = 5
  
  # For each entity, check that the attributes defined for it have unique names
  if(len(attributeDefinition) == 0):
    output = "No entity definitions found, unable to check that attribute names differ from definitions."
    status = "FAILURE"
    return False
  
  # Check each definition - see if it is blank or missing, then check if it is the same as the 
  # name
  for i in range(0, len(attributeDefinition)):
    definition = attributeDefinition.get(i)
    name = attributeName.get(i)
    # No definition for this attribute
    if(definition == None):
      missingDefinitions.append(name)
      continue
    else:
      # If only one definition element for this attribute, the quality engine will return it as a string.
      # If multiples exist, it will be returned as a Java Arraylist (jython)
      if(isinstance(definition, str) or isinstance(definition, unicode)):
        if(name == definition):
          definitionIsSame.append(name)
        continue
      else:
        continue
        
  if(len(definitionIsSame) > 0):
    # Only print the max entries allowed - otherwise the report could get unweildy  
    output = "These attributes (out of {} total) have names and defintions that are the same: {}".format(len(attributeDefinition), ', '.join(definitionIsSame[0:maxPrint]))
    if(len(definitionIsSame) > maxPrint):
      output += ", ..."
    status = "FAILURE"
    return False
  else:
    output = "All {} attributes have definitions that differ from the name".format(len(attributeDefinition))
    status = "SUCCESS"
    return True 
      ]]></code>
      <selector>
         <name>attributeDefinitionPresent</name>
         <xpath>boolean(
             /eml/dataset/*/attributeList/attribute or
             /*/contentInfo/MD_CoverageDescription/attributeGroup/*/attribute/*/description or
             /*/contentInfo/MI_CoverageDescription/attributeGroup/*/attribute/*/description or
             /*/contentInfo/*/dimension/MI_Band/descriptor or
             /*/contentInfo/*/dimension/MD_Band/descriptor)</xpath>
      </selector>
      <selector>
         <name>attributeDefinition</name>
         <xpath>/eml/dataset/*/attributeList/attribute |
             /*/contentInfo/MD_CoverageDescription/attributeGroup/MD_AttributeGroup/attribute |
             /*/contentInfo/*/dimension/MI_Band |
             /*/contentInfo/*/dimension/MD_Band 
         </xpath>
         <subSelector>
            <name>definition</name>
            <xpath>
                ./*/description |
                ./descriptor/*/text() |
                ./attributeDefinition
            </xpath>
        </subSelector>
      </selector>
      <selector>
         <name>attributeName</name>
         <xpath>
             /eml/dataset/*/attributeList/attribute |
             /*/contentInfo/*/dimension/MI_Band |
             /*/contentInfo/*/dimension/MD_Band
         </xpath>
         <subSelector>
            <name>name</name>
            <xpath>
                ./attributeName | 
                ./*/name/code/*/text() |
                ./sequenceIdentifier/MemberName/aName/*/text() |
                ./sequenceIdentifier/MemberName/aName/*/text()
            </xpath>
        </subSelector>
      </selector>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</mdq:check>

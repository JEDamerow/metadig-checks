<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
   <id>entity.attributeDefinition.sufficient.1</id>
   <name>Entity Attribute Definition Sufficient</name>
   <description>Check that each attribute definition is sufficient (e.g. word count).</description>
   <type>Interoperable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar
  import re
  
  minWordCount = 5
  maxWordCount = 20
  maxPrint = 5
  
  # Check if definitions are present for each attribute.
  
  if not attributeDefinitionPresent:
    output = "No attributes are present, so unable to check if defintions are sufficient. Check skipped."
    status = "SKIP"
    return True 
    
  attributeCount = 0
  insufficient = []
  
  # Check each attribute definition to see if it is missing or blank.
  for i in range(0, len(attributeDefinition)):
    attributeCount += 1
    definition = attributeDefinition.get(i)
    name = attributeName.get(i)
    # No definition for this attribute was specified
    if(definition == None or len(definition) == 0):
      insufficient.append(name)
    else:
      if(mvar.isBlank(definition)):
        insufficient.append(name)
        continue
          
      # If for some reason there are multiple definitions for this entity, just use the first one
      if(isinstance(definition, ArrayList)):
        definition = definition.get(0)
      words = re.split('\s+', definition.strip())
      if(len(words) < minWordCount):
        # Keep the list short for printing
        insufficient.append(name)
  
  # Let the user know if defintions are missing, but don't fail the check based
  # on this (unless all are missing), as that is part of a different check
  if(len(insufficient) > 0):
    output = "{} attributes do not definitions. ".format(len(insufficient))
  else:
    output = ""
    
  if(len(insufficient) > 0):
    # Only print the max entries allowed - otherwise the report could get unweildy  
    output = "These attribute (of {} total) have defintions less that {} words: '{}'".format(attributeCount, minWordCount, ", ".join(insufficient[0:maxPrint]))
    if(len(insufficient) > maxPrint):
      output += ", ..."
    status = "FAILURE"
    return False
  else:
    output = "All {} attribute have sufficient definitions.".format(attributeCount)
    status = "SUCCESS"
    return True
    ]]></code>
   <selector>
      <name>attributeDefinitionPresent</name>
      <xpath>boolean(
          /eml/dataset/*/attributeList/attribute or
          /*/contentInfo/MD_CoverageDescription/attributeGroup/MD_AttributeGroup/attribute or
          /*/contentInfo/*/dimension/MI_Band or
          /*/contentInfo/*/dimension/MD_Band)</xpath>
   </selector>
   <selector>
      <name>attributeDefinition</name>
      <xpath>/eml/dataset/*/attributeList/attribute |
          /*/contentInfo/MD_CoverageDescription/attributeGroup/MD_AttributeGroup/attribute |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band 
      </xpath>
      <subSelector>
         <name>definition</name>
         <xpath>
             ./*/description |
             ./descriptor/*/text() |
             ./attributeDefinition
         </xpath>
     </subSelector>
   </selector>
   <selector>
      <name>attributeName</name>
      <xpath>
          /eml/dataset/*/attributeList/attribute |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band
      </xpath>
      <subSelector>
         <name>name</name>
         <xpath>
             ./attributeName | 
             ./*/name/code/*/text() |
             ./sequenceIdentifier/MemberName/aName/*/text() |
             ./sequenceIdentifier/MemberName/aName/*/text()
         </xpath>
     </subSelector>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</mdq:check>
